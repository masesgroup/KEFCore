{
  "api/MASES.EntityFrameworkCore.KNet.Design.Internal.KafkaCSharpRuntimeAnnotationCodeGenerator.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Design.Internal.KafkaCSharpRuntimeAnnotationCodeGenerator.html",
    "title": "Class KafkaCSharpRuntimeAnnotationCodeGenerator | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaCSharpRuntimeAnnotationCodeGenerator Namespace MASES.EntityFrameworkCore.KNet.Design.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaCSharpRuntimeAnnotationCodeGenerator : CSharpRuntimeAnnotationCodeGenerator, ICSharpRuntimeAnnotationCodeGenerator Inheritance object CSharpRuntimeAnnotationCodeGenerator KafkaCSharpRuntimeAnnotationCodeGenerator Implements ICSharpRuntimeAnnotationCodeGenerator Inherited Members CSharpRuntimeAnnotationCodeGenerator.Generate(IModel, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IEntityType, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IComplexProperty, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IComplexType, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IProperty, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IServiceProperty, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IKey, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IForeignKey, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(INavigation, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(ISkipNavigation, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(IIndex, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(ITrigger, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Generate(ITypeMappingConfiguration, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.GenerateSimpleAnnotations(CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.GenerateSimpleAnnotation(string, string, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.AddNamespace(Type, ISet<string>) CSharpRuntimeAnnotationCodeGenerator.Create(ValueConverter, CSharpRuntimeAnnotationCodeGeneratorParameters, ICSharpHelper) CSharpRuntimeAnnotationCodeGenerator.Create(ValueComparer, CSharpRuntimeAnnotationCodeGeneratorParameters, ICSharpHelper) CSharpRuntimeAnnotationCodeGenerator.CreateJsonValueReaderWriter(JsonValueReaderWriter, CSharpRuntimeAnnotationCodeGeneratorParameters, ICSharpHelper) CSharpRuntimeAnnotationCodeGenerator.CreateJsonValueReaderWriter(Type, CSharpRuntimeAnnotationCodeGeneratorParameters, ICSharpHelper) CSharpRuntimeAnnotationCodeGenerator.Create(CoreTypeMapping, CSharpRuntimeAnnotationCodeGeneratorParameters, ValueComparer, ValueComparer, ValueComparer) CSharpRuntimeAnnotationCodeGenerator.CreateDefaultTypeMapping(CoreTypeMapping, CSharpRuntimeAnnotationCodeGeneratorParameters) CSharpRuntimeAnnotationCodeGenerator.Dependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaCSharpRuntimeAnnotationCodeGenerator(CSharpRuntimeAnnotationCodeGeneratorDependencies) Default initializer public KafkaCSharpRuntimeAnnotationCodeGenerator(CSharpRuntimeAnnotationCodeGeneratorDependencies dependencies) Parameters dependencies CSharpRuntimeAnnotationCodeGeneratorDependencies CSharpRuntimeAnnotationCodeGeneratorDependencies"
  },
  "api/MASES.EntityFrameworkCore.KNet.Design.Internal.KafkaDesignTimeServices.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Design.Internal.KafkaDesignTimeServices.html",
    "title": "Class KafkaDesignTimeServices | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDesignTimeServices Namespace MASES.EntityFrameworkCore.KNet.Design.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaDesignTimeServices : IDesignTimeServices Inheritance object KafkaDesignTimeServices Implements IDesignTimeServices Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfigureDesignTimeServices(IServiceCollection) Configures design-time services. Use this method to override the default design-time services with your own implementations. public virtual void ConfigureDesignTimeServices(IServiceCollection serviceCollection) Parameters serviceCollection IServiceCollection The design-time service collection."
  },
  "api/MASES.EntityFrameworkCore.KNet.Design.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Design.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Design.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Design.Internal Classes KafkaCSharpRuntimeAnnotationCodeGenerator This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaDesignTimeServices This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.Diagnostics.Internal.KafkaLoggerExtensions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Diagnostics.Internal.KafkaLoggerExtensions.html",
    "title": "Class KafkaLoggerExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaLoggerExtensions Namespace MASES.EntityFrameworkCore.KNet.Diagnostics.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static class KafkaLoggerExtensions Inheritance object KafkaLoggerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ChangesSaved(IDiagnosticsLogger<Update>, IEnumerable<IUpdateEntry>, int) public static void ChangesSaved(this IDiagnosticsLogger<DbLoggerCategory.Update> diagnostics, IEnumerable<IUpdateEntry> entries, int rowsAffected) Parameters diagnostics IDiagnosticsLogger<DbLoggerCategory.Update> entries IEnumerable<IUpdateEntry> rowsAffected int TransactionIgnoredWarning(IDiagnosticsLogger<Transaction>) public static void TransactionIgnoredWarning(this IDiagnosticsLogger<DbLoggerCategory.Database.Transaction> diagnostics) Parameters diagnostics IDiagnosticsLogger<DbLoggerCategory.Database.Transaction>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Diagnostics.Internal.KafkaLoggingDefinitions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Diagnostics.Internal.KafkaLoggingDefinitions.html",
    "title": "Class KafkaLoggingDefinitions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaLoggingDefinitions Namespace MASES.EntityFrameworkCore.KNet.Diagnostics.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaLoggingDefinitions : LoggingDefinitions Inheritance object LoggingDefinitions KafkaLoggingDefinitions Inherited Members LoggingDefinitions.LogServiceProviderCreated LoggingDefinitions.LogManyServiceProvidersCreated LoggingDefinitions.LogMappedEntityTypeIgnored LoggingDefinitions.LogMappedNavigationIgnored LoggingDefinitions.LogMappedPropertyIgnored LoggingDefinitions.LogMappedComplexPropertyIgnored LoggingDefinitions.LogServiceProviderDebugInfo LoggingDefinitions.LogContextInitialized LoggingDefinitions.LogOldModelVersion LoggingDefinitions.LogExceptionDuringQueryIteration LoggingDefinitions.LogExceptionDuringSaveChanges LoggingDefinitions.LogDetectChangesStarting LoggingDefinitions.LogDetectChangesCompleted LoggingDefinitions.LogPropertyChangeDetected LoggingDefinitions.LogPropertyChangeDetectedSensitive LoggingDefinitions.LogForeignKeyChangeDetected LoggingDefinitions.LogForeignKeyChangeDetectedSensitive LoggingDefinitions.LogCollectionChangeDetected LoggingDefinitions.LogCollectionChangeDetectedSensitive LoggingDefinitions.LogSaveChangesCanceled LoggingDefinitions.LogSkipCollectionChangeDetected LoggingDefinitions.LogSkipCollectionChangeDetectedSensitive LoggingDefinitions.LogStringEnumValueInJson LoggingDefinitions.LogReferenceChangeDetected LoggingDefinitions.LogReferenceChangeDetectedSensitive LoggingDefinitions.LogCascadeDelete LoggingDefinitions.LogCascadeDeleteSensitive LoggingDefinitions.LogCascadeDeleteOrphan LoggingDefinitions.LogCascadeDeleteOrphanSensitive LoggingDefinitions.LogStartedTracking LoggingDefinitions.LogStartedTrackingSensitive LoggingDefinitions.LogStateChanged LoggingDefinitions.LogStateChangedSensitive LoggingDefinitions.LogValueGenerated LoggingDefinitions.LogValueGeneratedSensitive LoggingDefinitions.LogTempValueGenerated LoggingDefinitions.LogTempValueGeneratedSensitive LoggingDefinitions.LogSaveChangesStarting LoggingDefinitions.LogSaveChangesCompleted LoggingDefinitions.LogContextDisposed LoggingDefinitions.LogIncludingNavigation LoggingDefinitions.LogQueryCanceled LoggingDefinitions.LogQueryExecutionPlanned LoggingDefinitions.LogSensitiveDataLoggingEnabled LoggingDefinitions.LogRowLimitingOperationWithoutOrderBy LoggingDefinitions.LogPossibleUnintendedCollectionNavigationNullComparison LoggingDefinitions.LogPossibleUnintendedReferenceComparison LoggingDefinitions.LogInvalidIncludePath LoggingDefinitions.LogDuplicateDependentEntityTypeInstance LoggingDefinitions.LogShadowPropertyCreated LoggingDefinitions.LogShadowForeignKeyPropertyCreated LoggingDefinitions.LogCollectionWithoutComparer LoggingDefinitions.LogExecutionStrategyRetrying LoggingDefinitions.LogNavigationLazyLoading LoggingDefinitions.LogLazyLoadOnDisposedContext LoggingDefinitions.LogDetachedLazyLoading LoggingDefinitions.LogRedundantAddServicesCall LoggingDefinitions.LogRedundantIndexRemoved LoggingDefinitions.LogIncompatibleMatchingForeignKeyProperties LoggingDefinitions.LogAmbiguousEndRequired LoggingDefinitions.LogForeignKeyAttributesOnBothNavigations LoggingDefinitions.LogRequiredAttributeOnCollection LoggingDefinitions.LogRequiredAttributeOnSkipNavigation LoggingDefinitions.LogForeignKeyAttributesOnBothProperties LoggingDefinitions.LogConflictingForeignKeyAttributesOnNavigationAndProperty LoggingDefinitions.LogMultipleInversePropertiesSameTarget LoggingDefinitions.LogConflictingShadowForeignKeys LoggingDefinitions.LogMultipleNavigationProperties LoggingDefinitions.LogMultiplePrimaryKeyCandidates LoggingDefinitions.LogNonOwnershipInverseNavigation LoggingDefinitions.LogFirstWithoutOrderByAndFilter LoggingDefinitions.LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning LoggingDefinitions.LogNonDefiningInverseNavigation LoggingDefinitions.LogOptimisticConcurrencyException LoggingDefinitions.LogRedundantForeignKey LoggingDefinitions.LogConflictingKeylessAndKeyAttributes LoggingDefinitions.LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction LoggingDefinitions.LogNavigationBaseIncluded LoggingDefinitions.LogNavigationBaseIncludeIgnored LoggingDefinitions.LogQueryCompilationStarting object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LogSavedChanges public EventDefinitionBase? LogSavedChanges Field Value EventDefinitionBase LogTransactionsNotSupported public EventDefinitionBase? LogTransactionsNotSupported Field Value EventDefinitionBase"
  },
  "api/MASES.EntityFrameworkCore.KNet.Diagnostics.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Diagnostics.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Diagnostics.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Diagnostics.Internal Classes KafkaLoggerExtensions This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaLoggingDefinitions This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.Diagnostics.KafkaEventId.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Diagnostics.KafkaEventId.html",
    "title": "Class KafkaEventId | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaEventId Namespace MASES.EntityFrameworkCore.KNet.Diagnostics Assembly MASES.EntityFrameworkCore.KNet.dll Event IDs for Kafka events that correspond to messages logged to an ILogger and events sent to a DiagnosticSource. public static class KafkaEventId Inheritance object KafkaEventId Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks These IDs are also used with WarningsConfigurationBuilder to configure the behavior of warnings. See Logging, events, and diagnostics, and The EF Core Kafka database provider for more information and examples. Fields ChangesSaved Changes were saved to the database. public static readonly EventId ChangesSaved Field Value EventId Remarks This event is in the DbLoggerCategory.Update category. This event uses the SaveChangesEventData payload when used with a DiagnosticSource. TransactionIgnoredWarning A transaction operation was requested, but ignored because Kafka does not support transactions. public static readonly EventId TransactionIgnoredWarning Field Value EventId Remarks This event is in the DbLoggerCategory.Database.Transaction category. This event uses the EventData payload when used with a DiagnosticSource."
  },
  "api/MASES.EntityFrameworkCore.KNet.Diagnostics.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Diagnostics.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Diagnostics | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Diagnostics Classes KafkaEventId Event IDs for Kafka events that correspond to messages logged to an ILogger and events sent to a DiagnosticSource."
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.IKafkaDbContextOptionsBuilderInfrastructure.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.IKafkaDbContextOptionsBuilderInfrastructure.html",
    "title": "Interface IKafkaDbContextOptionsBuilderInfrastructure | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaDbContextOptionsBuilderInfrastructure Namespace MASES.EntityFrameworkCore.KNet.Infrastructure Assembly MASES.EntityFrameworkCore.KNet.dll Explicitly implemented by KafkaDbContextOptionsBuilder to hide methods that are used by database provider extension methods but not intended to be called by application developers. public interface IKafkaDbContextOptionsBuilderInfrastructure Properties OptionsBuilder Gets the core options builder. DbContextOptionsBuilder OptionsBuilder { get; } Property Value DbContextOptionsBuilder"
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.IKafkaSingletonOptions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.IKafkaSingletonOptions.html",
    "title": "Interface IKafkaSingletonOptions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaSingletonOptions Namespace MASES.EntityFrameworkCore.KNet.Infrastructure.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaSingletonOptions : ISingletonOptions Inherited Members ISingletonOptions.Initialize(IDbContextOptions) ISingletonOptions.Validate(IDbContextOptions) Extension Methods KafkaDbContextOptionsExtensions.JVMKeyType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.JVMValueContainerType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.KeyType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.SerDesSelectorForKey(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.SerDesSelectorForValue(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.ValueContainerType(IKafkaSingletonOptions, IEntityType) Properties ApplicationId The application id string? ApplicationId { get; } Property Value string BootstrapServers The bootstrap servers of the Apache Kafka cluster string? BootstrapServers { get; } Property Value string ConsumerConfig The optional ConsumerConfigBuilder used when UseCompactedReplicator is true ConsumerConfigBuilder? ConsumerConfig { get; } Property Value ConsumerConfigBuilder DatabaseName Database name means whe prefix of the topics associated to the instance of KafkaDbContext string? DatabaseName { get; } Property Value string DefaultConsumerInstances Default consumr instances used in conjunction with UseCompactedReplicator int? DefaultConsumerInstances { get; } Property Value int? DefaultNumPartitions Default number of partitions associated to each topic int DefaultNumPartitions { get; } Property Value int DefaultReplicationFactor Default replication factor associated to each topic int DefaultReplicationFactor { get; } Property Value int KeySerDesSelectorType The optional Type to use for key serialization selection Default value is DefaultKEFCoreSerDes.Key<T>, any custom Type shall implement ISerDesSelector<T> Type? KeySerDesSelectorType { get; } Property Value Type OnChangeEvent The optional handler to be used to receive notification when the back-end triggers a data change. Action<EntityTypeChanged>? OnChangeEvent { get; } Property Value Action<EntityTypeChanged> Remarks Works if UseCompactedReplicator is true ProducerConfig The optional ProducerConfigBuilder ProducerConfigBuilder? ProducerConfig { get; } Property Value ProducerConfigBuilder StreamsConfig The optional StreamsConfig used when UseCompactedReplicator is false StreamsConfigBuilder? StreamsConfig { get; } Property Value StreamsConfigBuilder TopicConfig The optional TopicConfigBuilder used when topics shall be created TopicConfigBuilder? TopicConfig { get; } Property Value TopicConfigBuilder UseByteBufferDataTransfer Setting this property to true the engine prefers to use ByteBuffer data exchange in serializer instances bool UseByteBufferDataTransfer { get; } Property Value bool UseCompactedReplicator Use KNetCompactedReplicator<K, V> instead of Apache Kafka Streams bool UseCompactedReplicator { get; } Property Value bool UseDeletePolicyForTopic Use delete cleanup policy when a topic is created bool UseDeletePolicyForTopic { get; } Property Value bool UseEnumeratorWithPrefetch Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution bool UseEnumeratorWithPrefetch { get; } Property Value bool Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6. UseKNetStreams Use KNet version of Apache Kafka Streams instead of standard Apache Kafka Streams bool UseKNetStreams { get; } Property Value bool UseNameMatching Set to false to avoid match of IEntityTypes using Name bool UseNameMatching { get; } Property Value bool UsePersistentStorage Use persistent storage when Apache Kafka Streams is in use bool UsePersistentStorage { get; } Property Value bool ValueContainerType The optional Type to use as value container Default value is DefaultValueContainer<TKey>, any custom Type shall implement IValueContainer<T> Type? ValueContainerType { get; } Property Value Type ValueSerDesSelectorType The optional Type to use for value serialization selection Default value is DefaultKEFCoreSerDes.ValueContainer<T>, any custom Type shall implement ISerDesSelector<T> Type? ValueSerDesSelectorType { get; } Property Value Type"
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.KafkaModelValidator.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.KafkaModelValidator.html",
    "title": "Class KafkaModelValidator | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaModelValidator Namespace MASES.EntityFrameworkCore.KNet.Infrastructure.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaModelValidator : ModelValidator, IModelValidator Inheritance object ModelValidator KafkaModelValidator Implements IModelValidator Inherited Members ModelValidator.ValidateRelationships(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidatePropertyMapping(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ThrowPropertyNotMappedException(string, IConventionTypeBase, IConventionProperty) ModelValidator.IsOwned(Type, IConventionModel) ModelValidator.ValidateIgnoredMembers(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateNoShadowKeys(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateNoMutableKeys(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateNoCycles(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateNonNullPrimaryKeys(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateClrInheritance(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateInheritanceMapping(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateDiscriminatorValues(IEntityType) ModelValidator.ValidateChangeTrackingStrategy(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateOwnership(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateForeignKeys(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.IsRedundant(IForeignKey) ModelValidator.ValidateFieldMapping(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateTypeMappings(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidatePrimitiveCollections(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateQueryFilters(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateData(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.ValidateTriggers(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.LogShadowProperties(IModel, IDiagnosticsLogger<DbLoggerCategory.Model.Validation>) ModelValidator.Dependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Initializer Constructors KafkaModelValidator(ModelValidatorDependencies) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaModelValidator(ModelValidatorDependencies dependencies) Parameters dependencies ModelValidatorDependencies Remarks Initializer Methods Validate(IModel, IDiagnosticsLogger<Validation>) Validates a model, throwing an exception if any errors are found. public override void Validate(IModel model, IDiagnosticsLogger<DbLoggerCategory.Model.Validation> logger) Parameters model IModel The model to validate. logger IDiagnosticsLogger<DbLoggerCategory.Model.Validation> The logger to use. ValidateDefiningQuery(IModel, IDiagnosticsLogger<Validation>) Validates the configuration of defining queries in the model. protected virtual void ValidateDefiningQuery(IModel model, IDiagnosticsLogger<DbLoggerCategory.Model.Validation> logger) Parameters model IModel The model to validate. logger IDiagnosticsLogger<DbLoggerCategory.Model.Validation> The logger to use."
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.KafkaOptionsExtension.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.KafkaOptionsExtension.html",
    "title": "Class KafkaOptionsExtension | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaOptionsExtension Namespace MASES.EntityFrameworkCore.KNet.Infrastructure.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaOptionsExtension : IDbContextOptionsExtension, IKafkaSingletonOptions, ISingletonOptions Inheritance object KafkaOptionsExtension Implements IDbContextOptionsExtension IKafkaSingletonOptions ISingletonOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods KafkaDbContextOptionsExtensions.JVMKeyType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.JVMValueContainerType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.KeyType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.SerDesSelectorForKey(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.SerDesSelectorForValue(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.ValueContainerType(IKafkaSingletonOptions, IEntityType) Constructors KafkaOptionsExtension() Initializer public KafkaOptionsExtension() KafkaOptionsExtension(KafkaOptionsExtension) Initializer protected KafkaOptionsExtension(KafkaOptionsExtension copyFrom) Parameters copyFrom KafkaOptionsExtension Properties ApplicationId The application id public virtual string ApplicationId { get; } Property Value string BootstrapServers The bootstrap servers of the Apache Kafka cluster public virtual string BootstrapServers { get; } Property Value string ClusterId Internal property public virtual string ClusterId { get; } Property Value string ConsumerConfig The optional ConsumerConfigBuilder used when UseCompactedReplicator is true public virtual ConsumerConfigBuilder ConsumerConfig { get; } Property Value ConsumerConfigBuilder DatabaseName Database name means whe prefix of the topics associated to the instance of KafkaDbContext public virtual string DatabaseName { get; } Property Value string DefaultConsumerInstances Default consumr instances used in conjunction with UseCompactedReplicator public virtual int? DefaultConsumerInstances { get; } Property Value int? DefaultNumPartitions Default number of partitions associated to each topic public virtual int DefaultNumPartitions { get; } Property Value int DefaultReplicationFactor Default replication factor associated to each topic public virtual short DefaultReplicationFactor { get; } Property Value short Info Information/metadata about the extension. public virtual DbContextOptionsExtensionInfo Info { get; } Property Value DbContextOptionsExtensionInfo KeySerDesSelectorType The optional Type to use for key serialization selection Default value is DefaultKEFCoreSerDes.Key<T>, any custom Type shall implement ISerDesSelector<T> public virtual Type KeySerDesSelectorType { get; } Property Value Type OnChangeEvent The optional handler to be used to receive notification when the back-end triggers a data change. public virtual Action<EntityTypeChanged> OnChangeEvent { get; } Property Value Action<EntityTypeChanged> Remarks Works if UseCompactedReplicator is true ProducerConfig The optional ProducerConfigBuilder public virtual ProducerConfigBuilder ProducerConfig { get; } Property Value ProducerConfigBuilder StreamsConfig The optional StreamsConfig used when UseCompactedReplicator is false public virtual StreamsConfigBuilder StreamsConfig { get; } Property Value StreamsConfigBuilder TopicConfig The optional TopicConfigBuilder used when topics shall be created public virtual TopicConfigBuilder TopicConfig { get; } Property Value TopicConfigBuilder UseByteBufferDataTransfer Setting this property to true the engine prefers to use ByteBuffer data exchange in serializer instances public virtual bool UseByteBufferDataTransfer { get; } Property Value bool UseCompactedReplicator Use KNetCompactedReplicator<K, V> instead of Apache Kafka Streams public virtual bool UseCompactedReplicator { get; } Property Value bool UseDeletePolicyForTopic Use delete cleanup policy when a topic is created public virtual bool UseDeletePolicyForTopic { get; } Property Value bool UseEnumeratorWithPrefetch Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution public virtual bool UseEnumeratorWithPrefetch { get; } Property Value bool Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6. UseKNetStreams Use KNet version of Apache Kafka Streams instead of standard Apache Kafka Streams public virtual bool UseKNetStreams { get; } Property Value bool UseNameMatching Set to false to avoid match of IEntityTypes using Name public virtual bool UseNameMatching { get; } Property Value bool UsePersistentStorage Use persistent storage when Apache Kafka Streams is in use public virtual bool UsePersistentStorage { get; } Property Value bool ValueContainerType The optional Type to use as value container Default value is DefaultValueContainer<TKey>, any custom Type shall implement IValueContainer<T> public virtual Type ValueContainerType { get; } Property Value Type ValueSerDesSelectorType The optional Type to use for value serialization selection Default value is DefaultKEFCoreSerDes.ValueContainer<T>, any custom Type shall implement ISerDesSelector<T> public virtual Type ValueSerDesSelectorType { get; } Property Value Type Methods ApplyServices(IServiceCollection) Adds the services required to make the selected options work. This is used when there is no external IServiceProvider and EF is maintaining its own service provider internally. This allows database providers (and other extensions) to register their required services when EF is creating an service provider. public virtual void ApplyServices(IServiceCollection services) Parameters services IServiceCollection The collection to add services to. Clone() protected virtual KafkaOptionsExtension Clone() Returns KafkaOptionsExtension Initialize(IDbContextOptions) Initializes the singleton options from the given IDbContextOptions. public void Initialize(IDbContextOptions options) Parameters options IDbContextOptions ProducerOptions() Build Properties for producers public virtual Properties ProducerOptions() Returns Properties ProducerOptionsBuilder() Build ProducerConfigBuilder for producers public virtual ProducerConfigBuilder ProducerOptionsBuilder() Returns ProducerConfigBuilder StreamsOptions(IEntityType) Build StreamsConfigBuilder from options public virtual StreamsConfigBuilder StreamsOptions(IEntityType entityType) Parameters entityType IEntityType Returns StreamsConfigBuilder StreamsOptions(string) Build Properties for applicationId public virtual Properties StreamsOptions(string applicationId) Parameters applicationId string Returns Properties Validate(IDbContextOptions) Gives the extension a chance to validate that all options in the extension are valid. Most extensions do not have invalid combinations and so this will be a no-op. If options are invalid, then an exception should be thrown. public virtual void Validate(IDbContextOptions options) Parameters options IDbContextOptions The options being validated. WithApplicationId(string) The application id public virtual KafkaOptionsExtension WithApplicationId(string applicationId) Parameters applicationId string Returns KafkaOptionsExtension WithBootstrapServers(string) The bootstrap servers of the Apache Kafka cluster public virtual KafkaOptionsExtension WithBootstrapServers(string bootstrapServers) Parameters bootstrapServers string Returns KafkaOptionsExtension WithCompactedReplicator(bool) Use KNetCompactedReplicator<K, V> instead of Apache Kafka Streams public virtual KafkaOptionsExtension WithCompactedReplicator(bool useCompactedReplicator = true) Parameters useCompactedReplicator bool Returns KafkaOptionsExtension WithConsumerConfig(ConsumerConfigBuilder) The optional ConsumerConfigBuilder used when UseCompactedReplicator is true public virtual KafkaOptionsExtension WithConsumerConfig(ConsumerConfigBuilder consumerConfigBuilder) Parameters consumerConfigBuilder ConsumerConfigBuilder Returns KafkaOptionsExtension WithDatabaseName(string) Database name means whe prefix of the topics associated to the instance of KafkaDbContext public virtual KafkaOptionsExtension WithDatabaseName(string databaseName) Parameters databaseName string Returns KafkaOptionsExtension WithDefaultConsumerInstances(int?) Default consumr instances used in conjunction with UseCompactedReplicator public virtual KafkaOptionsExtension WithDefaultConsumerInstances(int? defaultConsumerInstances = null) Parameters defaultConsumerInstances int? Returns KafkaOptionsExtension WithDefaultNumPartitions(int) Default number of partitions associated to each topic public virtual KafkaOptionsExtension WithDefaultNumPartitions(int defaultNumPartitions = 1) Parameters defaultNumPartitions int Returns KafkaOptionsExtension WithDefaultReplicationFactor(short) Default replication factor associated to each topic public virtual KafkaOptionsExtension WithDefaultReplicationFactor(short defaultReplicationFactor = 1) Parameters defaultReplicationFactor short Returns KafkaOptionsExtension WithKeySerDesSelectorType(Type) The optional Type to use for key serialization selection Default value is DefaultKEFCoreSerDes.Key<T>, any custom Type shall implement ISerDesSelector<T> public virtual KafkaOptionsExtension WithKeySerDesSelectorType(Type serializationType) Parameters serializationType Type Returns KafkaOptionsExtension WithOnChangeEvent(Action<EntityTypeChanged>) The optional handler to be used to receive notification when the back-end triggers a data change. public virtual KafkaOptionsExtension WithOnChangeEvent(Action<EntityTypeChanged> onChangeEvent) Parameters onChangeEvent Action<EntityTypeChanged> Returns KafkaOptionsExtension Remarks Works if UseCompactedReplicator is true WithProducerConfig(ProducerConfigBuilder) The optional ProducerConfigBuilder public virtual KafkaOptionsExtension WithProducerConfig(ProducerConfigBuilder producerConfigBuilder) Parameters producerConfigBuilder ProducerConfigBuilder Returns KafkaOptionsExtension WithStreamsConfig(StreamsConfigBuilder) The optional StreamsConfig used when UseCompactedReplicator is false public virtual KafkaOptionsExtension WithStreamsConfig(StreamsConfigBuilder streamsConfigBuilder) Parameters streamsConfigBuilder StreamsConfigBuilder Returns KafkaOptionsExtension WithTopicConfig(TopicConfigBuilder) The optional TopicConfigBuilder used when topics shall be created public virtual KafkaOptionsExtension WithTopicConfig(TopicConfigBuilder topicConfigBuilder) Parameters topicConfigBuilder TopicConfigBuilder Returns KafkaOptionsExtension WithUseByteBufferDataTransfer(bool) Setting this property to true the engine prefers to use ByteBuffer data exchange in serializer instances public virtual KafkaOptionsExtension WithUseByteBufferDataTransfer(bool useByteBufferDataTransfer = false) Parameters useByteBufferDataTransfer bool Returns KafkaOptionsExtension WithUseDeletePolicyForTopic(bool) Use delete cleanup policy when a topic is created public virtual KafkaOptionsExtension WithUseDeletePolicyForTopic(bool useDeletePolicyForTopic = false) Parameters useDeletePolicyForTopic bool Returns KafkaOptionsExtension WithUseEnumeratorWithPrefetch(bool) Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution public virtual KafkaOptionsExtension WithUseEnumeratorWithPrefetch(bool useEnumeratorWithPrefetch = true) Parameters useEnumeratorWithPrefetch bool Returns KafkaOptionsExtension Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6. WithUseKNetStreams(bool) Use KNet version of Apache Kafka Streams instead of standard Apache Kafka Streams public virtual KafkaOptionsExtension WithUseKNetStreams(bool useKNetStreams = true) Parameters useKNetStreams bool Returns KafkaOptionsExtension WithUseNameMatching(bool) The optional handler to be used to receive notification when the back-end triggers a data change. public virtual KafkaOptionsExtension WithUseNameMatching(bool useNameMatching = true) Parameters useNameMatching bool Returns KafkaOptionsExtension Remarks Works if UseCompactedReplicator is true WithUsePersistentStorage(bool) Use persistent storage when Apache Kafka Streams is in use public virtual KafkaOptionsExtension WithUsePersistentStorage(bool usePersistentStorage = false) Parameters usePersistentStorage bool Returns KafkaOptionsExtension WithValueContainerType(Type) The optional Type to use as value container Default value is DefaultValueContainer<TKey>, any custom Type shall implement IValueContainer<T> public virtual KafkaOptionsExtension WithValueContainerType(Type serializationType) Parameters serializationType Type Returns KafkaOptionsExtension WithValueSerDesSelectorType(Type) The optional Type to use for value serialization selection Default value is DefaultKEFCoreSerDes.ValueContainer<T>, any custom Type shall implement ISerDesSelector<T> public virtual KafkaOptionsExtension WithValueSerDesSelectorType(Type serializationType) Parameters serializationType Type Returns KafkaOptionsExtension"
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.KafkaSingletonOptions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.KafkaSingletonOptions.html",
    "title": "Class KafkaSingletonOptions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaSingletonOptions Namespace MASES.EntityFrameworkCore.KNet.Infrastructure.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaSingletonOptions : IKafkaSingletonOptions, ISingletonOptions Inheritance object KafkaSingletonOptions Implements IKafkaSingletonOptions ISingletonOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods KafkaDbContextOptionsExtensions.JVMKeyType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.JVMValueContainerType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.KeyType(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.SerDesSelectorForKey(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.SerDesSelectorForValue(IKafkaSingletonOptions, IEntityType) KafkaDbContextOptionsExtensions.ValueContainerType(IKafkaSingletonOptions, IEntityType) Properties ApplicationId The application id public virtual string? ApplicationId { get; } Property Value string BootstrapServers The bootstrap servers of the Apache Kafka cluster public virtual string? BootstrapServers { get; } Property Value string ConsumerConfig The optional ConsumerConfigBuilder used when UseCompactedReplicator is true public virtual ConsumerConfigBuilder? ConsumerConfig { get; } Property Value ConsumerConfigBuilder DatabaseName Database name means whe prefix of the topics associated to the instance of KafkaDbContext public virtual string? DatabaseName { get; } Property Value string DefaultConsumerInstances Default consumr instances used in conjunction with UseCompactedReplicator public virtual int? DefaultConsumerInstances { get; } Property Value int? DefaultNumPartitions Default number of partitions associated to each topic public virtual int DefaultNumPartitions { get; } Property Value int DefaultReplicationFactor Default replication factor associated to each topic public virtual int DefaultReplicationFactor { get; } Property Value int KeySerDesSelectorType The optional Type to use for key serialization selection Default value is DefaultKEFCoreSerDes.Key<T>, any custom Type shall implement ISerDesSelector<T> public virtual Type? KeySerDesSelectorType { get; } Property Value Type OnChangeEvent The optional handler to be used to receive notification when the back-end triggers a data change. public virtual Action<EntityTypeChanged>? OnChangeEvent { get; } Property Value Action<EntityTypeChanged> Remarks Works if UseCompactedReplicator is true ProducerConfig The optional ProducerConfigBuilder public virtual ProducerConfigBuilder? ProducerConfig { get; } Property Value ProducerConfigBuilder StreamsConfig The optional StreamsConfig used when UseCompactedReplicator is false public virtual StreamsConfigBuilder? StreamsConfig { get; } Property Value StreamsConfigBuilder TopicConfig The optional TopicConfigBuilder used when topics shall be created public virtual TopicConfigBuilder? TopicConfig { get; } Property Value TopicConfigBuilder UseByteBufferDataTransfer Setting this property to true the engine prefers to use ByteBuffer data exchange in serializer instances public virtual bool UseByteBufferDataTransfer { get; } Property Value bool UseCompactedReplicator Use KNetCompactedReplicator<K, V> instead of Apache Kafka Streams public virtual bool UseCompactedReplicator { get; } Property Value bool UseDeletePolicyForTopic Use delete cleanup policy when a topic is created public virtual bool UseDeletePolicyForTopic { get; } Property Value bool UseEnumeratorWithPrefetch Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution public virtual bool UseEnumeratorWithPrefetch { get; } Property Value bool Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6. UseKNetStreams Use KNet version of Apache Kafka Streams instead of standard Apache Kafka Streams public virtual bool UseKNetStreams { get; } Property Value bool UseNameMatching Set to false to avoid match of IEntityTypes using Name public virtual bool UseNameMatching { get; } Property Value bool UsePersistentStorage Use persistent storage when Apache Kafka Streams is in use public virtual bool UsePersistentStorage { get; } Property Value bool ValueContainerType The optional Type to use as value container Default value is DefaultValueContainer<TKey>, any custom Type shall implement IValueContainer<T> public virtual Type? ValueContainerType { get; } Property Value Type ValueSerDesSelectorType The optional Type to use for value serialization selection Default value is DefaultKEFCoreSerDes.ValueContainer<T>, any custom Type shall implement ISerDesSelector<T> public virtual Type? ValueSerDesSelectorType { get; } Property Value Type Methods Initialize(IDbContextOptions) Initializes the singleton options from the given IDbContextOptions. public virtual void Initialize(IDbContextOptions options) Parameters options IDbContextOptions Validate(IDbContextOptions) Validates that the options in given IDbContextOptions have not changed when compared to the options already set here, and throws if they have. public virtual void Validate(IDbContextOptions options) Parameters options IDbContextOptions"
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Infrastructure.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Infrastructure.Internal Classes KafkaModelValidator This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaOptionsExtension This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaSingletonOptions This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. Interfaces IKafkaSingletonOptions This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.KafkaDbContext.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.KafkaDbContext.html",
    "title": "Class KafkaDbContext | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDbContext Namespace MASES.EntityFrameworkCore.KNet.Infrastructure Assembly MASES.EntityFrameworkCore.KNet.dll A KafkaDbContext instance represents a session with the Apache Kafka cluster and can be used to query and save instances of your entities. KafkaDbContext extends DbContext and it is a combination of the Unit Of Work and Repository patterns. public class KafkaDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext KafkaDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Derived BloggingContext Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Entity Framework Core does not support multiple parallel operations being run on the same KafkaDbContext instance. This includes both parallel execution of async queries and any explicit concurrent use from multiple threads. Therefore, always await async calls immediately, or use separate DbContext instances for operations that execute in parallel. See Avoiding DbContext threading issues for more information and examples. Typically you create a class that derives from DbContext and contains DbSet<TEntity> properties for each entity in the model. If the DbSet<TEntity> properties have a public setter, they are automatically initialized when the instance of the derived context is created. Typically you don't need to override the OnConfiguring(DbContextOptionsBuilder) method to configure the database (and other options) to be used for the context, just set the properties associated to KafkaDbContext class. Alternatively, if you would rather perform configuration externally instead of inline in your context, you can use DbContextOptionsBuilder<TContext> (or DbContextOptionsBuilder) to externally create an instance of DbContextOptions<TContext> (or DbContextOptions) and pass it to a base constructor of DbContext. The model is discovered by running a set of conventions over the entity classes found in the DbSet<TEntity> properties on the derived context. To further configure the model that is discovered by convention, you can override the OnModelCreating(ModelBuilder) method. See KafkaDbContext configuration and initialization, DbContext lifetime, configuration, and initialization, Querying data with EF Core, Changing tracking, and Saving data with EF Core for more information and examples. Constructors KafkaDbContext() Initializes a new instance of the DbContext class. The OnConfiguring(DbContextOptionsBuilder) method will be called to configure the database (and other options) to be used for this context. public KafkaDbContext() Remarks See DbContext lifetime, configuration, and initialization for more information and examples. KafkaDbContext(DbContextOptions) Initializes a new instance of the DbContext class using the specified options. The OnConfiguring(DbContextOptionsBuilder) method will still be called to allow further configuration of the options. public KafkaDbContext(DbContextOptions options) Parameters options DbContextOptions The options for this context. Remarks See DbContext lifetime, configuration, and initialization and Using DbContextOptions for more information and examples. Fields IsPerformanceVersion Reports if the library was compiled to reports performance information public const bool IsPerformanceVersion = false Field Value bool Properties ApplicationId The application id public virtual string ApplicationId { get; set; } Property Value string BootstrapServers The bootstrap servers of the Apache Kafka cluster public virtual string? BootstrapServers { get; set; } Property Value string ConsumerConfig The optional ConsumerConfigBuilder used when UseCompactedReplicator is true public virtual ConsumerConfigBuilder? ConsumerConfig { get; set; } Property Value ConsumerConfigBuilder DatabaseName Database name means whe prefix of the topics associated to the instance of KafkaDbContext public virtual string? DatabaseName { get; set; } Property Value string DefaultConsumerConfig The default ConsumerConfig configuration public static ConsumerConfigBuilder DefaultConsumerConfig { get; } Property Value ConsumerConfigBuilder The default ConsumerConfig configuration. DefaultConsumerInstances Default consumr instances used in conjunction with UseCompactedReplicator public virtual int? DefaultConsumerInstances { get; set; } Property Value int? DefaultNumPartitions Default number of partitions associated to each topic public virtual int DefaultNumPartitions { get; set; } Property Value int DefaultProducerConfig The default ProducerConfig configuration public static ProducerConfigBuilder DefaultProducerConfig { get; } Property Value ProducerConfigBuilder The default ProducerConfig configuration. DefaultReplicationFactor Default replication factor associated to each topic public virtual short DefaultReplicationFactor { get; set; } Property Value short DefaultStreamsConfig The default StreamsConfig configuration public static StreamsConfigBuilder DefaultStreamsConfig { get; } Property Value StreamsConfigBuilder The default StreamsConfig configuration. DefaultTopicConfig The default TopicConfig configuration public static TopicConfigBuilder DefaultTopicConfig { get; } Property Value TopicConfigBuilder The default TopicConfig configuration. EnableKEFCoreTracing Set to true to enable tracing of KEFCore public static bool EnableKEFCoreTracing { get; set; } Property Value bool Remarks Can be set only if the project is compiled with DEBUG_PERFORMANCE preprocessor directive, otherwise an InvalidOperationException is raised KeySerDesSelectorType The optional Type to use for key serialization selection Default value is DefaultKEFCoreSerDes.Key<T>, any custom Type shall implement ISerDesSelector<T> public virtual Type? KeySerDesSelectorType { get; set; } Property Value Type OnChangeEvent The optional handler to be used to receive notification when the back-end triggers a data change. public virtual Action<EntityTypeChanged>? OnChangeEvent { get; set; } Property Value Action<EntityTypeChanged> Remarks Works if UseCompactedReplicator is true ProducerConfig The optional ProducerConfigBuilder public virtual ProducerConfigBuilder? ProducerConfig { get; set; } Property Value ProducerConfigBuilder StreamsConfig The optional StreamsConfig used when UseCompactedReplicator is false public virtual StreamsConfigBuilder? StreamsConfig { get; set; } Property Value StreamsConfigBuilder TopicConfig The optional TopicConfigBuilder used when topics shall be created public virtual TopicConfigBuilder? TopicConfig { get; set; } Property Value TopicConfigBuilder UseByteBufferDataTransfer Setting this property to true the engine prefers to use ByteBuffer data exchange in serializer instances public virtual bool UseByteBufferDataTransfer { get; set; } Property Value bool UseCompactedReplicator Use KNetCompactedReplicator<K, V> instead of Apache Kafka Streams public virtual bool UseCompactedReplicator { get; set; } Property Value bool UseDeletePolicyForTopic Use delete cleanup policy when a topic is created public bool UseDeletePolicyForTopic { get; set; } Property Value bool UseEnumeratorWithPrefetch Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution public virtual bool UseEnumeratorWithPrefetch { get; set; } Property Value bool Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6. UseKNetStreams Use KNet version of Apache Kafka Streams instead of standard Apache Kafka Streams public virtual bool UseKNetStreams { get; set; } Property Value bool UseNameMatching Set to false to avoid match of IEntityTypes using Name public virtual bool UseNameMatching { get; set; } Property Value bool UsePersistentStorage Use persistent storage when Apache Kafka Streams is in use public virtual bool UsePersistentStorage { get; set; } Property Value bool ValueContainerType The optional Type to use as value container Default value is DefaultValueContainer<TKey>, any custom Type shall implement IValueContainer<T> public virtual Type? ValueContainerType { get; set; } Property Value Type ValueSerDesSelectorType The optional Type to use for value serialization selection Default value is DefaultKEFCoreSerDes.ValueContainer<T>, any custom Type shall implement ISerDesSelector<T> public virtual Type? ValueSerDesSelectorType { get; set; } Property Value Type Methods OnConfiguring(DbContextOptionsBuilder) Override this method to configure the database (and other options) to be used for this context. This method is called for each instance of the context that is created. The base implementation does nothing. protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters optionsBuilder DbContextOptionsBuilder A builder used to create or modify options for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure the context. Remarks In situations where an instance of DbContextOptions may or may not have been passed to the constructor, you can use IsConfigured to determine if the options have already been set, and skip some or all of the logic in OnConfiguring(DbContextOptionsBuilder). See DbContext lifetime, configuration, and initialization for more information and examples."
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.KafkaDbContextOptionsBuilder.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.KafkaDbContextOptionsBuilder.html",
    "title": "Class KafkaDbContextOptionsBuilder | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDbContextOptionsBuilder Namespace MASES.EntityFrameworkCore.KNet.Infrastructure Assembly MASES.EntityFrameworkCore.KNet.dll Allows Kafka specific configuration to be performed on DbContextOptions. public class KafkaDbContextOptionsBuilder : IKafkaDbContextOptionsBuilderInfrastructure Inheritance object KafkaDbContextOptionsBuilder Implements IKafkaDbContextOptionsBuilderInfrastructure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Instances of this class are returned from a call to UseKafkaCluster(DbContextOptionsBuilder, string, string, string, Action<KafkaDbContextOptionsBuilder>?) and it is not designed to be directly constructed in your application code. See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. Constructors KafkaDbContextOptionsBuilder(DbContextOptionsBuilder) Initializes a new instance of the KafkaDbContextOptionsBuilder class. public KafkaDbContextOptionsBuilder(DbContextOptionsBuilder optionsBuilder) Parameters optionsBuilder DbContextOptionsBuilder The options builder. Properties OptionsBuilder Clones the configuration in this builder. protected virtual DbContextOptionsBuilder OptionsBuilder { get; } Property Value DbContextOptionsBuilder The cloned configuration. Methods WithCompactedReplicator(bool) Enables use of KNetCompactedReplicator<K, V> public virtual KafkaDbContextOptionsBuilder WithCompactedReplicator(bool useCompactedReplicator = false) Parameters useCompactedReplicator bool If true then KNetCompactedReplicator<K, V> will be used instead of Apache Kafka Streams. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithConsumerConfig(ConsumerConfigBuilder) Set properties of KNetCompactedReplicator<K, V>. public virtual KafkaDbContextOptionsBuilder WithConsumerConfig(ConsumerConfigBuilder consumerConfigBuilder) Parameters consumerConfigBuilder ConsumerConfigBuilder The ConsumerConfigBuilder where options are stored. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithDefaultConsumerInstances(int?) Defines the default number of consumer instances to be used in conjunction with WithCompactedReplicator(bool) public virtual KafkaDbContextOptionsBuilder WithDefaultConsumerInstances(int? defaultConsumerInstances = null) Parameters defaultConsumerInstances int? The default number of consumer instances to be used in conjunction with WithCompactedReplicator(bool) Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithDefaultNumPartitions(int) Defines the default number of partitions to use when a new topic is created public virtual KafkaDbContextOptionsBuilder WithDefaultNumPartitions(int defaultNumPartitions = 1) Parameters defaultNumPartitions int The default number of partitions to use when a new topic is created. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithDefaultReplicationFactor(short) Defines the default replication factor to use when a new topic is created public virtual KafkaDbContextOptionsBuilder WithDefaultReplicationFactor(short defaultReplicationFactor = 1) Parameters defaultReplicationFactor short The default replication factor to use when a new topic is created. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithKeySerDesSelectorType(Type) Define the external serialization Type for key public virtual KafkaDbContextOptionsBuilder WithKeySerDesSelectorType(Type serializationType) Parameters serializationType Type The Type implementing the serialization model. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithOnChangeEvent(Action<EntityTypeChanged>) Set the optional handler to be used to receive notification when the back-end triggers a data change. Works if WithCompactedReplicator(bool) is invoked with true public virtual KafkaDbContextOptionsBuilder WithOnChangeEvent(Action<EntityTypeChanged> onChangeEvent) Parameters onChangeEvent Action<EntityTypeChanged> The Action<T1, T2, T3> will be used to report change event. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithProducerConfig(ProducerConfigBuilder) Set properties of KafkaProducer. public virtual KafkaDbContextOptionsBuilder WithProducerConfig(ProducerConfigBuilder producerConfigBuilder) Parameters producerConfigBuilder ProducerConfigBuilder The ProducerConfigBuilder where options are stored. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithStreamsConfig(StreamsConfigBuilder) Set properties of KafkaStreams. public virtual KafkaDbContextOptionsBuilder WithStreamsConfig(StreamsConfigBuilder streamsConfigBuilder) Parameters streamsConfigBuilder StreamsConfigBuilder The StreamsConfigBuilder where options are stored. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithTopicConfig(TopicConfigBuilder) Set properties of TopicConfig. public virtual KafkaDbContextOptionsBuilder WithTopicConfig(TopicConfigBuilder topicConfig) Parameters topicConfig TopicConfigBuilder The TopicConfigBuilder where options are stored. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithUseByteBufferDataTransfer(bool) Setting this property to true the engine prefers to use ByteBuffer data exchange in serializer instances public virtual KafkaDbContextOptionsBuilder WithUseByteBufferDataTransfer(bool useByteBufferDataTransfer = true) Parameters useByteBufferDataTransfer bool If true, ByteBuffer data exchange will be preferred. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithUseDeletePolicyForTopic(bool) Enables delete cleanup policy when the topic is created the first time public virtual KafkaDbContextOptionsBuilder WithUseDeletePolicyForTopic(bool useDeletePolicyForTopic = false) Parameters useDeletePolicyForTopic bool If true, then will be used delete cleanup policy when the topic is created the first time. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithUseEnumeratorWithPrefetch(bool) Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution public virtual KafkaDbContextOptionsBuilder WithUseEnumeratorWithPrefetch(bool useEnumeratorWithPrefetch = true) Parameters useEnumeratorWithPrefetch bool If true, prefetch in enumeration will be used. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6 See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithUseKNetStreams(bool) Enables use of KNet version of Apache Kafka Streams public virtual KafkaDbContextOptionsBuilder WithUseKNetStreams(bool useKNetStreams = false) Parameters useKNetStreams bool If true then KNet version of Apache Kafka Streams will be used instead of standard Apache Kafka Streams. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithUseNameMatching(bool) Enables name matching on IEntityType instead of Type matching public virtual KafkaDbContextOptionsBuilder WithUseNameMatching(bool useNameMatching = true) Parameters useNameMatching bool If true, it is used name matching. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithUsePersistentStorage(bool) Setting this property to true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution public virtual KafkaDbContextOptionsBuilder WithUsePersistentStorage(bool usePersistentStorage = false) Parameters usePersistentStorage bool If true the engine prefers to use enumerator instances able to do a prefetch on data speeding up execution Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks Used only if UseCompactedReplicator is false and UseKNetStreams is true, not available in EFCore 6. See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithValueContainerType(Type) Define the external Type which contains the values public virtual KafkaDbContextOptionsBuilder WithValueContainerType(Type serializationType) Parameters serializationType Type The Type implementing the serialization model. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples. WithValueSerDesSelectorType(Type) Define the external serialization Type for value public virtual KafkaDbContextOptionsBuilder WithValueSerDesSelectorType(Type serializationType) Parameters serializationType Type The Type implementing the serialization model. Returns KafkaDbContextOptionsBuilder The same builder instance so that multiple calls can be chained. Remarks See Using DbContextOptions, and The EF Core Kafka database provider for more information and examples."
  },
  "api/MASES.EntityFrameworkCore.KNet.Infrastructure.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Infrastructure.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Infrastructure | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Infrastructure Classes KafkaDbContext A KafkaDbContext instance represents a session with the Apache Kafka cluster and can be used to query and save instances of your entities. KafkaDbContext extends DbContext and it is a combination of the Unit Of Work and Repository patterns. KafkaDbContextOptionsBuilder Allows Kafka specific configuration to be performed on DbContextOptions. Interfaces IKafkaDbContextOptionsBuilderInfrastructure Explicitly implemented by KafkaDbContextOptionsBuilder to hide methods that are used by database provider extension methods but not intended to be called by application developers."
  },
  "api/MASES.EntityFrameworkCore.KNet.Internal.KafkaResources.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Internal.KafkaResources.html",
    "title": "Class KafkaResources | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaResources Namespace MASES.EntityFrameworkCore.KNet.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static class KafkaResources Inheritance object KafkaResources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LogSavedChanges(IDiagnosticsLogger) Saved {count} entities to Kafka store. public static EventDefinition<int> LogSavedChanges(IDiagnosticsLogger logger) Parameters logger IDiagnosticsLogger Returns EventDefinition<int> LogTransactionsNotSupported(IDiagnosticsLogger) Transactions are not supported by the Kafka store. See http://go.microsoft.com/fwlink/?LinkId=800142 public static EventDefinition LogTransactionsNotSupported(IDiagnosticsLogger logger) Parameters logger IDiagnosticsLogger Returns EventDefinition"
  },
  "api/MASES.EntityFrameworkCore.KNet.Internal.KafkaStrings.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Internal.KafkaStrings.html",
    "title": "Class KafkaStrings | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaStrings Namespace MASES.EntityFrameworkCore.KNet.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static class KafkaStrings Inheritance object KafkaStrings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DefaultIfEmptyAppliedAfterProjection Cannot apply 'DefaultIfEmpty' after a client-evaluated projection. Consider applying 'DefaultIfEmpty' before last 'Select' or use 'AsEnumerable' before 'DefaultIfEmpty' to apply it on client-side. public static string DefaultIfEmptyAppliedAfterProjection { get; } Property Value string DistinctOnSubqueryNotSupported Using 'Distinct' operation on a projection containing a subquery is not supported. public static string DistinctOnSubqueryNotSupported { get; } Property Value string NoQueryStrings There is no query string because the Kafka provider does not use a string-based query language. public static string NoQueryStrings { get; } Property Value string NonComposedGroupByNotSupported A 'GroupBy' operation which is not composed into aggregate or projection of elements is not supported. public static string NonComposedGroupByNotSupported { get; } Property Value string SetOperationsNotAllowedAfterClientEvaluation Unable to translate set operation after client projection has been applied. Consider moving the set operation before the last 'Select' call. public static string SetOperationsNotAllowedAfterClientEvaluation { get; } Property Value string UpdateConcurrencyException Attempted to update or delete an entity that does not exist in the store. public static string UpdateConcurrencyException { get; } Property Value string Methods InvalidDerivedTypeInEntityProjection(object?, object?) The specified entity type '{derivedType}' is not derived from '{entityType}'. public static string InvalidDerivedTypeInEntityProjection(object? derivedType, object? entityType) Parameters derivedType object entityType object Returns string NullabilityErrorException(object?, object?) Required properties '{requiredProperties}' are missing for the instance of entity type '{entityType}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the entity key value. public static string NullabilityErrorException(object? requiredProperties, object? entityType) Parameters requiredProperties object entityType object Returns string NullabilityErrorExceptionSensitive(object?, object?, object?) Required properties '{requiredProperties}' are missing for the instance of entity type '{entityType}' with the key value '{keyValue}'. public static string NullabilityErrorExceptionSensitive(object? requiredProperties, object? entityType, object? keyValue) Parameters requiredProperties object entityType object keyValue object Returns string UnableToBindMemberToEntityProjection(object?, object?, object?) Unable to bind '{memberType}' '{member}' to entity projection of '{entityType}'. public static string UnableToBindMemberToEntityProjection(object? memberType, object? member, object? entityType) Parameters memberType object member object entityType object Returns string UpdateConcurrencyTokenException(object?, object?) Conflicts were detected for instance of entity type '{entityType}' on the concurrency token properties {properties}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting values. public static string UpdateConcurrencyTokenException(object? entityType, object? properties) Parameters entityType object properties object Returns string UpdateConcurrencyTokenExceptionSensitive(object?, object?, object?, object?) Conflicts were detected for instance of entity type '{entityType}' with the key value '{keyValue}' on the concurrency token property values {conflictingValues}, with corresponding database values {databaseValues}. public static string UpdateConcurrencyTokenExceptionSensitive(object? entityType, object? keyValue, object? conflictingValues, object? databaseValues) Parameters entityType object keyValue object conflictingValues object databaseValues object Returns string"
  },
  "api/MASES.EntityFrameworkCore.KNet.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Internal Classes KafkaResources This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaStrings This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.KEFCore.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.KEFCore.html",
    "title": "Class KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KEFCore Namespace MASES.EntityFrameworkCore.KNet Assembly MASES.EntityFrameworkCore.KNet.dll This is the primary class shall be used to initialize the environment to use Entity Framework Core for Apache Kafka public class KEFCore : KNetCore<KEFCore>, IJVMWrapperManagement, IJVMBridgeCore Inheritance object SetupJVMWrapper SetupJVMWrapper<KEFCore> JNetCoreBase<KEFCore> JNetCore<KEFCore> KNetCore<KEFCore> KEFCore Implements IJVMWrapperManagement IJVMBridgeCore Inherited Members KNetCore<KEFCore>.ProcessCommandLine() KNetCore<KEFCore>.CommandLineArguments KNetCore<KEFCore>.ApplicationJarRootPath KNetCore<KEFCore>.ApplicationLog4JPath KNetCore<KEFCore>.ApplicationLogPath KNetCore<KEFCore>.ApplicationScalaVersion KNetCore<KEFCore>.ApplicationDisableJMX KNetCore<KEFCore>.ScalaVersion KNetCore<KEFCore>.ScalaBinaryVersion KNetCore<KEFCore>.JarRootPath KNetCore<KEFCore>.Log4JPath KNetCore<KEFCore>.LogDir KNetCore<KEFCore>.Log4JOpts KNetCore<KEFCore>.DisableJMX KNetCore<KEFCore>.PerformanceOptions KNetCore<KEFCore>.Options KNetCore<KEFCore>.PathToParse JNetCoreBase<KEFCore>.JARsSubFolder JNetCoreBase<KEFCore>.Parser JNetCoreBase<KEFCore>.EventOrExceptionHandler(EventOrExceptionEventArgs) JNetCoreBase<KEFCore>.PreInitialization(ref string, ref Version) JNetCoreBase<KEFCore>.ReplaceEnvironmentVariable(string) JNetCoreBase<KEFCore>.AddJVMOption(string, string) JNetCoreBase<KEFCore>.HelpInfo(int?) JNetCoreBase<KEFCore>.New(string) JNetCoreBase<KEFCore>.New(string, params object[]) JNetCoreBase<KEFCore>.LaunchWithFilteredArgs<TClass>() JNetCoreBase<KEFCore>.Launch<TClass>(params string[]) JNetCoreBase<KEFCore>.LaunchWithFilteredArgs(Type) JNetCoreBase<KEFCore>.Launch(Type, params string[]) JNetCoreBase<KEFCore>.ApplicationLicensePath JNetCoreBase<KEFCore>.ApplicationJDKHome JNetCoreBase<KEFCore>.ApplicationJVMPath JNetCoreBase<KEFCore>.ApplicationJNIVerbosity JNetCoreBase<KEFCore>.ApplicationJNIOutputFile JNetCoreBase<KEFCore>.ApplicationJmxPort JNetCoreBase<KEFCore>.ApplicationEnableDebug JNetCoreBase<KEFCore>.ApplicationJavaDebugPort JNetCoreBase<KEFCore>.ApplicationDebugSuspendFlag JNetCoreBase<KEFCore>.ApplicationJavaDebugOpts JNetCoreBase<KEFCore>.ApplicationHeapSize JNetCoreBase<KEFCore>.ApplicationInitialHeapSize JNetCoreBase<KEFCore>.ApplicationLogClassPath JNetCoreBase<KEFCore>.ApplicationWriteEventOrExceptionOnCmdLine JNetCoreBase<KEFCore>.ApplicationJVMExtraOptions JNetCoreBase<KEFCore>.LicensePath JNetCoreBase<KEFCore>.JDKHome JNetCoreBase<KEFCore>.JVMPath JNetCoreBase<KEFCore>.JNIVerbosity JNetCoreBase<KEFCore>.JNIOutputFile JNetCoreBase<KEFCore>.JmxPort JNetCoreBase<KEFCore>.EnableDebug JNetCoreBase<KEFCore>.JavaDebugPort JNetCoreBase<KEFCore>.DebugSuspendFlag JNetCoreBase<KEFCore>.JavaDebugOpts JNetCoreBase<KEFCore>.GlobalHeapSize JNetCoreBase<KEFCore>.InitialHeapSize JNetCoreBase<KEFCore>.LogClassPath JNetCoreBase<KEFCore>.WriteEventOrExceptionOnCmdLine JNetCoreBase<KEFCore>.ParsedArgs JNetCoreBase<KEFCore>.EventOrExceptionEvent JNetCoreBase<KEFCore>.JVMOptions JNetCoreBase<KEFCore>.ClassPath SetupJVMWrapper<KEFCore>.CreateGlobalInstance() SetupJVMWrapper<KEFCore>.UnwrapOn(ParameterizedThreadStart, object, ApartmentState) SetupJVMWrapper<KEFCore>.UnwrapAndDemonizeOn(ParameterizedThreadStart, object, ApartmentState) SetupJVMWrapper<KEFCore>.HasGlobalInstance SetupJVMWrapper<KEFCore>.GlobalInstance SetupJVMWrapper<KEFCore>.ScopedOn SetupJVMWrapper<KEFCore>.ScopedOnVersion SetupJVMWrapper.PostInitialization() SetupJVMWrapper.Initialize() SetupJVMWrapper.ImportPackage(string) SetupJVMWrapper.RegisterCLRGlobal(string, object) SetupJVMWrapper.UnregisterCLRGlobal(string) SetupJVMWrapper.GetJVMGlobal(string) SetupJVMWrapper.GetCLRGlobal(string) SetupJVMWrapper.InitializeListener(IJVMBridgeBase) SetupJVMWrapper.GetListener(IJavaObject) SetupJVMWrapper.ReleaseListener(IJVMBridgeBase) SetupJVMWrapper.GetJCGraphicContainer(string, bool) SetupJVMWrapper.GetJCGraphicContainer(IJavaObject, bool) SetupJVMWrapper.ReleaseJCGraphicContainer(IJCGraphicContainer) SetupJVMWrapper.InitializeRemote() SetupJVMWrapper.UnwrapOn<T>(ParameterizedThreadStart, object, ApartmentState) SetupJVMWrapper.UnwrapAndDemonizeOn<T>(ParameterizedThreadStart, object, ApartmentState) SetupJVMWrapper.GetMainClasses(Assembly) SetupJVMWrapper.FilteredArgs SetupJVMWrapper.IsContainer SetupJVMWrapper.ContainerId SetupJVMWrapper.FeatureLevel SetupJVMWrapper.EnableCriticalMethods SetupJVMWrapper.EnableCriticalMethodsOnGetThreshold SetupJVMWrapper.EnableCriticalMethodsOnGet SetupJVMWrapper.EnableCriticalMethodsOnSetThreshold SetupJVMWrapper.EnableCriticalMethodsOnSet SetupJVMWrapper.JVM SetupJVMWrapper.Management SetupJVMWrapper.JVMStats SetupJVMWrapper.DynJVM SetupJVMWrapper.RemoteBridge SetupJVMWrapper.RemoteJCOBridge SetupJVMWrapper.ModulePath SetupJVMWrapper.JVMPackages SetupJVMWrapper.SuppressFinalize SetupJVMWrapper.Globalize SetupJVMWrapper.LastBindingException object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples The most simple way to use this class is to execute the following code at the beginning of the application: KEFCore.CreateGlobalInstance(); The class reads configuration parameters in multiple ways: command line, environment variables and code override. To insert values in the code an user can create a custom class like the following and overrides the interested properties: public class CustomKEFCore : KEFCore { public override string JVMPath => \"MySpecialPath\"; } Properties PreserveInformationAcrossContexts Set to false to disable Apache Kafka Streams caching, default is true public static bool PreserveInformationAcrossContexts { get; set; } Property Value bool Remarks This value is read only once when application starts: if the backend uses Apache Kafka Streams (i.e. UseCompactedReplicator is false), the value is read to understand how to manage Streams instances lifetime Methods DefaultLog4JConfiguration() Returns the default configuration file to use when initializing command line defaults protected override string DefaultLog4JConfiguration() Returns string The configuration file to use for logging Remarks Overrides in derived classes to give another default file"
  },
  "api/MASES.EntityFrameworkCore.KNet.KafkaDatabaseFacadeExtensions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.KafkaDatabaseFacadeExtensions.html",
    "title": "Class KafkaDatabaseFacadeExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDatabaseFacadeExtensions Namespace MASES.EntityFrameworkCore.KNet Assembly MASES.EntityFrameworkCore.KNet.dll Kafka specific extension methods for Database. public static class KafkaDatabaseFacadeExtensions Inheritance object KafkaDatabaseFacadeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsKafka(DatabaseFacade) Returns true if the database provider currently in use is the Kafka provider. public static bool IsKafka(this DatabaseFacade database) Parameters database DatabaseFacade The facade from Database. Returns bool true if the Kafka database is being used. Remarks This method can only be used after the DbContext has been configured because it is only then that the provider is known. This means that this method cannot be used in OnConfiguring(DbContextOptionsBuilder) because this is where application code sets the provider to use as part of configuring the context. See The EF Core Kafka database provider for more information and examples."
  },
  "api/MASES.EntityFrameworkCore.KNet.KafkaDbContextOptionsExtensions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.KafkaDbContextOptionsExtensions.html",
    "title": "Class KafkaDbContextOptionsExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDbContextOptionsExtensions Namespace MASES.EntityFrameworkCore.KNet Assembly MASES.EntityFrameworkCore.KNet.dll Kafka specific extension methods for DbContextOptionsBuilder. public static class KafkaDbContextOptionsExtensions Inheritance object KafkaDbContextOptionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods JVMKeyType(IKafkaSingletonOptions, IEntityType) Create the ValueContainer Type public static Type JVMKeyType(this IKafkaSingletonOptions options, IEntityType entityType) Parameters options IKafkaSingletonOptions entityType IEntityType Returns Type JVMValueContainerType(IKafkaSingletonOptions, IEntityType) Create the ValueContainer Type public static Type JVMValueContainerType(this IKafkaSingletonOptions options, IEntityType entityType) Parameters options IKafkaSingletonOptions entityType IEntityType Returns Type KeyType(IKafkaSingletonOptions, IEntityType) Creates a serializer Type for keys public static Type KeyType(this IKafkaSingletonOptions options, IEntityType entityType) Parameters options IKafkaSingletonOptions entityType IEntityType Returns Type SerDesSelectorForKey(IKafkaSingletonOptions, IEntityType) Creates a serializer Type for keys public static ISerDesSelector? SerDesSelectorForKey(this IKafkaSingletonOptions options, IEntityType entityType) Parameters options IKafkaSingletonOptions entityType IEntityType Returns ISerDesSelector SerDesSelectorForValue(IKafkaSingletonOptions, IEntityType) Creates a serialzier Type for values public static ISerDesSelector? SerDesSelectorForValue(this IKafkaSingletonOptions options, IEntityType entityType) Parameters options IKafkaSingletonOptions entityType IEntityType Returns ISerDesSelector UseKafkaCluster(DbContextOptionsBuilder, string, string, string, Action<KafkaDbContextOptionsBuilder>?) Configures the context to connect to a named Apache Kafka cluster. The Apache Kafka cluster is shared anywhere the same name is used, but only for a given service provider. public static DbContextOptionsBuilder UseKafkaCluster(this DbContextOptionsBuilder optionsBuilder, string applicationId, string databaseName, string bootstrapServers, Action<KafkaDbContextOptionsBuilder>? kafkaOptionsAction = null) Parameters optionsBuilder DbContextOptionsBuilder The builder being used to configure the context. applicationId string The name of the application will use databaseName. This allows the scope of the Apache Kafka cluster to be controlled independently of the context. The Apache Kafka cluster is shared anywhere the same name is used. databaseName string The name of the Apache Kafka cluster. This allows the scope of the Apache Kafka cluster to be controlled independently of the context. The Apache Kafka cluster is shared anywhere the same name is used. bootstrapServers string The bootstrap servers of the Kafka cluster. kafkaOptionsAction Action<KafkaDbContextOptionsBuilder> An optional action to allow additional Kafka specific configuration. Returns DbContextOptionsBuilder The options builder so that further configuration can be chained. Remarks See Using DbContextOptions, and The EF Core Apache Kafka cluster provider for more information and examples. UseKafkaCluster<TContext>(DbContextOptionsBuilder<TContext>, string, string, string, Action<KafkaDbContextOptionsBuilder>?) Configures the context to connect to an Apache Kafka cluster. The Apache Kafka cluster is shared anywhere the same name is used, but only for a given service provider. public static DbContextOptionsBuilder<TContext> UseKafkaCluster<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, string applicationId, string databaseName, string bootstrapServers, Action<KafkaDbContextOptionsBuilder>? kafkaOptionsAction = null) where TContext : DbContext Parameters optionsBuilder DbContextOptionsBuilder<TContext> The builder being used to configure the context. applicationId string The name of the application will use databaseName. This allows the scope of the Apache Kafka cluster to be controlled independently of the context. The Apache Kafka cluster is shared anywhere the same name is used. databaseName string The name of the Apache Kafka cluster. This allows the scope of the Apache Kafka cluster to be controlled independently of the context. The Apache Kafka cluster is shared anywhere the same name is used. bootstrapServers string The bootstrap servers of the Kafka cluster. kafkaOptionsAction Action<KafkaDbContextOptionsBuilder> An optional action to allow additional Apache Kafka cluster specific configuration. Returns DbContextOptionsBuilder<TContext> The options builder so that further configuration can be chained. Type Parameters TContext The type of context being configured. Remarks See Using DbContextOptions, and The EF Core Apache Kafka cluster provider for more information and examples. ValueContainerType(IKafkaSingletonOptions, IEntityType) Create the ValueContainer Type public static Type ValueContainerType(this IKafkaSingletonOptions options, IEntityType entityType) Parameters options IKafkaSingletonOptions entityType IEntityType Returns Type"
  },
  "api/MASES.EntityFrameworkCore.KNet.KafkaEntityTypeBuilderExtensions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.KafkaEntityTypeBuilderExtensions.html",
    "title": "Class KafkaEntityTypeBuilderExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaEntityTypeBuilderExtensions Namespace MASES.EntityFrameworkCore.KNet Assembly MASES.EntityFrameworkCore.KNet.dll Extension methods for EntityTypeBuilder for the Kafka provider. public static class KafkaEntityTypeBuilderExtensions Inheritance object KafkaEntityTypeBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Modeling entity types and relationships, and The EF Core Kafka database provider for more information and examples. Methods CanSetKafkaQuery(IConventionEntityTypeBuilder, LambdaExpression?, bool) Returns a value indicating whether the given Kafka query can be set from the current configuration source. public static bool CanSetKafkaQuery(this IConventionEntityTypeBuilder entityTypeBuilder, LambdaExpression? query, bool fromDataAnnotation = false) Parameters entityTypeBuilder IConventionEntityTypeBuilder The builder for the entity type being configured. query LambdaExpression The query that will provide the underlying data for the keyless entity type. fromDataAnnotation bool Indicates whether the configuration was specified using a data annotation. Returns bool true if the given Kafka query can be set. Remarks See Modeling entity types and relationships, and The EF Core Kafka database provider for more information and examples. ToKafkaQuery(EntityTypeBuilder, LambdaExpression?) Configures a query used to provide data for an entity type. public static EntityTypeBuilder ToKafkaQuery(this EntityTypeBuilder entityTypeBuilder, LambdaExpression? query) Parameters entityTypeBuilder EntityTypeBuilder The builder for the entity type being configured. query LambdaExpression The query that will provide the underlying data for the entity type. Returns EntityTypeBuilder The same builder instance so that multiple calls can be chained. Remarks See Modeling entity types and relationships, and The EF Core Kafka database provider for more information and examples. ToKafkaQuery(IConventionEntityTypeBuilder, LambdaExpression?, bool) Configures a query used to provide data for an entity type. public static IConventionEntityTypeBuilder? ToKafkaQuery(this IConventionEntityTypeBuilder entityTypeBuilder, LambdaExpression? query, bool fromDataAnnotation = false) Parameters entityTypeBuilder IConventionEntityTypeBuilder The builder for the entity type being configured. query LambdaExpression The query that will provide the underlying data for the entity type. fromDataAnnotation bool Indicates whether the configuration was specified using a data annotation. Returns IConventionEntityTypeBuilder The same builder instance if the query was set, null otherwise. Remarks See Modeling entity types and relationships, and The EF Core Kafka database provider for more information and examples. ToKafkaQuery<TEntity>(EntityTypeBuilder<TEntity>, Expression<Func<IQueryable<TEntity>>>) Configures a query used to provide data for an entity type. public static EntityTypeBuilder<TEntity> ToKafkaQuery<TEntity>(this EntityTypeBuilder<TEntity> entityTypeBuilder, Expression<Func<IQueryable<TEntity>>> query) where TEntity : class Parameters entityTypeBuilder EntityTypeBuilder<TEntity> The builder for the entity type being configured. query Expression<Func<IQueryable<TEntity>>> The query that will provide the underlying data for the entity type. Returns EntityTypeBuilder<TEntity> The same builder instance so that multiple calls can be chained. Type Parameters TEntity Remarks See Modeling entity types and relationships, and The EF Core Kafka database provider for more information and examples."
  },
  "api/MASES.EntityFrameworkCore.KNet.KafkaEntityTypeExtensions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.KafkaEntityTypeExtensions.html",
    "title": "Class KafkaEntityTypeExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaEntityTypeExtensions Namespace MASES.EntityFrameworkCore.KNet Assembly MASES.EntityFrameworkCore.KNet.dll Extension methods for IReadOnlyEntityType for the Kafka provider. public static class KafkaEntityTypeExtensions Inheritance object KafkaEntityTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Modeling entity types and relationships, and The EF Core Kafka database provider for more information and examples. Methods ApplicationIdForTable(IEntityType, KafkaOptionsExtension) Creates the application id public static string ApplicationIdForTable(this IEntityType entityType, KafkaOptionsExtension options) Parameters entityType IEntityType options KafkaOptionsExtension Returns string ConsumerInstances(IEntityType, KafkaOptionsExtension) Gets consumer instances public static int? ConsumerInstances(this IEntityType entityType, KafkaOptionsExtension options) Parameters entityType IEntityType options KafkaOptionsExtension Returns int? GetDefiningQueryConfigurationSource(IConventionEntityType) Returns the configuration source for GetKafkaQuery(IReadOnlyEntityType). public static ConfigurationSource? GetDefiningQueryConfigurationSource(this IConventionEntityType entityType) Parameters entityType IConventionEntityType The entity type. Returns ConfigurationSource? The configuration source for GetKafkaQuery(IReadOnlyEntityType). GetKafkaQuery(IReadOnlyEntityType) Gets the LINQ query used as the default source for queries of this type. public static LambdaExpression? GetKafkaQuery(this IReadOnlyEntityType entityType) Parameters entityType IReadOnlyEntityType The entity type to get the Kafka query for. Returns LambdaExpression The LINQ query used as the default source. NumPartitions(IEntityType, KafkaOptionsExtension) Gets number of partitions public static int NumPartitions(this IEntityType entityType, KafkaOptionsExtension options) Parameters entityType IEntityType options KafkaOptionsExtension Returns int ReplicationFactor(IEntityType, KafkaOptionsExtension) Gets replication factor public static short ReplicationFactor(this IEntityType entityType, KafkaOptionsExtension options) Parameters entityType IEntityType options KafkaOptionsExtension Returns short SetKafkaQuery(IConventionEntityType, LambdaExpression?, bool) Sets the LINQ query used as the default source for queries of this type. public static LambdaExpression? SetKafkaQuery(this IConventionEntityType entityType, LambdaExpression? kafkaQuery, bool fromDataAnnotation = false) Parameters entityType IConventionEntityType The entity type. kafkaQuery LambdaExpression The LINQ query used as the default source. fromDataAnnotation bool Indicates whether the configuration was specified using a data annotation. Returns LambdaExpression The configured entity type. SetKafkaQuery(IMutableEntityType, LambdaExpression?) Sets the LINQ query used as the default source for queries of this type. public static void SetKafkaQuery(this IMutableEntityType entityType, LambdaExpression? kafkaQuery) Parameters entityType IMutableEntityType The entity type. kafkaQuery LambdaExpression The LINQ query used as the default source. StorageIdForTable(IEntityType, KafkaOptionsExtension) Creates the storage id public static string StorageIdForTable(this IEntityType entityType, KafkaOptionsExtension options) Parameters entityType IEntityType options KafkaOptionsExtension Returns string TopicName(IEntityType, KafkaOptionsExtension) Creates the topic name public static string TopicName(this IEntityType entityType, KafkaOptionsExtension options) Parameters entityType IEntityType options KafkaOptionsExtension Returns string"
  },
  "api/MASES.EntityFrameworkCore.KNet.Metadata.Conventions.DefiningQueryRewritingConvention.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Metadata.Conventions.DefiningQueryRewritingConvention.html",
    "title": "Class DefiningQueryRewritingConvention | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class DefiningQueryRewritingConvention Namespace MASES.EntityFrameworkCore.KNet.Metadata.Conventions Assembly MASES.EntityFrameworkCore.KNet.dll Convention that converts accesses of DbSet<TEntity> inside query filters and defining queries into QueryRootExpression. This makes them consistent with how DbSet accesses in the actual queries are represented, which allows for easier processing in the query pipeline. public class DefiningQueryRewritingConvention : QueryFilterRewritingConvention, IModelFinalizingConvention, IConvention Inheritance object QueryFilterRewritingConvention DefiningQueryRewritingConvention Implements IModelFinalizingConvention IConvention Inherited Members QueryFilterRewritingConvention.Dependencies QueryFilterRewritingConvention.DbSetAccessRewriter object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Model building conventions, and The EF Core Kafka database provider for more information and examples. Constructors DefiningQueryRewritingConvention(ProviderConventionSetBuilderDependencies) Creates a new instance of QueryFilterRewritingConvention. public DefiningQueryRewritingConvention(ProviderConventionSetBuilderDependencies dependencies) Parameters dependencies ProviderConventionSetBuilderDependencies Parameter object containing dependencies for this convention. Methods ProcessModelFinalizing(IConventionModelBuilder, IConventionContext<IConventionModelBuilder>) Called when a model is being finalized. public override void ProcessModelFinalizing(IConventionModelBuilder modelBuilder, IConventionContext<IConventionModelBuilder> context) Parameters modelBuilder IConventionModelBuilder The builder for the model. context IConventionContext<IConventionModelBuilder> Additional information associated with convention execution."
  },
  "api/MASES.EntityFrameworkCore.KNet.Metadata.Conventions.KafkaConventionSetBuilder.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Metadata.Conventions.KafkaConventionSetBuilder.html",
    "title": "Class KafkaConventionSetBuilder | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaConventionSetBuilder Namespace MASES.EntityFrameworkCore.KNet.Metadata.Conventions Assembly MASES.EntityFrameworkCore.KNet.dll A builder for building conventions for th Kafka provider. public class KafkaConventionSetBuilder : ProviderConventionSetBuilder, IProviderConventionSetBuilder Inheritance object ProviderConventionSetBuilder KafkaConventionSetBuilder Implements IProviderConventionSetBuilder Inherited Members ProviderConventionSetBuilder.ReplaceConvention<TConvention, TImplementation>(List<TConvention>, TImplementation) ProviderConventionSetBuilder.Dependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The service lifetime is Scoped and multiple registrations are allowed. This means that each DbContext instance will use its own set of instances of this service. The implementations may depend on other services registered with any lifetime. The implementations do not need to be thread-safe. See Model building conventions, and The EF Core Kafka database provider for more information and examples. Constructors KafkaConventionSetBuilder(ProviderConventionSetBuilderDependencies) Creates a new KafkaConventionSetBuilder instance. public KafkaConventionSetBuilder(ProviderConventionSetBuilderDependencies dependencies) Parameters dependencies ProviderConventionSetBuilderDependencies The core dependencies for this service. Methods Build() Call this method to build a ConventionSet for the Kafka provider when using the ModelBuilder outside of OnModelCreating(ModelBuilder). public static ConventionSet Build() Returns ConventionSet The convention set. Remarks Note that it is unusual to use this method. Consider using DbContext in the normal way instead. CreateConventionSet() Builds and returns the convention set for the current database provider. public override ConventionSet CreateConventionSet() Returns ConventionSet The convention set for the current database provider. CreateModelBuilder() Call this method to build a ModelBuilder for SQLite outside of OnModelCreating(ModelBuilder). public static ModelBuilder CreateModelBuilder() Returns ModelBuilder The convention set. Remarks Note that it is unusual to use this method. Consider using DbContext in the normal way instead."
  },
  "api/MASES.EntityFrameworkCore.KNet.Metadata.Conventions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Metadata.Conventions.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Metadata.Conventions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Metadata.Conventions Classes DefiningQueryRewritingConvention Convention that converts accesses of DbSet<TEntity> inside query filters and defining queries into QueryRootExpression. This makes them consistent with how DbSet accesses in the actual queries are represented, which allows for easier processing in the query pipeline. KafkaConventionSetBuilder A builder for building conventions for th Kafka provider."
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.AnonymousObject.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.AnonymousObject.html",
    "title": "Struct AnonymousObject | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Struct AnonymousObject Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public readonly struct AnonymousObject Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors AnonymousObject(object[]) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public AnonymousObject(object[] values) Parameters values object[] Fields AnonymousObjectCtor This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static readonly ConstructorInfo AnonymousObjectCtor Field Value ConstructorInfo Methods Equals(object?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override int GetHashCode() Returns int Operators operator ==(AnonymousObject, AnonymousObject) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static bool operator ==(AnonymousObject x, AnonymousObject y) Parameters x AnonymousObject y AnonymousObject Returns bool operator !=(AnonymousObject, AnonymousObject) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static bool operator !=(AnonymousObject x, AnonymousObject y) Parameters x AnonymousObject y AnonymousObject Returns bool"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.CollectionResultShaperExpression.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.CollectionResultShaperExpression.html",
    "title": "Class CollectionResultShaperExpression | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class CollectionResultShaperExpression Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class CollectionResultShaperExpression : Expression, IPrintableExpression Inheritance object Expression CollectionResultShaperExpression Implements IPrintableExpression Inherited Members Expression.Accept(ExpressionVisitor) Expression.Add(Expression, Expression) Expression.Add(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression) Expression.AddAssign(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddAssignChecked(Expression, Expression) Expression.AddAssignChecked(Expression, Expression, MethodInfo) Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddChecked(Expression, Expression) Expression.AddChecked(Expression, Expression, MethodInfo) Expression.And(Expression, Expression) Expression.And(Expression, Expression, MethodInfo) Expression.AndAlso(Expression, Expression) Expression.AndAlso(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression) Expression.AndAssign(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.ArrayAccess(Expression, IEnumerable<Expression>) Expression.ArrayAccess(Expression, params Expression[]) Expression.ArrayIndex(Expression, IEnumerable<Expression>) Expression.ArrayIndex(Expression, Expression) Expression.ArrayIndex(Expression, params Expression[]) Expression.ArrayLength(Expression) Expression.Assign(Expression, Expression) Expression.Bind(MemberInfo, Expression) Expression.Bind(MethodInfo, Expression) Expression.Block(IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Expression, Expression) Expression.Block(Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression, Expression) Expression.Block(params Expression[]) Expression.Block(Type, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Type, params Expression[]) Expression.Break(LabelTarget) Expression.Break(LabelTarget, Expression) Expression.Break(LabelTarget, Expression, Type) Expression.Break(LabelTarget, Type) Expression.Call(Expression, MethodInfo) Expression.Call(Expression, MethodInfo, IEnumerable<Expression>) Expression.Call(Expression, MethodInfo, Expression, Expression) Expression.Call(Expression, MethodInfo, Expression, Expression, Expression) Expression.Call(Expression, MethodInfo, params Expression[]) Expression.Call(Expression, string, Type[], params Expression[]) Expression.Call(MethodInfo, IEnumerable<Expression>) Expression.Call(MethodInfo, Expression) Expression.Call(MethodInfo, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, params Expression[]) Expression.Call(Type, string, Type[], params Expression[]) Expression.Catch(ParameterExpression, Expression) Expression.Catch(ParameterExpression, Expression, Expression) Expression.Catch(Type, Expression) Expression.Catch(Type, Expression, Expression) Expression.ClearDebugInfo(SymbolDocumentInfo) Expression.Coalesce(Expression, Expression) Expression.Coalesce(Expression, Expression, LambdaExpression) Expression.Condition(Expression, Expression, Expression) Expression.Condition(Expression, Expression, Expression, Type) Expression.Constant(object) Expression.Constant(object, Type) Expression.Continue(LabelTarget) Expression.Continue(LabelTarget, Type) Expression.Convert(Expression, Type) Expression.Convert(Expression, Type, MethodInfo) Expression.ConvertChecked(Expression, Type) Expression.ConvertChecked(Expression, Type, MethodInfo) Expression.DebugInfo(SymbolDocumentInfo, int, int, int, int) Expression.Decrement(Expression) Expression.Decrement(Expression, MethodInfo) Expression.Default(Type) Expression.Divide(Expression, Expression) Expression.Divide(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression) Expression.DivideAssign(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>) Expression.Dynamic(CallSiteBinder, Type, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, params Expression[]) Expression.ElementInit(MethodInfo, IEnumerable<Expression>) Expression.ElementInit(MethodInfo, params Expression[]) Expression.Empty() Expression.Equal(Expression, Expression) Expression.Equal(Expression, Expression, bool, MethodInfo) Expression.ExclusiveOr(Expression, Expression) Expression.ExclusiveOr(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Field(Expression, FieldInfo) Expression.Field(Expression, string) Expression.Field(Expression, Type, string) Expression.GetActionType(params Type[]) Expression.GetDelegateType(params Type[]) Expression.GetFuncType(params Type[]) Expression.Goto(LabelTarget) Expression.Goto(LabelTarget, Expression) Expression.Goto(LabelTarget, Expression, Type) Expression.Goto(LabelTarget, Type) Expression.GreaterThan(Expression, Expression) Expression.GreaterThan(Expression, Expression, bool, MethodInfo) Expression.GreaterThanOrEqual(Expression, Expression) Expression.GreaterThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.IfThen(Expression, Expression) Expression.IfThenElse(Expression, Expression, Expression) Expression.Increment(Expression) Expression.Increment(Expression, MethodInfo) Expression.Invoke(Expression, IEnumerable<Expression>) Expression.Invoke(Expression, params Expression[]) Expression.IsFalse(Expression) Expression.IsFalse(Expression, MethodInfo) Expression.IsTrue(Expression) Expression.IsTrue(Expression, MethodInfo) Expression.Label() Expression.Label(LabelTarget) Expression.Label(LabelTarget, Expression) Expression.Label(string) Expression.Label(Type) Expression.Label(Type, string) Expression.Lambda(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, bool, params ParameterExpression[]) Expression.Lambda(Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, params ParameterExpression[]) Expression.Lambda(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, params ParameterExpression[]) Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, params ParameterExpression[]) Expression.Lambda(Type, Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, string, IEnumerable<ParameterExpression>) Expression.LeftShift(Expression, Expression) Expression.LeftShift(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression) Expression.LeftShiftAssign(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.LessThan(Expression, Expression) Expression.LessThan(Expression, Expression, bool, MethodInfo) Expression.LessThanOrEqual(Expression, Expression) Expression.LessThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.ListBind(MemberInfo, IEnumerable<ElementInit>) Expression.ListBind(MemberInfo, params ElementInit[]) Expression.ListBind(MethodInfo, IEnumerable<ElementInit>) Expression.ListBind(MethodInfo, params ElementInit[]) Expression.ListInit(NewExpression, IEnumerable<ElementInit>) Expression.ListInit(NewExpression, IEnumerable<Expression>) Expression.ListInit(NewExpression, params ElementInit[]) Expression.ListInit(NewExpression, params Expression[]) Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>) Expression.ListInit(NewExpression, MethodInfo, params Expression[]) Expression.Loop(Expression) Expression.Loop(Expression, LabelTarget) Expression.Loop(Expression, LabelTarget, LabelTarget) Expression.MakeBinary(ExpressionType, Expression, Expression) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo, LambdaExpression) Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>) Expression.MakeDynamic(Type, CallSiteBinder, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, params Expression[]) Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type) Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>) Expression.MakeMemberAccess(Expression, MemberInfo) Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>) Expression.MakeUnary(ExpressionType, Expression, Type) Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo) Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MemberInfo, params MemberBinding[]) Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MethodInfo, params MemberBinding[]) Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>) Expression.MemberInit(NewExpression, params MemberBinding[]) Expression.Modulo(Expression, Expression) Expression.Modulo(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression) Expression.ModuloAssign(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Multiply(Expression, Expression) Expression.Multiply(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression) Expression.MultiplyAssign(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyAssignChecked(Expression, Expression) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyChecked(Expression, Expression) Expression.MultiplyChecked(Expression, Expression, MethodInfo) Expression.Negate(Expression) Expression.Negate(Expression, MethodInfo) Expression.NegateChecked(Expression) Expression.NegateChecked(Expression, MethodInfo) Expression.New(ConstructorInfo) Expression.New(ConstructorInfo, IEnumerable<Expression>) Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>) Expression.New(ConstructorInfo, IEnumerable<Expression>, params MemberInfo[]) Expression.New(ConstructorInfo, params Expression[]) Expression.New(Type) Expression.NewArrayBounds(Type, IEnumerable<Expression>) Expression.NewArrayBounds(Type, params Expression[]) Expression.NewArrayInit(Type, IEnumerable<Expression>) Expression.NewArrayInit(Type, params Expression[]) Expression.Not(Expression) Expression.Not(Expression, MethodInfo) Expression.NotEqual(Expression, Expression) Expression.NotEqual(Expression, Expression, bool, MethodInfo) Expression.OnesComplement(Expression) Expression.OnesComplement(Expression, MethodInfo) Expression.Or(Expression, Expression) Expression.Or(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression) Expression.OrAssign(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.OrElse(Expression, Expression) Expression.OrElse(Expression, Expression, MethodInfo) Expression.Parameter(Type) Expression.Parameter(Type, string) Expression.PostDecrementAssign(Expression) Expression.PostDecrementAssign(Expression, MethodInfo) Expression.PostIncrementAssign(Expression) Expression.PostIncrementAssign(Expression, MethodInfo) Expression.Power(Expression, Expression) Expression.Power(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression) Expression.PowerAssign(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.PreDecrementAssign(Expression) Expression.PreDecrementAssign(Expression, MethodInfo) Expression.PreIncrementAssign(Expression) Expression.PreIncrementAssign(Expression, MethodInfo) Expression.Property(Expression, MethodInfo) Expression.Property(Expression, PropertyInfo) Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>) Expression.Property(Expression, PropertyInfo, params Expression[]) Expression.Property(Expression, string) Expression.Property(Expression, string, params Expression[]) Expression.Property(Expression, Type, string) Expression.PropertyOrField(Expression, string) Expression.Quote(Expression) Expression.Reduce() Expression.ReduceAndCheck() Expression.ReduceExtensions() Expression.ReferenceEqual(Expression, Expression) Expression.ReferenceNotEqual(Expression, Expression) Expression.Rethrow() Expression.Rethrow(Type) Expression.Return(LabelTarget) Expression.Return(LabelTarget, Expression) Expression.Return(LabelTarget, Expression, Type) Expression.Return(LabelTarget, Type) Expression.RightShift(Expression, Expression) Expression.RightShift(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression) Expression.RightShiftAssign(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.RuntimeVariables(IEnumerable<ParameterExpression>) Expression.RuntimeVariables(params ParameterExpression[]) Expression.Subtract(Expression, Expression) Expression.Subtract(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression) Expression.SubtractAssign(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractAssignChecked(Expression, Expression) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractChecked(Expression, Expression) Expression.SubtractChecked(Expression, Expression, MethodInfo) Expression.Switch(Expression, Expression, params SwitchCase[]) Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Expression, Expression, MethodInfo, params SwitchCase[]) Expression.Switch(Expression, params SwitchCase[]) Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Type, Expression, Expression, MethodInfo, params SwitchCase[]) Expression.SwitchCase(Expression, IEnumerable<Expression>) Expression.SwitchCase(Expression, params Expression[]) Expression.SymbolDocument(string) Expression.SymbolDocument(string, Guid) Expression.SymbolDocument(string, Guid, Guid) Expression.SymbolDocument(string, Guid, Guid, Guid) Expression.Throw(Expression) Expression.Throw(Expression, Type) Expression.ToString() Expression.TryCatch(Expression, params CatchBlock[]) Expression.TryCatchFinally(Expression, Expression, params CatchBlock[]) Expression.TryFault(Expression, Expression) Expression.TryFinally(Expression, Expression) Expression.TryGetActionType(Type[], out Type) Expression.TryGetFuncType(Type[], out Type) Expression.TypeAs(Expression, Type) Expression.TypeEqual(Expression, Type) Expression.TypeIs(Expression, Type) Expression.UnaryPlus(Expression) Expression.UnaryPlus(Expression, MethodInfo) Expression.Unbox(Expression, Type) Expression.Variable(Type) Expression.Variable(Type, string) Expression.CanReduce object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CollectionResultShaperExpression(Expression, Expression, INavigationBase?, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public CollectionResultShaperExpression(Expression projection, Expression innerShaper, INavigationBase? navigation, Type elementType) Parameters projection Expression innerShaper Expression navigation INavigationBase elementType Type Properties ElementType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Type ElementType { get; } Property Value Type InnerShaper This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression InnerShaper { get; } Property Value Expression Navigation This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual INavigationBase? Navigation { get; } Property Value INavigationBase NodeType Gets the node type of this Expression. public override sealed ExpressionType NodeType { get; } Property Value ExpressionType One of the ExpressionType values. Projection This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression Projection { get; } Property Value Expression Type Gets the static type of the expression that this Expression represents. public override Type Type { get; } Property Value Type The Type that represents the static type of the expression. Methods Update(Expression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual CollectionResultShaperExpression Update(Expression projection, Expression innerShaper) Parameters projection Expression innerShaper Expression Returns CollectionResultShaperExpression VisitChildren(ExpressionVisitor) Reduces the node and then calls the visitor delegate on the reduced expression. The method throws an exception if the node is not reducible. protected override Expression VisitChildren(ExpressionVisitor visitor) Parameters visitor ExpressionVisitor An instance of Func<T, TResult>. Returns Expression The expression being visited, or an expression which should replace it in the tree."
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.EntityProjectionExpression.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.EntityProjectionExpression.html",
    "title": "Class EntityProjectionExpression | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class EntityProjectionExpression Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class EntityProjectionExpression : Expression, IPrintableExpression Inheritance object Expression EntityProjectionExpression Implements IPrintableExpression Inherited Members Expression.Accept(ExpressionVisitor) Expression.Add(Expression, Expression) Expression.Add(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression) Expression.AddAssign(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddAssignChecked(Expression, Expression) Expression.AddAssignChecked(Expression, Expression, MethodInfo) Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddChecked(Expression, Expression) Expression.AddChecked(Expression, Expression, MethodInfo) Expression.And(Expression, Expression) Expression.And(Expression, Expression, MethodInfo) Expression.AndAlso(Expression, Expression) Expression.AndAlso(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression) Expression.AndAssign(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.ArrayAccess(Expression, IEnumerable<Expression>) Expression.ArrayAccess(Expression, params Expression[]) Expression.ArrayIndex(Expression, IEnumerable<Expression>) Expression.ArrayIndex(Expression, Expression) Expression.ArrayIndex(Expression, params Expression[]) Expression.ArrayLength(Expression) Expression.Assign(Expression, Expression) Expression.Bind(MemberInfo, Expression) Expression.Bind(MethodInfo, Expression) Expression.Block(IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Expression, Expression) Expression.Block(Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression, Expression) Expression.Block(params Expression[]) Expression.Block(Type, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Type, params Expression[]) Expression.Break(LabelTarget) Expression.Break(LabelTarget, Expression) Expression.Break(LabelTarget, Expression, Type) Expression.Break(LabelTarget, Type) Expression.Call(Expression, MethodInfo) Expression.Call(Expression, MethodInfo, IEnumerable<Expression>) Expression.Call(Expression, MethodInfo, Expression, Expression) Expression.Call(Expression, MethodInfo, Expression, Expression, Expression) Expression.Call(Expression, MethodInfo, params Expression[]) Expression.Call(Expression, string, Type[], params Expression[]) Expression.Call(MethodInfo, IEnumerable<Expression>) Expression.Call(MethodInfo, Expression) Expression.Call(MethodInfo, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, params Expression[]) Expression.Call(Type, string, Type[], params Expression[]) Expression.Catch(ParameterExpression, Expression) Expression.Catch(ParameterExpression, Expression, Expression) Expression.Catch(Type, Expression) Expression.Catch(Type, Expression, Expression) Expression.ClearDebugInfo(SymbolDocumentInfo) Expression.Coalesce(Expression, Expression) Expression.Coalesce(Expression, Expression, LambdaExpression) Expression.Condition(Expression, Expression, Expression) Expression.Condition(Expression, Expression, Expression, Type) Expression.Constant(object) Expression.Constant(object, Type) Expression.Continue(LabelTarget) Expression.Continue(LabelTarget, Type) Expression.Convert(Expression, Type) Expression.Convert(Expression, Type, MethodInfo) Expression.ConvertChecked(Expression, Type) Expression.ConvertChecked(Expression, Type, MethodInfo) Expression.DebugInfo(SymbolDocumentInfo, int, int, int, int) Expression.Decrement(Expression) Expression.Decrement(Expression, MethodInfo) Expression.Default(Type) Expression.Divide(Expression, Expression) Expression.Divide(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression) Expression.DivideAssign(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>) Expression.Dynamic(CallSiteBinder, Type, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, params Expression[]) Expression.ElementInit(MethodInfo, IEnumerable<Expression>) Expression.ElementInit(MethodInfo, params Expression[]) Expression.Empty() Expression.Equal(Expression, Expression) Expression.Equal(Expression, Expression, bool, MethodInfo) Expression.ExclusiveOr(Expression, Expression) Expression.ExclusiveOr(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Field(Expression, FieldInfo) Expression.Field(Expression, string) Expression.Field(Expression, Type, string) Expression.GetActionType(params Type[]) Expression.GetDelegateType(params Type[]) Expression.GetFuncType(params Type[]) Expression.Goto(LabelTarget) Expression.Goto(LabelTarget, Expression) Expression.Goto(LabelTarget, Expression, Type) Expression.Goto(LabelTarget, Type) Expression.GreaterThan(Expression, Expression) Expression.GreaterThan(Expression, Expression, bool, MethodInfo) Expression.GreaterThanOrEqual(Expression, Expression) Expression.GreaterThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.IfThen(Expression, Expression) Expression.IfThenElse(Expression, Expression, Expression) Expression.Increment(Expression) Expression.Increment(Expression, MethodInfo) Expression.Invoke(Expression, IEnumerable<Expression>) Expression.Invoke(Expression, params Expression[]) Expression.IsFalse(Expression) Expression.IsFalse(Expression, MethodInfo) Expression.IsTrue(Expression) Expression.IsTrue(Expression, MethodInfo) Expression.Label() Expression.Label(LabelTarget) Expression.Label(LabelTarget, Expression) Expression.Label(string) Expression.Label(Type) Expression.Label(Type, string) Expression.Lambda(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, bool, params ParameterExpression[]) Expression.Lambda(Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, params ParameterExpression[]) Expression.Lambda(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, params ParameterExpression[]) Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, params ParameterExpression[]) Expression.Lambda(Type, Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, string, IEnumerable<ParameterExpression>) Expression.LeftShift(Expression, Expression) Expression.LeftShift(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression) Expression.LeftShiftAssign(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.LessThan(Expression, Expression) Expression.LessThan(Expression, Expression, bool, MethodInfo) Expression.LessThanOrEqual(Expression, Expression) Expression.LessThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.ListBind(MemberInfo, IEnumerable<ElementInit>) Expression.ListBind(MemberInfo, params ElementInit[]) Expression.ListBind(MethodInfo, IEnumerable<ElementInit>) Expression.ListBind(MethodInfo, params ElementInit[]) Expression.ListInit(NewExpression, IEnumerable<ElementInit>) Expression.ListInit(NewExpression, IEnumerable<Expression>) Expression.ListInit(NewExpression, params ElementInit[]) Expression.ListInit(NewExpression, params Expression[]) Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>) Expression.ListInit(NewExpression, MethodInfo, params Expression[]) Expression.Loop(Expression) Expression.Loop(Expression, LabelTarget) Expression.Loop(Expression, LabelTarget, LabelTarget) Expression.MakeBinary(ExpressionType, Expression, Expression) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo, LambdaExpression) Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>) Expression.MakeDynamic(Type, CallSiteBinder, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, params Expression[]) Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type) Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>) Expression.MakeMemberAccess(Expression, MemberInfo) Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>) Expression.MakeUnary(ExpressionType, Expression, Type) Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo) Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MemberInfo, params MemberBinding[]) Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MethodInfo, params MemberBinding[]) Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>) Expression.MemberInit(NewExpression, params MemberBinding[]) Expression.Modulo(Expression, Expression) Expression.Modulo(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression) Expression.ModuloAssign(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Multiply(Expression, Expression) Expression.Multiply(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression) Expression.MultiplyAssign(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyAssignChecked(Expression, Expression) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyChecked(Expression, Expression) Expression.MultiplyChecked(Expression, Expression, MethodInfo) Expression.Negate(Expression) Expression.Negate(Expression, MethodInfo) Expression.NegateChecked(Expression) Expression.NegateChecked(Expression, MethodInfo) Expression.New(ConstructorInfo) Expression.New(ConstructorInfo, IEnumerable<Expression>) Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>) Expression.New(ConstructorInfo, IEnumerable<Expression>, params MemberInfo[]) Expression.New(ConstructorInfo, params Expression[]) Expression.New(Type) Expression.NewArrayBounds(Type, IEnumerable<Expression>) Expression.NewArrayBounds(Type, params Expression[]) Expression.NewArrayInit(Type, IEnumerable<Expression>) Expression.NewArrayInit(Type, params Expression[]) Expression.Not(Expression) Expression.Not(Expression, MethodInfo) Expression.NotEqual(Expression, Expression) Expression.NotEqual(Expression, Expression, bool, MethodInfo) Expression.OnesComplement(Expression) Expression.OnesComplement(Expression, MethodInfo) Expression.Or(Expression, Expression) Expression.Or(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression) Expression.OrAssign(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.OrElse(Expression, Expression) Expression.OrElse(Expression, Expression, MethodInfo) Expression.Parameter(Type) Expression.Parameter(Type, string) Expression.PostDecrementAssign(Expression) Expression.PostDecrementAssign(Expression, MethodInfo) Expression.PostIncrementAssign(Expression) Expression.PostIncrementAssign(Expression, MethodInfo) Expression.Power(Expression, Expression) Expression.Power(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression) Expression.PowerAssign(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.PreDecrementAssign(Expression) Expression.PreDecrementAssign(Expression, MethodInfo) Expression.PreIncrementAssign(Expression) Expression.PreIncrementAssign(Expression, MethodInfo) Expression.Property(Expression, MethodInfo) Expression.Property(Expression, PropertyInfo) Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>) Expression.Property(Expression, PropertyInfo, params Expression[]) Expression.Property(Expression, string) Expression.Property(Expression, string, params Expression[]) Expression.Property(Expression, Type, string) Expression.PropertyOrField(Expression, string) Expression.Quote(Expression) Expression.Reduce() Expression.ReduceAndCheck() Expression.ReduceExtensions() Expression.ReferenceEqual(Expression, Expression) Expression.ReferenceNotEqual(Expression, Expression) Expression.Rethrow() Expression.Rethrow(Type) Expression.Return(LabelTarget) Expression.Return(LabelTarget, Expression) Expression.Return(LabelTarget, Expression, Type) Expression.Return(LabelTarget, Type) Expression.RightShift(Expression, Expression) Expression.RightShift(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression) Expression.RightShiftAssign(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.RuntimeVariables(IEnumerable<ParameterExpression>) Expression.RuntimeVariables(params ParameterExpression[]) Expression.Subtract(Expression, Expression) Expression.Subtract(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression) Expression.SubtractAssign(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractAssignChecked(Expression, Expression) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractChecked(Expression, Expression) Expression.SubtractChecked(Expression, Expression, MethodInfo) Expression.Switch(Expression, Expression, params SwitchCase[]) Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Expression, Expression, MethodInfo, params SwitchCase[]) Expression.Switch(Expression, params SwitchCase[]) Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Type, Expression, Expression, MethodInfo, params SwitchCase[]) Expression.SwitchCase(Expression, IEnumerable<Expression>) Expression.SwitchCase(Expression, params Expression[]) Expression.SymbolDocument(string) Expression.SymbolDocument(string, Guid) Expression.SymbolDocument(string, Guid, Guid) Expression.SymbolDocument(string, Guid, Guid, Guid) Expression.Throw(Expression) Expression.Throw(Expression, Type) Expression.ToString() Expression.TryCatch(Expression, params CatchBlock[]) Expression.TryCatchFinally(Expression, Expression, params CatchBlock[]) Expression.TryFault(Expression, Expression) Expression.TryFinally(Expression, Expression) Expression.TryGetActionType(Type[], out Type) Expression.TryGetFuncType(Type[], out Type) Expression.TypeAs(Expression, Type) Expression.TypeEqual(Expression, Type) Expression.TypeIs(Expression, Type) Expression.UnaryPlus(Expression) Expression.UnaryPlus(Expression, MethodInfo) Expression.Unbox(Expression, Type) Expression.Variable(Type) Expression.Variable(Type, string) Expression.VisitChildren(ExpressionVisitor) Expression.CanReduce object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EntityProjectionExpression(IEntityType, IReadOnlyDictionary<IProperty, MethodCallExpression>) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public EntityProjectionExpression(IEntityType entityType, IReadOnlyDictionary<IProperty, MethodCallExpression> readExpressionMap) Parameters entityType IEntityType readExpressionMap IReadOnlyDictionary<IProperty, MethodCallExpression> Properties EntityType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual IEntityType EntityType { get; } Property Value IEntityType NodeType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override sealed ExpressionType NodeType { get; } Property Value ExpressionType Type This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override Type Type { get; } Property Value Type Methods AddNavigationBinding(INavigation, StructuralTypeShaperExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void AddNavigationBinding(INavigation navigation, StructuralTypeShaperExpression shaper) Parameters navigation INavigation shaper StructuralTypeShaperExpression BindNavigation(INavigation) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual StructuralTypeShaperExpression? BindNavigation(INavigation navigation) Parameters navigation INavigation Returns StructuralTypeShaperExpression BindProperty(IProperty) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual MethodCallExpression BindProperty(IProperty property) Parameters property IProperty Returns MethodCallExpression Clone() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual EntityProjectionExpression Clone() Returns EntityProjectionExpression UpdateEntityType(IEntityType) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual EntityProjectionExpression UpdateEntityType(IEntityType derivedType) Parameters derivedType IEntityType Returns EntityProjectionExpression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaExpressionTranslatingExpressionVisitor.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaExpressionTranslatingExpressionVisitor.html",
    "title": "Class KafkaExpressionTranslatingExpressionVisitor | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaExpressionTranslatingExpressionVisitor Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaExpressionTranslatingExpressionVisitor : ExpressionVisitor Inheritance object ExpressionVisitor KafkaExpressionTranslatingExpressionVisitor Inherited Members ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.Visit(Expression) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.VisitBlock(BlockExpression) ExpressionVisitor.VisitCatchBlock(CatchBlock) ExpressionVisitor.VisitConstant(ConstantExpression) ExpressionVisitor.VisitDebugInfo(DebugInfoExpression) ExpressionVisitor.VisitDefault(DefaultExpression) ExpressionVisitor.VisitDynamic(DynamicExpression) ExpressionVisitor.VisitElementInit(ElementInit) ExpressionVisitor.VisitGoto(GotoExpression) ExpressionVisitor.VisitIndex(IndexExpression) ExpressionVisitor.VisitLabel(LabelExpression) ExpressionVisitor.VisitLabelTarget(LabelTarget) ExpressionVisitor.VisitLoop(LoopExpression) ExpressionVisitor.VisitMemberBinding(MemberBinding) ExpressionVisitor.VisitMemberListBinding(MemberListBinding) ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding) ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression) ExpressionVisitor.VisitSwitch(SwitchExpression) ExpressionVisitor.VisitSwitchCase(SwitchCase) ExpressionVisitor.VisitTry(TryExpression) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaExpressionTranslatingExpressionVisitor(QueryCompilationContext, QueryableMethodTranslatingExpressionVisitor) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaExpressionTranslatingExpressionVisitor(QueryCompilationContext queryCompilationContext, QueryableMethodTranslatingExpressionVisitor queryableMethodTranslatingExpressionVisitor) Parameters queryCompilationContext QueryCompilationContext queryableMethodTranslatingExpressionVisitor QueryableMethodTranslatingExpressionVisitor Properties TranslationErrorDetails This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual string? TranslationErrorDetails { get; } Property Value string Methods AddTranslationErrorDetails(string) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected virtual void AddTranslationErrorDetails(string details) Parameters details string Translate(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression? Translate(Expression expression) Parameters expression Expression Returns Expression VisitBinary(BinaryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitBinary(BinaryExpression binaryExpression) Parameters binaryExpression BinaryExpression Returns Expression VisitConditional(ConditionalExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitConditional(ConditionalExpression conditionalExpression) Parameters conditionalExpression ConditionalExpression Returns Expression VisitExtension(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitExtension(Expression extensionExpression) Parameters extensionExpression Expression Returns Expression VisitInvocation(InvocationExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitInvocation(InvocationExpression invocationExpression) Parameters invocationExpression InvocationExpression Returns Expression VisitLambda<T>(Expression<T>) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitLambda<T>(Expression<T> lambdaExpression) Parameters lambdaExpression Expression<T> Returns Expression Type Parameters T VisitListInit(ListInitExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitListInit(ListInitExpression listInitExpression) Parameters listInitExpression ListInitExpression Returns Expression VisitMember(MemberExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMember(MemberExpression memberExpression) Parameters memberExpression MemberExpression Returns Expression VisitMemberAssignment(MemberAssignment) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override MemberAssignment VisitMemberAssignment(MemberAssignment memberAssignment) Parameters memberAssignment MemberAssignment Returns MemberAssignment VisitMemberInit(MemberInitExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMemberInit(MemberInitExpression memberInitExpression) Parameters memberInitExpression MemberInitExpression Returns Expression VisitMethodCall(MethodCallExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMethodCall(MethodCallExpression methodCallExpression) Parameters methodCallExpression MethodCallExpression Returns Expression VisitNew(NewExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitNew(NewExpression newExpression) Parameters newExpression NewExpression Returns Expression VisitNewArray(NewArrayExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitNewArray(NewArrayExpression newArrayExpression) Parameters newArrayExpression NewArrayExpression Returns Expression VisitParameter(ParameterExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitParameter(ParameterExpression parameterExpression) Parameters parameterExpression ParameterExpression Returns Expression VisitTypeBinary(TypeBinaryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitTypeBinary(TypeBinaryExpression typeBinaryExpression) Parameters typeBinaryExpression TypeBinaryExpression Returns Expression VisitUnary(UnaryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitUnary(UnaryExpression unaryExpression) Parameters unaryExpression UnaryExpression Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaProjectionBindingExpressionVisitor.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaProjectionBindingExpressionVisitor.html",
    "title": "Class KafkaProjectionBindingExpressionVisitor | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaProjectionBindingExpressionVisitor Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaProjectionBindingExpressionVisitor : ExpressionVisitor Inheritance object ExpressionVisitor KafkaProjectionBindingExpressionVisitor Inherited Members ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.VisitBlock(BlockExpression) ExpressionVisitor.VisitCatchBlock(CatchBlock) ExpressionVisitor.VisitConstant(ConstantExpression) ExpressionVisitor.VisitDebugInfo(DebugInfoExpression) ExpressionVisitor.VisitDefault(DefaultExpression) ExpressionVisitor.VisitDynamic(DynamicExpression) ExpressionVisitor.VisitGoto(GotoExpression) ExpressionVisitor.VisitIndex(IndexExpression) ExpressionVisitor.VisitInvocation(InvocationExpression) ExpressionVisitor.VisitLabel(LabelExpression) ExpressionVisitor.VisitLabelTarget(LabelTarget) ExpressionVisitor.VisitLambda<T>(Expression<T>) ExpressionVisitor.VisitListInit(ListInitExpression) ExpressionVisitor.VisitLoop(LoopExpression) ExpressionVisitor.VisitMemberBinding(MemberBinding) ExpressionVisitor.VisitMemberListBinding(MemberListBinding) ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding) ExpressionVisitor.VisitParameter(ParameterExpression) ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression) ExpressionVisitor.VisitSwitch(SwitchExpression) ExpressionVisitor.VisitSwitchCase(SwitchCase) ExpressionVisitor.VisitTry(TryExpression) ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaProjectionBindingExpressionVisitor(KafkaQueryableMethodTranslatingExpressionVisitor, KafkaExpressionTranslatingExpressionVisitor) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaProjectionBindingExpressionVisitor(KafkaQueryableMethodTranslatingExpressionVisitor queryableMethodTranslatingExpressionVisitor, KafkaExpressionTranslatingExpressionVisitor expressionTranslatingExpressionVisitor) Parameters queryableMethodTranslatingExpressionVisitor KafkaQueryableMethodTranslatingExpressionVisitor expressionTranslatingExpressionVisitor KafkaExpressionTranslatingExpressionVisitor Methods Translate(KafkaQueryExpression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression Translate(KafkaQueryExpression queryExpression, Expression expression) Parameters queryExpression KafkaQueryExpression expression Expression Returns Expression Visit(Expression?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override Expression? Visit(Expression? expression) Parameters expression Expression Returns Expression VisitBinary(BinaryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitBinary(BinaryExpression binaryExpression) Parameters binaryExpression BinaryExpression Returns Expression VisitConditional(ConditionalExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitConditional(ConditionalExpression conditionalExpression) Parameters conditionalExpression ConditionalExpression Returns Expression VisitElementInit(ElementInit) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ElementInit VisitElementInit(ElementInit elementInit) Parameters elementInit ElementInit Returns ElementInit VisitExtension(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitExtension(Expression extensionExpression) Parameters extensionExpression Expression Returns Expression VisitMember(MemberExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMember(MemberExpression memberExpression) Parameters memberExpression MemberExpression Returns Expression VisitMemberAssignment(MemberAssignment) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override MemberAssignment VisitMemberAssignment(MemberAssignment memberAssignment) Parameters memberAssignment MemberAssignment Returns MemberAssignment VisitMemberInit(MemberInitExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMemberInit(MemberInitExpression memberInitExpression) Parameters memberInitExpression MemberInitExpression Returns Expression VisitMethodCall(MethodCallExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMethodCall(MethodCallExpression methodCallExpression) Parameters methodCallExpression MethodCallExpression Returns Expression VisitNew(NewExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitNew(NewExpression newExpression) Parameters newExpression NewExpression Returns Expression VisitNewArray(NewArrayExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitNewArray(NewArrayExpression newArrayExpression) Parameters newArrayExpression NewArrayExpression Returns Expression VisitUnary(UnaryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitUnary(UnaryExpression unaryExpression) Parameters unaryExpression UnaryExpression Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryContext.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryContext.html",
    "title": "Class KafkaQueryContext | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryContext Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryContext : QueryContext, IParameterValues Inheritance object QueryContext KafkaQueryContext Implements IParameterValues Inherited Members QueryContext.SetNavigationIsLoaded(object, INavigationBase) QueryContext.AddParameter(string, object) QueryContext.InitializeStateManager(bool) QueryContext.TryGetEntry(IKey, object[], bool, out bool) QueryContext.StartTracking(IEntityType, object, ValueBuffer) QueryContext.Context QueryContext.Dependencies QueryContext.ExecutionStrategy QueryContext.ConcurrencyDetector QueryContext.ExceptionDetector QueryContext.CancellationToken QueryContext.CommandLogger QueryContext.QueryLogger QueryContext.ParameterValues object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaQueryContext(QueryContextDependencies, IKafkaCluster) Default initializer public KafkaQueryContext(QueryContextDependencies dependencies, IKafkaCluster cluster) Parameters dependencies QueryContextDependencies cluster IKafkaCluster Methods GetValueBuffers(IEntityType) Retrieve ValueBuffer for the specified IEntityType public virtual IEnumerable<ValueBuffer> GetValueBuffers(IEntityType entityType) Parameters entityType IEntityType Returns IEnumerable<ValueBuffer>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryContextFactory.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryContextFactory.html",
    "title": "Class KafkaQueryContextFactory | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryContextFactory Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryContextFactory : IQueryContextFactory Inheritance object KafkaQueryContextFactory Implements IQueryContextFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default initializer Constructors KafkaQueryContextFactory(QueryContextDependencies, IKafkaClusterCache, IDbContextOptions) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaQueryContextFactory(QueryContextDependencies dependencies, IKafkaClusterCache clusterCache, IDbContextOptions contextOptions) Parameters dependencies QueryContextDependencies clusterCache IKafkaClusterCache contextOptions IDbContextOptions Remarks Default initializer Properties Dependencies Dependencies for this service. protected virtual QueryContextDependencies Dependencies { get; } Property Value QueryContextDependencies Methods Create() Creates a new QueryContext. public virtual QueryContext Create() Returns QueryContext A QueryContext instance."
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryExpression.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryExpression.html",
    "title": "Class KafkaQueryExpression | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryExpression Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryExpression : Expression, IPrintableExpression Inheritance object Expression KafkaQueryExpression Implements IPrintableExpression Inherited Members Expression.Accept(ExpressionVisitor) Expression.Add(Expression, Expression) Expression.Add(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression) Expression.AddAssign(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddAssignChecked(Expression, Expression) Expression.AddAssignChecked(Expression, Expression, MethodInfo) Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddChecked(Expression, Expression) Expression.AddChecked(Expression, Expression, MethodInfo) Expression.And(Expression, Expression) Expression.And(Expression, Expression, MethodInfo) Expression.AndAlso(Expression, Expression) Expression.AndAlso(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression) Expression.AndAssign(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.ArrayAccess(Expression, IEnumerable<Expression>) Expression.ArrayAccess(Expression, params Expression[]) Expression.ArrayIndex(Expression, IEnumerable<Expression>) Expression.ArrayIndex(Expression, Expression) Expression.ArrayIndex(Expression, params Expression[]) Expression.ArrayLength(Expression) Expression.Assign(Expression, Expression) Expression.Bind(MemberInfo, Expression) Expression.Bind(MethodInfo, Expression) Expression.Block(IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Expression, Expression) Expression.Block(Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression, Expression) Expression.Block(params Expression[]) Expression.Block(Type, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Type, params Expression[]) Expression.Break(LabelTarget) Expression.Break(LabelTarget, Expression) Expression.Break(LabelTarget, Expression, Type) Expression.Break(LabelTarget, Type) Expression.Call(Expression, MethodInfo) Expression.Call(Expression, MethodInfo, IEnumerable<Expression>) Expression.Call(Expression, MethodInfo, Expression, Expression) Expression.Call(Expression, MethodInfo, Expression, Expression, Expression) Expression.Call(Expression, MethodInfo, params Expression[]) Expression.Call(Expression, string, Type[], params Expression[]) Expression.Call(MethodInfo, IEnumerable<Expression>) Expression.Call(MethodInfo, Expression) Expression.Call(MethodInfo, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, params Expression[]) Expression.Call(Type, string, Type[], params Expression[]) Expression.Catch(ParameterExpression, Expression) Expression.Catch(ParameterExpression, Expression, Expression) Expression.Catch(Type, Expression) Expression.Catch(Type, Expression, Expression) Expression.ClearDebugInfo(SymbolDocumentInfo) Expression.Coalesce(Expression, Expression) Expression.Coalesce(Expression, Expression, LambdaExpression) Expression.Condition(Expression, Expression, Expression) Expression.Condition(Expression, Expression, Expression, Type) Expression.Constant(object) Expression.Constant(object, Type) Expression.Continue(LabelTarget) Expression.Continue(LabelTarget, Type) Expression.Convert(Expression, Type) Expression.Convert(Expression, Type, MethodInfo) Expression.ConvertChecked(Expression, Type) Expression.ConvertChecked(Expression, Type, MethodInfo) Expression.DebugInfo(SymbolDocumentInfo, int, int, int, int) Expression.Decrement(Expression) Expression.Decrement(Expression, MethodInfo) Expression.Default(Type) Expression.Divide(Expression, Expression) Expression.Divide(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression) Expression.DivideAssign(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>) Expression.Dynamic(CallSiteBinder, Type, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, params Expression[]) Expression.ElementInit(MethodInfo, IEnumerable<Expression>) Expression.ElementInit(MethodInfo, params Expression[]) Expression.Empty() Expression.Equal(Expression, Expression) Expression.Equal(Expression, Expression, bool, MethodInfo) Expression.ExclusiveOr(Expression, Expression) Expression.ExclusiveOr(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Field(Expression, FieldInfo) Expression.Field(Expression, string) Expression.Field(Expression, Type, string) Expression.GetActionType(params Type[]) Expression.GetDelegateType(params Type[]) Expression.GetFuncType(params Type[]) Expression.Goto(LabelTarget) Expression.Goto(LabelTarget, Expression) Expression.Goto(LabelTarget, Expression, Type) Expression.Goto(LabelTarget, Type) Expression.GreaterThan(Expression, Expression) Expression.GreaterThan(Expression, Expression, bool, MethodInfo) Expression.GreaterThanOrEqual(Expression, Expression) Expression.GreaterThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.IfThen(Expression, Expression) Expression.IfThenElse(Expression, Expression, Expression) Expression.Increment(Expression) Expression.Increment(Expression, MethodInfo) Expression.Invoke(Expression, IEnumerable<Expression>) Expression.Invoke(Expression, params Expression[]) Expression.IsFalse(Expression) Expression.IsFalse(Expression, MethodInfo) Expression.IsTrue(Expression) Expression.IsTrue(Expression, MethodInfo) Expression.Label() Expression.Label(LabelTarget) Expression.Label(LabelTarget, Expression) Expression.Label(string) Expression.Label(Type) Expression.Label(Type, string) Expression.Lambda(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, bool, params ParameterExpression[]) Expression.Lambda(Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, params ParameterExpression[]) Expression.Lambda(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, params ParameterExpression[]) Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, params ParameterExpression[]) Expression.Lambda(Type, Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, string, IEnumerable<ParameterExpression>) Expression.LeftShift(Expression, Expression) Expression.LeftShift(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression) Expression.LeftShiftAssign(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.LessThan(Expression, Expression) Expression.LessThan(Expression, Expression, bool, MethodInfo) Expression.LessThanOrEqual(Expression, Expression) Expression.LessThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.ListBind(MemberInfo, IEnumerable<ElementInit>) Expression.ListBind(MemberInfo, params ElementInit[]) Expression.ListBind(MethodInfo, IEnumerable<ElementInit>) Expression.ListBind(MethodInfo, params ElementInit[]) Expression.ListInit(NewExpression, IEnumerable<ElementInit>) Expression.ListInit(NewExpression, IEnumerable<Expression>) Expression.ListInit(NewExpression, params ElementInit[]) Expression.ListInit(NewExpression, params Expression[]) Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>) Expression.ListInit(NewExpression, MethodInfo, params Expression[]) Expression.Loop(Expression) Expression.Loop(Expression, LabelTarget) Expression.Loop(Expression, LabelTarget, LabelTarget) Expression.MakeBinary(ExpressionType, Expression, Expression) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo, LambdaExpression) Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>) Expression.MakeDynamic(Type, CallSiteBinder, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, params Expression[]) Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type) Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>) Expression.MakeMemberAccess(Expression, MemberInfo) Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>) Expression.MakeUnary(ExpressionType, Expression, Type) Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo) Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MemberInfo, params MemberBinding[]) Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MethodInfo, params MemberBinding[]) Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>) Expression.MemberInit(NewExpression, params MemberBinding[]) Expression.Modulo(Expression, Expression) Expression.Modulo(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression) Expression.ModuloAssign(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Multiply(Expression, Expression) Expression.Multiply(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression) Expression.MultiplyAssign(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyAssignChecked(Expression, Expression) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyChecked(Expression, Expression) Expression.MultiplyChecked(Expression, Expression, MethodInfo) Expression.Negate(Expression) Expression.Negate(Expression, MethodInfo) Expression.NegateChecked(Expression) Expression.NegateChecked(Expression, MethodInfo) Expression.New(ConstructorInfo) Expression.New(ConstructorInfo, IEnumerable<Expression>) Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>) Expression.New(ConstructorInfo, IEnumerable<Expression>, params MemberInfo[]) Expression.New(ConstructorInfo, params Expression[]) Expression.New(Type) Expression.NewArrayBounds(Type, IEnumerable<Expression>) Expression.NewArrayBounds(Type, params Expression[]) Expression.NewArrayInit(Type, IEnumerable<Expression>) Expression.NewArrayInit(Type, params Expression[]) Expression.Not(Expression) Expression.Not(Expression, MethodInfo) Expression.NotEqual(Expression, Expression) Expression.NotEqual(Expression, Expression, bool, MethodInfo) Expression.OnesComplement(Expression) Expression.OnesComplement(Expression, MethodInfo) Expression.Or(Expression, Expression) Expression.Or(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression) Expression.OrAssign(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.OrElse(Expression, Expression) Expression.OrElse(Expression, Expression, MethodInfo) Expression.Parameter(Type) Expression.Parameter(Type, string) Expression.PostDecrementAssign(Expression) Expression.PostDecrementAssign(Expression, MethodInfo) Expression.PostIncrementAssign(Expression) Expression.PostIncrementAssign(Expression, MethodInfo) Expression.Power(Expression, Expression) Expression.Power(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression) Expression.PowerAssign(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.PreDecrementAssign(Expression) Expression.PreDecrementAssign(Expression, MethodInfo) Expression.PreIncrementAssign(Expression) Expression.PreIncrementAssign(Expression, MethodInfo) Expression.Property(Expression, MethodInfo) Expression.Property(Expression, PropertyInfo) Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>) Expression.Property(Expression, PropertyInfo, params Expression[]) Expression.Property(Expression, string) Expression.Property(Expression, string, params Expression[]) Expression.Property(Expression, Type, string) Expression.PropertyOrField(Expression, string) Expression.Quote(Expression) Expression.Reduce() Expression.ReduceAndCheck() Expression.ReduceExtensions() Expression.ReferenceEqual(Expression, Expression) Expression.ReferenceNotEqual(Expression, Expression) Expression.Rethrow() Expression.Rethrow(Type) Expression.Return(LabelTarget) Expression.Return(LabelTarget, Expression) Expression.Return(LabelTarget, Expression, Type) Expression.Return(LabelTarget, Type) Expression.RightShift(Expression, Expression) Expression.RightShift(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression) Expression.RightShiftAssign(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.RuntimeVariables(IEnumerable<ParameterExpression>) Expression.RuntimeVariables(params ParameterExpression[]) Expression.Subtract(Expression, Expression) Expression.Subtract(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression) Expression.SubtractAssign(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractAssignChecked(Expression, Expression) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractChecked(Expression, Expression) Expression.SubtractChecked(Expression, Expression, MethodInfo) Expression.Switch(Expression, Expression, params SwitchCase[]) Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Expression, Expression, MethodInfo, params SwitchCase[]) Expression.Switch(Expression, params SwitchCase[]) Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Type, Expression, Expression, MethodInfo, params SwitchCase[]) Expression.SwitchCase(Expression, IEnumerable<Expression>) Expression.SwitchCase(Expression, params Expression[]) Expression.SymbolDocument(string) Expression.SymbolDocument(string, Guid) Expression.SymbolDocument(string, Guid, Guid) Expression.SymbolDocument(string, Guid, Guid, Guid) Expression.Throw(Expression) Expression.Throw(Expression, Type) Expression.ToString() Expression.TryCatch(Expression, params CatchBlock[]) Expression.TryCatchFinally(Expression, Expression, params CatchBlock[]) Expression.TryFault(Expression, Expression) Expression.TryFinally(Expression, Expression) Expression.TryGetActionType(Type[], out Type) Expression.TryGetFuncType(Type[], out Type) Expression.TypeAs(Expression, Type) Expression.TypeEqual(Expression, Type) Expression.TypeIs(Expression, Type) Expression.UnaryPlus(Expression) Expression.UnaryPlus(Expression, MethodInfo) Expression.Unbox(Expression, Type) Expression.Variable(Type) Expression.Variable(Type, string) Expression.VisitChildren(ExpressionVisitor) Expression.CanReduce object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors KafkaQueryExpression(IEntityType) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaQueryExpression(IEntityType entityType) Parameters entityType IEntityType Properties CurrentParameter This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual ParameterExpression CurrentParameter { get; } Property Value ParameterExpression NodeType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override sealed ExpressionType NodeType { get; } Property Value ExpressionType ServerQueryExpression This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression ServerQueryExpression { get; } Property Value Expression Type This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override Type Type { get; } Property Value Type Methods AddInnerJoin(KafkaQueryExpression, LambdaExpression, LambdaExpression, Expression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression AddInnerJoin(KafkaQueryExpression innerQueryExpression, LambdaExpression outerKeySelector, LambdaExpression innerKeySelector, Expression outerShaperExpression, Expression innerShaperExpression) Parameters innerQueryExpression KafkaQueryExpression outerKeySelector LambdaExpression innerKeySelector LambdaExpression outerShaperExpression Expression innerShaperExpression Expression Returns Expression AddLeftJoin(KafkaQueryExpression, LambdaExpression, LambdaExpression, Expression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression AddLeftJoin(KafkaQueryExpression innerQueryExpression, LambdaExpression outerKeySelector, LambdaExpression innerKeySelector, Expression outerShaperExpression, Expression innerShaperExpression) Parameters innerQueryExpression KafkaQueryExpression outerKeySelector LambdaExpression innerKeySelector LambdaExpression outerShaperExpression Expression innerShaperExpression Expression Returns Expression AddNavigationToWeakEntityType(EntityProjectionExpression, INavigation, KafkaQueryExpression, LambdaExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual StructuralTypeShaperExpression AddNavigationToWeakEntityType(EntityProjectionExpression entityProjectionExpression, INavigation navigation, KafkaQueryExpression innerQueryExpression, LambdaExpression outerKeySelector, LambdaExpression innerKeySelector) Parameters entityProjectionExpression EntityProjectionExpression navigation INavigation innerQueryExpression KafkaQueryExpression outerKeySelector LambdaExpression innerKeySelector LambdaExpression Returns StructuralTypeShaperExpression AddSelectMany(KafkaQueryExpression, Expression, Expression, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression AddSelectMany(KafkaQueryExpression innerQueryExpression, Expression outerShaperExpression, Expression innerShaperExpression, bool innerNullable) Parameters innerQueryExpression KafkaQueryExpression outerShaperExpression Expression innerShaperExpression Expression innerNullable bool Returns Expression ApplyDefaultIfEmpty() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ApplyDefaultIfEmpty() ApplyDistinct() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ApplyDistinct() ApplyGrouping(Expression, Expression, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual GroupByShaperExpression ApplyGrouping(Expression groupingKey, Expression shaperExpression, bool defaultElementSelector) Parameters groupingKey Expression shaperExpression Expression defaultElementSelector bool Returns GroupByShaperExpression ApplyProjection() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ApplyProjection() ApplySetOperation(MethodInfo, KafkaQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ApplySetOperation(MethodInfo setOperationMethodInfo, KafkaQueryExpression source2) Parameters setOperationMethodInfo MethodInfo source2 KafkaQueryExpression Clone(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual ShapedQueryExpression Clone(Expression shaperExpression) Parameters shaperExpression Expression Returns ShapedQueryExpression ConvertToSingleResult(MethodInfo) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ConvertToSingleResult(MethodInfo methodInfo) Parameters methodInfo MethodInfo GetProjection(ProjectionBindingExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression GetProjection(ProjectionBindingExpression projectionBindingExpression) Parameters projectionBindingExpression ProjectionBindingExpression Returns Expression GetSingleScalarProjection() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression GetSingleScalarProjection() Returns Expression ReplaceProjection(IReadOnlyDictionary<ProjectionMember, Expression>) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ReplaceProjection(IReadOnlyDictionary<ProjectionMember, Expression> projectionMapping) Parameters projectionMapping IReadOnlyDictionary<ProjectionMember, Expression> ReplaceProjection(IReadOnlyList<Expression>) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void ReplaceProjection(IReadOnlyList<Expression> clientProjections) Parameters clientProjections IReadOnlyList<Expression> UpdateServerQueryExpression(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual void UpdateServerQueryExpression(Expression serverQueryExpression) Parameters serverQueryExpression Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryTranslationPreprocessor.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryTranslationPreprocessor.html",
    "title": "Class KafkaQueryTranslationPreprocessor | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryTranslationPreprocessor Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryTranslationPreprocessor : QueryTranslationPreprocessor Inheritance object QueryTranslationPreprocessor KafkaQueryTranslationPreprocessor Inherited Members QueryTranslationPreprocessor.NormalizeQueryableMethod(Expression) QueryTranslationPreprocessor.ProcessQueryRoots(Expression) QueryTranslationPreprocessor.Dependencies QueryTranslationPreprocessor.QueryCompilationContext object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaQueryTranslationPreprocessor(QueryTranslationPreprocessorDependencies, QueryCompilationContext) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaQueryTranslationPreprocessor(QueryTranslationPreprocessorDependencies dependencies, QueryCompilationContext queryCompilationContext) Parameters dependencies QueryTranslationPreprocessorDependencies queryCompilationContext QueryCompilationContext Methods Process(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override Expression Process(Expression query) Parameters query Expression Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryTranslationPreprocessorFactory.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryTranslationPreprocessorFactory.html",
    "title": "Class KafkaQueryTranslationPreprocessorFactory | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryTranslationPreprocessorFactory Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryTranslationPreprocessorFactory : IQueryTranslationPreprocessorFactory Inheritance object KafkaQueryTranslationPreprocessorFactory Implements IQueryTranslationPreprocessorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaQueryTranslationPreprocessorFactory(QueryTranslationPreprocessorDependencies) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaQueryTranslationPreprocessorFactory(QueryTranslationPreprocessorDependencies dependencies) Parameters dependencies QueryTranslationPreprocessorDependencies Properties Dependencies Dependencies for this service. protected virtual QueryTranslationPreprocessorDependencies Dependencies { get; } Property Value QueryTranslationPreprocessorDependencies Methods Create(QueryCompilationContext) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual QueryTranslationPreprocessor Create(QueryCompilationContext queryCompilationContext) Parameters queryCompilationContext QueryCompilationContext Returns QueryTranslationPreprocessor"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryableMethodTranslatingExpressionVisitor.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryableMethodTranslatingExpressionVisitor.html",
    "title": "Class KafkaQueryableMethodTranslatingExpressionVisitor | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryableMethodTranslatingExpressionVisitor Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryableMethodTranslatingExpressionVisitor : QueryableMethodTranslatingExpressionVisitor Inheritance object ExpressionVisitor QueryableMethodTranslatingExpressionVisitor KafkaQueryableMethodTranslatingExpressionVisitor Inherited Members QueryableMethodTranslatingExpressionVisitor.Translate(Expression) QueryableMethodTranslatingExpressionVisitor.AddTranslationErrorDetails(string) QueryableMethodTranslatingExpressionVisitor.MarkShaperNullable(Expression) QueryableMethodTranslatingExpressionVisitor.TranslateSubquery(Expression) QueryableMethodTranslatingExpressionVisitor.Dependencies QueryableMethodTranslatingExpressionVisitor.TranslationErrorDetails QueryableMethodTranslatingExpressionVisitor.QueryCompilationContext ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.Visit(Expression) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.VisitBinary(BinaryExpression) ExpressionVisitor.VisitBlock(BlockExpression) ExpressionVisitor.VisitCatchBlock(CatchBlock) ExpressionVisitor.VisitConditional(ConditionalExpression) ExpressionVisitor.VisitConstant(ConstantExpression) ExpressionVisitor.VisitDebugInfo(DebugInfoExpression) ExpressionVisitor.VisitDefault(DefaultExpression) ExpressionVisitor.VisitDynamic(DynamicExpression) ExpressionVisitor.VisitElementInit(ElementInit) ExpressionVisitor.VisitGoto(GotoExpression) ExpressionVisitor.VisitIndex(IndexExpression) ExpressionVisitor.VisitInvocation(InvocationExpression) ExpressionVisitor.VisitLabel(LabelExpression) ExpressionVisitor.VisitLabelTarget(LabelTarget) ExpressionVisitor.VisitLambda<T>(Expression<T>) ExpressionVisitor.VisitListInit(ListInitExpression) ExpressionVisitor.VisitLoop(LoopExpression) ExpressionVisitor.VisitMember(MemberExpression) ExpressionVisitor.VisitMemberAssignment(MemberAssignment) ExpressionVisitor.VisitMemberBinding(MemberBinding) ExpressionVisitor.VisitMemberInit(MemberInitExpression) ExpressionVisitor.VisitMemberListBinding(MemberListBinding) ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding) ExpressionVisitor.VisitNew(NewExpression) ExpressionVisitor.VisitNewArray(NewArrayExpression) ExpressionVisitor.VisitParameter(ParameterExpression) ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression) ExpressionVisitor.VisitSwitch(SwitchExpression) ExpressionVisitor.VisitSwitchCase(SwitchCase) ExpressionVisitor.VisitTry(TryExpression) ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression) ExpressionVisitor.VisitUnary(UnaryExpression) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaQueryableMethodTranslatingExpressionVisitor(KafkaQueryableMethodTranslatingExpressionVisitor) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected KafkaQueryableMethodTranslatingExpressionVisitor(KafkaQueryableMethodTranslatingExpressionVisitor parentVisitor) Parameters parentVisitor KafkaQueryableMethodTranslatingExpressionVisitor KafkaQueryableMethodTranslatingExpressionVisitor(QueryableMethodTranslatingExpressionVisitorDependencies, QueryCompilationContext) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaQueryableMethodTranslatingExpressionVisitor(QueryableMethodTranslatingExpressionVisitorDependencies dependencies, QueryCompilationContext queryCompilationContext) Parameters dependencies QueryableMethodTranslatingExpressionVisitorDependencies queryCompilationContext QueryCompilationContext Methods CreateShapedQueryExpression(IEntityType) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression CreateShapedQueryExpression(IEntityType entityType) Parameters entityType IEntityType Returns ShapedQueryExpression CreateSubqueryVisitor() This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override QueryableMethodTranslatingExpressionVisitor CreateSubqueryVisitor() Returns QueryableMethodTranslatingExpressionVisitor TranslateAll(ShapedQueryExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateAll(ShapedQueryExpression source, LambdaExpression predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression TranslateAny(ShapedQueryExpression, LambdaExpression?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateAny(ShapedQueryExpression source, LambdaExpression? predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression TranslateAverage(ShapedQueryExpression, LambdaExpression?, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateAverage(ShapedQueryExpression source, LambdaExpression? selector, Type resultType) Parameters source ShapedQueryExpression selector LambdaExpression resultType Type Returns ShapedQueryExpression TranslateCast(ShapedQueryExpression, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateCast(ShapedQueryExpression source, Type resultType) Parameters source ShapedQueryExpression resultType Type Returns ShapedQueryExpression TranslateConcat(ShapedQueryExpression, ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateConcat(ShapedQueryExpression source1, ShapedQueryExpression source2) Parameters source1 ShapedQueryExpression source2 ShapedQueryExpression Returns ShapedQueryExpression TranslateContains(ShapedQueryExpression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateContains(ShapedQueryExpression source, Expression item) Parameters source ShapedQueryExpression item Expression Returns ShapedQueryExpression TranslateCount(ShapedQueryExpression, LambdaExpression?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateCount(ShapedQueryExpression source, LambdaExpression? predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression TranslateDefaultIfEmpty(ShapedQueryExpression, Expression?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateDefaultIfEmpty(ShapedQueryExpression source, Expression? defaultValue) Parameters source ShapedQueryExpression defaultValue Expression Returns ShapedQueryExpression TranslateDistinct(ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateDistinct(ShapedQueryExpression source) Parameters source ShapedQueryExpression Returns ShapedQueryExpression TranslateElementAtOrDefault(ShapedQueryExpression, Expression, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateElementAtOrDefault(ShapedQueryExpression source, Expression index, bool returnDefault) Parameters source ShapedQueryExpression index Expression returnDefault bool Returns ShapedQueryExpression TranslateExcept(ShapedQueryExpression, ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateExcept(ShapedQueryExpression source1, ShapedQueryExpression source2) Parameters source1 ShapedQueryExpression source2 ShapedQueryExpression Returns ShapedQueryExpression TranslateFirstOrDefault(ShapedQueryExpression, LambdaExpression?, Type, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateFirstOrDefault(ShapedQueryExpression source, LambdaExpression? predicate, Type returnType, bool returnDefault) Parameters source ShapedQueryExpression predicate LambdaExpression returnType Type returnDefault bool Returns ShapedQueryExpression TranslateGroupBy(ShapedQueryExpression, LambdaExpression, LambdaExpression?, LambdaExpression?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateGroupBy(ShapedQueryExpression source, LambdaExpression keySelector, LambdaExpression? elementSelector, LambdaExpression? resultSelector) Parameters source ShapedQueryExpression keySelector LambdaExpression elementSelector LambdaExpression resultSelector LambdaExpression Returns ShapedQueryExpression TranslateGroupJoin(ShapedQueryExpression, ShapedQueryExpression, LambdaExpression, LambdaExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateGroupJoin(ShapedQueryExpression outer, ShapedQueryExpression inner, LambdaExpression outerKeySelector, LambdaExpression innerKeySelector, LambdaExpression resultSelector) Parameters outer ShapedQueryExpression inner ShapedQueryExpression outerKeySelector LambdaExpression innerKeySelector LambdaExpression resultSelector LambdaExpression Returns ShapedQueryExpression TranslateIntersect(ShapedQueryExpression, ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateIntersect(ShapedQueryExpression source1, ShapedQueryExpression source2) Parameters source1 ShapedQueryExpression source2 ShapedQueryExpression Returns ShapedQueryExpression TranslateJoin(ShapedQueryExpression, ShapedQueryExpression, LambdaExpression, LambdaExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateJoin(ShapedQueryExpression outer, ShapedQueryExpression inner, LambdaExpression outerKeySelector, LambdaExpression innerKeySelector, LambdaExpression resultSelector) Parameters outer ShapedQueryExpression inner ShapedQueryExpression outerKeySelector LambdaExpression innerKeySelector LambdaExpression resultSelector LambdaExpression Returns ShapedQueryExpression TranslateLastOrDefault(ShapedQueryExpression, LambdaExpression?, Type, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateLastOrDefault(ShapedQueryExpression source, LambdaExpression? predicate, Type returnType, bool returnDefault) Parameters source ShapedQueryExpression predicate LambdaExpression returnType Type returnDefault bool Returns ShapedQueryExpression TranslateLeftJoin(ShapedQueryExpression, ShapedQueryExpression, LambdaExpression, LambdaExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateLeftJoin(ShapedQueryExpression outer, ShapedQueryExpression inner, LambdaExpression outerKeySelector, LambdaExpression innerKeySelector, LambdaExpression resultSelector) Parameters outer ShapedQueryExpression inner ShapedQueryExpression outerKeySelector LambdaExpression innerKeySelector LambdaExpression resultSelector LambdaExpression Returns ShapedQueryExpression TranslateLongCount(ShapedQueryExpression, LambdaExpression?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateLongCount(ShapedQueryExpression source, LambdaExpression? predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression TranslateMax(ShapedQueryExpression, LambdaExpression?, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateMax(ShapedQueryExpression source, LambdaExpression? selector, Type resultType) Parameters source ShapedQueryExpression selector LambdaExpression resultType Type Returns ShapedQueryExpression TranslateMin(ShapedQueryExpression, LambdaExpression?, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateMin(ShapedQueryExpression source, LambdaExpression? selector, Type resultType) Parameters source ShapedQueryExpression selector LambdaExpression resultType Type Returns ShapedQueryExpression TranslateOfType(ShapedQueryExpression, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateOfType(ShapedQueryExpression source, Type resultType) Parameters source ShapedQueryExpression resultType Type Returns ShapedQueryExpression TranslateOrderBy(ShapedQueryExpression, LambdaExpression, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateOrderBy(ShapedQueryExpression source, LambdaExpression keySelector, bool ascending) Parameters source ShapedQueryExpression keySelector LambdaExpression ascending bool Returns ShapedQueryExpression TranslateReverse(ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateReverse(ShapedQueryExpression source) Parameters source ShapedQueryExpression Returns ShapedQueryExpression TranslateSelect(ShapedQueryExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression TranslateSelect(ShapedQueryExpression source, LambdaExpression selector) Parameters source ShapedQueryExpression selector LambdaExpression Returns ShapedQueryExpression TranslateSelectMany(ShapedQueryExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateSelectMany(ShapedQueryExpression source, LambdaExpression selector) Parameters source ShapedQueryExpression selector LambdaExpression Returns ShapedQueryExpression TranslateSelectMany(ShapedQueryExpression, LambdaExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateSelectMany(ShapedQueryExpression source, LambdaExpression collectionSelector, LambdaExpression resultSelector) Parameters source ShapedQueryExpression collectionSelector LambdaExpression resultSelector LambdaExpression Returns ShapedQueryExpression TranslateSingleOrDefault(ShapedQueryExpression, LambdaExpression?, Type, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateSingleOrDefault(ShapedQueryExpression source, LambdaExpression? predicate, Type returnType, bool returnDefault) Parameters source ShapedQueryExpression predicate LambdaExpression returnType Type returnDefault bool Returns ShapedQueryExpression TranslateSkip(ShapedQueryExpression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateSkip(ShapedQueryExpression source, Expression count) Parameters source ShapedQueryExpression count Expression Returns ShapedQueryExpression TranslateSkipWhile(ShapedQueryExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateSkipWhile(ShapedQueryExpression source, LambdaExpression predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression TranslateSum(ShapedQueryExpression, LambdaExpression?, Type) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateSum(ShapedQueryExpression source, LambdaExpression? selector, Type resultType) Parameters source ShapedQueryExpression selector LambdaExpression resultType Type Returns ShapedQueryExpression TranslateTake(ShapedQueryExpression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateTake(ShapedQueryExpression source, Expression count) Parameters source ShapedQueryExpression count Expression Returns ShapedQueryExpression TranslateTakeWhile(ShapedQueryExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateTakeWhile(ShapedQueryExpression source, LambdaExpression predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression TranslateThenBy(ShapedQueryExpression, LambdaExpression, bool) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateThenBy(ShapedQueryExpression source, LambdaExpression keySelector, bool ascending) Parameters source ShapedQueryExpression keySelector LambdaExpression ascending bool Returns ShapedQueryExpression TranslateUnion(ShapedQueryExpression, ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2) Parameters source1 ShapedQueryExpression source2 ShapedQueryExpression Returns ShapedQueryExpression TranslateWhere(ShapedQueryExpression, LambdaExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override ShapedQueryExpression? TranslateWhere(ShapedQueryExpression source, LambdaExpression predicate) Parameters source ShapedQueryExpression predicate LambdaExpression Returns ShapedQueryExpression VisitExtension(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitExtension(Expression extensionExpression) Parameters extensionExpression Expression Returns Expression VisitMethodCall(MethodCallExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitMethodCall(MethodCallExpression methodCallExpression) Parameters methodCallExpression MethodCallExpression Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryableMethodTranslatingExpressionVisitorFactory.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaQueryableMethodTranslatingExpressionVisitorFactory.html",
    "title": "Class KafkaQueryableMethodTranslatingExpressionVisitorFactory | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaQueryableMethodTranslatingExpressionVisitorFactory Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaQueryableMethodTranslatingExpressionVisitorFactory : IQueryableMethodTranslatingExpressionVisitorFactory Inheritance object KafkaQueryableMethodTranslatingExpressionVisitorFactory Implements IQueryableMethodTranslatingExpressionVisitorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaQueryableMethodTranslatingExpressionVisitorFactory(QueryableMethodTranslatingExpressionVisitorDependencies) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaQueryableMethodTranslatingExpressionVisitorFactory(QueryableMethodTranslatingExpressionVisitorDependencies dependencies) Parameters dependencies QueryableMethodTranslatingExpressionVisitorDependencies Properties Dependencies Dependencies for this service. protected virtual QueryableMethodTranslatingExpressionVisitorDependencies Dependencies { get; } Property Value QueryableMethodTranslatingExpressionVisitorDependencies Methods Create(QueryCompilationContext) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual QueryableMethodTranslatingExpressionVisitor Create(QueryCompilationContext queryCompilationContext) Parameters queryCompilationContext QueryCompilationContext Returns QueryableMethodTranslatingExpressionVisitor"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaShapedQueryCompilingExpressionVisitor.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaShapedQueryCompilingExpressionVisitor.html",
    "title": "Class KafkaShapedQueryCompilingExpressionVisitor | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaShapedQueryCompilingExpressionVisitor Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaShapedQueryCompilingExpressionVisitor : ShapedQueryCompilingExpressionVisitor Inheritance object ExpressionVisitor ShapedQueryCompilingExpressionVisitor KafkaShapedQueryCompilingExpressionVisitor Inherited Members ShapedQueryCompilingExpressionVisitor.InjectEntityMaterializers(Expression) ShapedQueryCompilingExpressionVisitor.VerifyNoClientConstant(Expression) ShapedQueryCompilingExpressionVisitor.Dependencies ShapedQueryCompilingExpressionVisitor.QueryCompilationContext ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.Visit(Expression) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.VisitBinary(BinaryExpression) ExpressionVisitor.VisitBlock(BlockExpression) ExpressionVisitor.VisitCatchBlock(CatchBlock) ExpressionVisitor.VisitConditional(ConditionalExpression) ExpressionVisitor.VisitConstant(ConstantExpression) ExpressionVisitor.VisitDebugInfo(DebugInfoExpression) ExpressionVisitor.VisitDefault(DefaultExpression) ExpressionVisitor.VisitDynamic(DynamicExpression) ExpressionVisitor.VisitElementInit(ElementInit) ExpressionVisitor.VisitGoto(GotoExpression) ExpressionVisitor.VisitIndex(IndexExpression) ExpressionVisitor.VisitInvocation(InvocationExpression) ExpressionVisitor.VisitLabel(LabelExpression) ExpressionVisitor.VisitLabelTarget(LabelTarget) ExpressionVisitor.VisitLambda<T>(Expression<T>) ExpressionVisitor.VisitListInit(ListInitExpression) ExpressionVisitor.VisitLoop(LoopExpression) ExpressionVisitor.VisitMember(MemberExpression) ExpressionVisitor.VisitMemberAssignment(MemberAssignment) ExpressionVisitor.VisitMemberBinding(MemberBinding) ExpressionVisitor.VisitMemberInit(MemberInitExpression) ExpressionVisitor.VisitMemberListBinding(MemberListBinding) ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding) ExpressionVisitor.VisitMethodCall(MethodCallExpression) ExpressionVisitor.VisitNew(NewExpression) ExpressionVisitor.VisitNewArray(NewArrayExpression) ExpressionVisitor.VisitParameter(ParameterExpression) ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression) ExpressionVisitor.VisitSwitch(SwitchExpression) ExpressionVisitor.VisitSwitchCase(SwitchCase) ExpressionVisitor.VisitTry(TryExpression) ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression) ExpressionVisitor.VisitUnary(UnaryExpression) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaShapedQueryCompilingExpressionVisitor(ShapedQueryCompilingExpressionVisitorDependencies, QueryCompilationContext) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaShapedQueryCompilingExpressionVisitor(ShapedQueryCompilingExpressionVisitorDependencies dependencies, QueryCompilationContext queryCompilationContext) Parameters dependencies ShapedQueryCompilingExpressionVisitorDependencies queryCompilationContext QueryCompilationContext Methods VisitExtension(Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitExtension(Expression extensionExpression) Parameters extensionExpression Expression Returns Expression VisitShapedQuery(ShapedQueryExpression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitShapedQuery(ShapedQueryExpression shapedQueryExpression) Parameters shapedQueryExpression ShapedQueryExpression Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaShapedQueryCompilingExpressionVisitorFactory.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaShapedQueryCompilingExpressionVisitorFactory.html",
    "title": "Class KafkaShapedQueryCompilingExpressionVisitorFactory | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaShapedQueryCompilingExpressionVisitorFactory Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaShapedQueryCompilingExpressionVisitorFactory : IShapedQueryCompilingExpressionVisitorFactory Inheritance object KafkaShapedQueryCompilingExpressionVisitorFactory Implements IShapedQueryCompilingExpressionVisitorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaShapedQueryCompilingExpressionVisitorFactory(ShapedQueryCompilingExpressionVisitorDependencies) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaShapedQueryCompilingExpressionVisitorFactory(ShapedQueryCompilingExpressionVisitorDependencies dependencies) Parameters dependencies ShapedQueryCompilingExpressionVisitorDependencies Properties Dependencies Dependencies for this service. protected virtual ShapedQueryCompilingExpressionVisitorDependencies Dependencies { get; } Property Value ShapedQueryCompilingExpressionVisitorDependencies Methods Create(QueryCompilationContext) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual ShapedQueryCompilingExpressionVisitor Create(QueryCompilationContext queryCompilationContext) Parameters queryCompilationContext QueryCompilationContext Returns ShapedQueryCompilingExpressionVisitor"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaTableExpression.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.KafkaTableExpression.html",
    "title": "Class KafkaTableExpression | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTableExpression Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTableExpression : Expression, IPrintableExpression Inheritance object Expression KafkaTableExpression Implements IPrintableExpression Inherited Members Expression.Accept(ExpressionVisitor) Expression.Add(Expression, Expression) Expression.Add(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression) Expression.AddAssign(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddAssignChecked(Expression, Expression) Expression.AddAssignChecked(Expression, Expression, MethodInfo) Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddChecked(Expression, Expression) Expression.AddChecked(Expression, Expression, MethodInfo) Expression.And(Expression, Expression) Expression.And(Expression, Expression, MethodInfo) Expression.AndAlso(Expression, Expression) Expression.AndAlso(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression) Expression.AndAssign(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.ArrayAccess(Expression, IEnumerable<Expression>) Expression.ArrayAccess(Expression, params Expression[]) Expression.ArrayIndex(Expression, IEnumerable<Expression>) Expression.ArrayIndex(Expression, Expression) Expression.ArrayIndex(Expression, params Expression[]) Expression.ArrayLength(Expression) Expression.Assign(Expression, Expression) Expression.Bind(MemberInfo, Expression) Expression.Bind(MethodInfo, Expression) Expression.Block(IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Expression, Expression) Expression.Block(Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression, Expression) Expression.Block(params Expression[]) Expression.Block(Type, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Type, params Expression[]) Expression.Break(LabelTarget) Expression.Break(LabelTarget, Expression) Expression.Break(LabelTarget, Expression, Type) Expression.Break(LabelTarget, Type) Expression.Call(Expression, MethodInfo) Expression.Call(Expression, MethodInfo, IEnumerable<Expression>) Expression.Call(Expression, MethodInfo, Expression, Expression) Expression.Call(Expression, MethodInfo, Expression, Expression, Expression) Expression.Call(Expression, MethodInfo, params Expression[]) Expression.Call(Expression, string, Type[], params Expression[]) Expression.Call(MethodInfo, IEnumerable<Expression>) Expression.Call(MethodInfo, Expression) Expression.Call(MethodInfo, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, params Expression[]) Expression.Call(Type, string, Type[], params Expression[]) Expression.Catch(ParameterExpression, Expression) Expression.Catch(ParameterExpression, Expression, Expression) Expression.Catch(Type, Expression) Expression.Catch(Type, Expression, Expression) Expression.ClearDebugInfo(SymbolDocumentInfo) Expression.Coalesce(Expression, Expression) Expression.Coalesce(Expression, Expression, LambdaExpression) Expression.Condition(Expression, Expression, Expression) Expression.Condition(Expression, Expression, Expression, Type) Expression.Constant(object) Expression.Constant(object, Type) Expression.Continue(LabelTarget) Expression.Continue(LabelTarget, Type) Expression.Convert(Expression, Type) Expression.Convert(Expression, Type, MethodInfo) Expression.ConvertChecked(Expression, Type) Expression.ConvertChecked(Expression, Type, MethodInfo) Expression.DebugInfo(SymbolDocumentInfo, int, int, int, int) Expression.Decrement(Expression) Expression.Decrement(Expression, MethodInfo) Expression.Default(Type) Expression.Divide(Expression, Expression) Expression.Divide(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression) Expression.DivideAssign(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>) Expression.Dynamic(CallSiteBinder, Type, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, params Expression[]) Expression.ElementInit(MethodInfo, IEnumerable<Expression>) Expression.ElementInit(MethodInfo, params Expression[]) Expression.Empty() Expression.Equal(Expression, Expression) Expression.Equal(Expression, Expression, bool, MethodInfo) Expression.ExclusiveOr(Expression, Expression) Expression.ExclusiveOr(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Field(Expression, FieldInfo) Expression.Field(Expression, string) Expression.Field(Expression, Type, string) Expression.GetActionType(params Type[]) Expression.GetDelegateType(params Type[]) Expression.GetFuncType(params Type[]) Expression.Goto(LabelTarget) Expression.Goto(LabelTarget, Expression) Expression.Goto(LabelTarget, Expression, Type) Expression.Goto(LabelTarget, Type) Expression.GreaterThan(Expression, Expression) Expression.GreaterThan(Expression, Expression, bool, MethodInfo) Expression.GreaterThanOrEqual(Expression, Expression) Expression.GreaterThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.IfThen(Expression, Expression) Expression.IfThenElse(Expression, Expression, Expression) Expression.Increment(Expression) Expression.Increment(Expression, MethodInfo) Expression.Invoke(Expression, IEnumerable<Expression>) Expression.Invoke(Expression, params Expression[]) Expression.IsFalse(Expression) Expression.IsFalse(Expression, MethodInfo) Expression.IsTrue(Expression) Expression.IsTrue(Expression, MethodInfo) Expression.Label() Expression.Label(LabelTarget) Expression.Label(LabelTarget, Expression) Expression.Label(string) Expression.Label(Type) Expression.Label(Type, string) Expression.Lambda(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, bool, params ParameterExpression[]) Expression.Lambda(Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, params ParameterExpression[]) Expression.Lambda(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, params ParameterExpression[]) Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, params ParameterExpression[]) Expression.Lambda(Type, Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, string, IEnumerable<ParameterExpression>) Expression.LeftShift(Expression, Expression) Expression.LeftShift(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression) Expression.LeftShiftAssign(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.LessThan(Expression, Expression) Expression.LessThan(Expression, Expression, bool, MethodInfo) Expression.LessThanOrEqual(Expression, Expression) Expression.LessThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.ListBind(MemberInfo, IEnumerable<ElementInit>) Expression.ListBind(MemberInfo, params ElementInit[]) Expression.ListBind(MethodInfo, IEnumerable<ElementInit>) Expression.ListBind(MethodInfo, params ElementInit[]) Expression.ListInit(NewExpression, IEnumerable<ElementInit>) Expression.ListInit(NewExpression, IEnumerable<Expression>) Expression.ListInit(NewExpression, params ElementInit[]) Expression.ListInit(NewExpression, params Expression[]) Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>) Expression.ListInit(NewExpression, MethodInfo, params Expression[]) Expression.Loop(Expression) Expression.Loop(Expression, LabelTarget) Expression.Loop(Expression, LabelTarget, LabelTarget) Expression.MakeBinary(ExpressionType, Expression, Expression) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo, LambdaExpression) Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>) Expression.MakeDynamic(Type, CallSiteBinder, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, params Expression[]) Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type) Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>) Expression.MakeMemberAccess(Expression, MemberInfo) Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>) Expression.MakeUnary(ExpressionType, Expression, Type) Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo) Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MemberInfo, params MemberBinding[]) Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MethodInfo, params MemberBinding[]) Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>) Expression.MemberInit(NewExpression, params MemberBinding[]) Expression.Modulo(Expression, Expression) Expression.Modulo(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression) Expression.ModuloAssign(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Multiply(Expression, Expression) Expression.Multiply(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression) Expression.MultiplyAssign(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyAssignChecked(Expression, Expression) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyChecked(Expression, Expression) Expression.MultiplyChecked(Expression, Expression, MethodInfo) Expression.Negate(Expression) Expression.Negate(Expression, MethodInfo) Expression.NegateChecked(Expression) Expression.NegateChecked(Expression, MethodInfo) Expression.New(ConstructorInfo) Expression.New(ConstructorInfo, IEnumerable<Expression>) Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>) Expression.New(ConstructorInfo, IEnumerable<Expression>, params MemberInfo[]) Expression.New(ConstructorInfo, params Expression[]) Expression.New(Type) Expression.NewArrayBounds(Type, IEnumerable<Expression>) Expression.NewArrayBounds(Type, params Expression[]) Expression.NewArrayInit(Type, IEnumerable<Expression>) Expression.NewArrayInit(Type, params Expression[]) Expression.Not(Expression) Expression.Not(Expression, MethodInfo) Expression.NotEqual(Expression, Expression) Expression.NotEqual(Expression, Expression, bool, MethodInfo) Expression.OnesComplement(Expression) Expression.OnesComplement(Expression, MethodInfo) Expression.Or(Expression, Expression) Expression.Or(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression) Expression.OrAssign(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.OrElse(Expression, Expression) Expression.OrElse(Expression, Expression, MethodInfo) Expression.Parameter(Type) Expression.Parameter(Type, string) Expression.PostDecrementAssign(Expression) Expression.PostDecrementAssign(Expression, MethodInfo) Expression.PostIncrementAssign(Expression) Expression.PostIncrementAssign(Expression, MethodInfo) Expression.Power(Expression, Expression) Expression.Power(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression) Expression.PowerAssign(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.PreDecrementAssign(Expression) Expression.PreDecrementAssign(Expression, MethodInfo) Expression.PreIncrementAssign(Expression) Expression.PreIncrementAssign(Expression, MethodInfo) Expression.Property(Expression, MethodInfo) Expression.Property(Expression, PropertyInfo) Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>) Expression.Property(Expression, PropertyInfo, params Expression[]) Expression.Property(Expression, string) Expression.Property(Expression, string, params Expression[]) Expression.Property(Expression, Type, string) Expression.PropertyOrField(Expression, string) Expression.Quote(Expression) Expression.Reduce() Expression.ReduceAndCheck() Expression.ReduceExtensions() Expression.ReferenceEqual(Expression, Expression) Expression.ReferenceNotEqual(Expression, Expression) Expression.Rethrow() Expression.Rethrow(Type) Expression.Return(LabelTarget) Expression.Return(LabelTarget, Expression) Expression.Return(LabelTarget, Expression, Type) Expression.Return(LabelTarget, Type) Expression.RightShift(Expression, Expression) Expression.RightShift(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression) Expression.RightShiftAssign(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.RuntimeVariables(IEnumerable<ParameterExpression>) Expression.RuntimeVariables(params ParameterExpression[]) Expression.Subtract(Expression, Expression) Expression.Subtract(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression) Expression.SubtractAssign(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractAssignChecked(Expression, Expression) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractChecked(Expression, Expression) Expression.SubtractChecked(Expression, Expression, MethodInfo) Expression.Switch(Expression, Expression, params SwitchCase[]) Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Expression, Expression, MethodInfo, params SwitchCase[]) Expression.Switch(Expression, params SwitchCase[]) Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Type, Expression, Expression, MethodInfo, params SwitchCase[]) Expression.SwitchCase(Expression, IEnumerable<Expression>) Expression.SwitchCase(Expression, params Expression[]) Expression.SymbolDocument(string) Expression.SymbolDocument(string, Guid) Expression.SymbolDocument(string, Guid, Guid) Expression.SymbolDocument(string, Guid, Guid, Guid) Expression.Throw(Expression) Expression.Throw(Expression, Type) Expression.ToString() Expression.TryCatch(Expression, params CatchBlock[]) Expression.TryCatchFinally(Expression, Expression, params CatchBlock[]) Expression.TryFault(Expression, Expression) Expression.TryFinally(Expression, Expression) Expression.TryGetActionType(Type[], out Type) Expression.TryGetFuncType(Type[], out Type) Expression.TypeAs(Expression, Type) Expression.TypeEqual(Expression, Type) Expression.TypeIs(Expression, Type) Expression.UnaryPlus(Expression) Expression.UnaryPlus(Expression, MethodInfo) Expression.Unbox(Expression, Type) Expression.Variable(Type) Expression.Variable(Type, string) Expression.CanReduce object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors KafkaTableExpression(IEntityType) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaTableExpression(IEntityType entityType) Parameters entityType IEntityType Properties EntityType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual IEntityType EntityType { get; } Property Value IEntityType NodeType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override sealed ExpressionType NodeType { get; } Property Value ExpressionType Type This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override Type Type { get; } Property Value Type Methods VisitChildren(ExpressionVisitor) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitChildren(ExpressionVisitor visitor) Parameters visitor ExpressionVisitor Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.SingleResultShaperExpression.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.SingleResultShaperExpression.html",
    "title": "Class SingleResultShaperExpression | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class SingleResultShaperExpression Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class SingleResultShaperExpression : Expression, IPrintableExpression Inheritance object Expression SingleResultShaperExpression Implements IPrintableExpression Inherited Members Expression.Accept(ExpressionVisitor) Expression.Add(Expression, Expression) Expression.Add(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression) Expression.AddAssign(Expression, Expression, MethodInfo) Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddAssignChecked(Expression, Expression) Expression.AddAssignChecked(Expression, Expression, MethodInfo) Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.AddChecked(Expression, Expression) Expression.AddChecked(Expression, Expression, MethodInfo) Expression.And(Expression, Expression) Expression.And(Expression, Expression, MethodInfo) Expression.AndAlso(Expression, Expression) Expression.AndAlso(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression) Expression.AndAssign(Expression, Expression, MethodInfo) Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.ArrayAccess(Expression, IEnumerable<Expression>) Expression.ArrayAccess(Expression, params Expression[]) Expression.ArrayIndex(Expression, IEnumerable<Expression>) Expression.ArrayIndex(Expression, Expression) Expression.ArrayIndex(Expression, params Expression[]) Expression.ArrayLength(Expression) Expression.Assign(Expression, Expression) Expression.Bind(MemberInfo, Expression) Expression.Bind(MethodInfo, Expression) Expression.Block(IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Expression, Expression) Expression.Block(Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression) Expression.Block(Expression, Expression, Expression, Expression, Expression) Expression.Block(params Expression[]) Expression.Block(Type, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>) Expression.Block(Type, IEnumerable<ParameterExpression>, params Expression[]) Expression.Block(Type, params Expression[]) Expression.Break(LabelTarget) Expression.Break(LabelTarget, Expression) Expression.Break(LabelTarget, Expression, Type) Expression.Break(LabelTarget, Type) Expression.Call(Expression, MethodInfo) Expression.Call(Expression, MethodInfo, IEnumerable<Expression>) Expression.Call(Expression, MethodInfo, Expression, Expression) Expression.Call(Expression, MethodInfo, Expression, Expression, Expression) Expression.Call(Expression, MethodInfo, params Expression[]) Expression.Call(Expression, string, Type[], params Expression[]) Expression.Call(MethodInfo, IEnumerable<Expression>) Expression.Call(MethodInfo, Expression) Expression.Call(MethodInfo, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression) Expression.Call(MethodInfo, params Expression[]) Expression.Call(Type, string, Type[], params Expression[]) Expression.Catch(ParameterExpression, Expression) Expression.Catch(ParameterExpression, Expression, Expression) Expression.Catch(Type, Expression) Expression.Catch(Type, Expression, Expression) Expression.ClearDebugInfo(SymbolDocumentInfo) Expression.Coalesce(Expression, Expression) Expression.Coalesce(Expression, Expression, LambdaExpression) Expression.Condition(Expression, Expression, Expression) Expression.Condition(Expression, Expression, Expression, Type) Expression.Constant(object) Expression.Constant(object, Type) Expression.Continue(LabelTarget) Expression.Continue(LabelTarget, Type) Expression.Convert(Expression, Type) Expression.Convert(Expression, Type, MethodInfo) Expression.ConvertChecked(Expression, Type) Expression.ConvertChecked(Expression, Type, MethodInfo) Expression.DebugInfo(SymbolDocumentInfo, int, int, int, int) Expression.Decrement(Expression) Expression.Decrement(Expression, MethodInfo) Expression.Default(Type) Expression.Divide(Expression, Expression) Expression.Divide(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression) Expression.DivideAssign(Expression, Expression, MethodInfo) Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>) Expression.Dynamic(CallSiteBinder, Type, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression) Expression.Dynamic(CallSiteBinder, Type, params Expression[]) Expression.ElementInit(MethodInfo, IEnumerable<Expression>) Expression.ElementInit(MethodInfo, params Expression[]) Expression.Empty() Expression.Equal(Expression, Expression) Expression.Equal(Expression, Expression, bool, MethodInfo) Expression.ExclusiveOr(Expression, Expression) Expression.ExclusiveOr(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo) Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Field(Expression, FieldInfo) Expression.Field(Expression, string) Expression.Field(Expression, Type, string) Expression.GetActionType(params Type[]) Expression.GetDelegateType(params Type[]) Expression.GetFuncType(params Type[]) Expression.Goto(LabelTarget) Expression.Goto(LabelTarget, Expression) Expression.Goto(LabelTarget, Expression, Type) Expression.Goto(LabelTarget, Type) Expression.GreaterThan(Expression, Expression) Expression.GreaterThan(Expression, Expression, bool, MethodInfo) Expression.GreaterThanOrEqual(Expression, Expression) Expression.GreaterThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.IfThen(Expression, Expression) Expression.IfThenElse(Expression, Expression, Expression) Expression.Increment(Expression) Expression.Increment(Expression, MethodInfo) Expression.Invoke(Expression, IEnumerable<Expression>) Expression.Invoke(Expression, params Expression[]) Expression.IsFalse(Expression) Expression.IsFalse(Expression, MethodInfo) Expression.IsTrue(Expression) Expression.IsTrue(Expression, MethodInfo) Expression.Label() Expression.Label(LabelTarget) Expression.Label(LabelTarget, Expression) Expression.Label(string) Expression.Label(Type) Expression.Label(Type, string) Expression.Lambda(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, bool, params ParameterExpression[]) Expression.Lambda(Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, params ParameterExpression[]) Expression.Lambda(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, bool, params ParameterExpression[]) Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, params ParameterExpression[]) Expression.Lambda(Type, Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda(Type, Expression, string, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, bool, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, params ParameterExpression[]) Expression.Lambda<TDelegate>(Expression, string, bool, IEnumerable<ParameterExpression>) Expression.Lambda<TDelegate>(Expression, string, IEnumerable<ParameterExpression>) Expression.LeftShift(Expression, Expression) Expression.LeftShift(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression) Expression.LeftShiftAssign(Expression, Expression, MethodInfo) Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.LessThan(Expression, Expression) Expression.LessThan(Expression, Expression, bool, MethodInfo) Expression.LessThanOrEqual(Expression, Expression) Expression.LessThanOrEqual(Expression, Expression, bool, MethodInfo) Expression.ListBind(MemberInfo, IEnumerable<ElementInit>) Expression.ListBind(MemberInfo, params ElementInit[]) Expression.ListBind(MethodInfo, IEnumerable<ElementInit>) Expression.ListBind(MethodInfo, params ElementInit[]) Expression.ListInit(NewExpression, IEnumerable<ElementInit>) Expression.ListInit(NewExpression, IEnumerable<Expression>) Expression.ListInit(NewExpression, params ElementInit[]) Expression.ListInit(NewExpression, params Expression[]) Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>) Expression.ListInit(NewExpression, MethodInfo, params Expression[]) Expression.Loop(Expression) Expression.Loop(Expression, LabelTarget) Expression.Loop(Expression, LabelTarget, LabelTarget) Expression.MakeBinary(ExpressionType, Expression, Expression) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo) Expression.MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo, LambdaExpression) Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>) Expression.MakeDynamic(Type, CallSiteBinder, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression) Expression.MakeDynamic(Type, CallSiteBinder, params Expression[]) Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type) Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>) Expression.MakeMemberAccess(Expression, MemberInfo) Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>) Expression.MakeUnary(ExpressionType, Expression, Type) Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo) Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MemberInfo, params MemberBinding[]) Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>) Expression.MemberBind(MethodInfo, params MemberBinding[]) Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>) Expression.MemberInit(NewExpression, params MemberBinding[]) Expression.Modulo(Expression, Expression) Expression.Modulo(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression) Expression.ModuloAssign(Expression, Expression, MethodInfo) Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.Multiply(Expression, Expression) Expression.Multiply(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression) Expression.MultiplyAssign(Expression, Expression, MethodInfo) Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyAssignChecked(Expression, Expression) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo) Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.MultiplyChecked(Expression, Expression) Expression.MultiplyChecked(Expression, Expression, MethodInfo) Expression.Negate(Expression) Expression.Negate(Expression, MethodInfo) Expression.NegateChecked(Expression) Expression.NegateChecked(Expression, MethodInfo) Expression.New(ConstructorInfo) Expression.New(ConstructorInfo, IEnumerable<Expression>) Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>) Expression.New(ConstructorInfo, IEnumerable<Expression>, params MemberInfo[]) Expression.New(ConstructorInfo, params Expression[]) Expression.New(Type) Expression.NewArrayBounds(Type, IEnumerable<Expression>) Expression.NewArrayBounds(Type, params Expression[]) Expression.NewArrayInit(Type, IEnumerable<Expression>) Expression.NewArrayInit(Type, params Expression[]) Expression.Not(Expression) Expression.Not(Expression, MethodInfo) Expression.NotEqual(Expression, Expression) Expression.NotEqual(Expression, Expression, bool, MethodInfo) Expression.OnesComplement(Expression) Expression.OnesComplement(Expression, MethodInfo) Expression.Or(Expression, Expression) Expression.Or(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression) Expression.OrAssign(Expression, Expression, MethodInfo) Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.OrElse(Expression, Expression) Expression.OrElse(Expression, Expression, MethodInfo) Expression.Parameter(Type) Expression.Parameter(Type, string) Expression.PostDecrementAssign(Expression) Expression.PostDecrementAssign(Expression, MethodInfo) Expression.PostIncrementAssign(Expression) Expression.PostIncrementAssign(Expression, MethodInfo) Expression.Power(Expression, Expression) Expression.Power(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression) Expression.PowerAssign(Expression, Expression, MethodInfo) Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.PreDecrementAssign(Expression) Expression.PreDecrementAssign(Expression, MethodInfo) Expression.PreIncrementAssign(Expression) Expression.PreIncrementAssign(Expression, MethodInfo) Expression.Property(Expression, MethodInfo) Expression.Property(Expression, PropertyInfo) Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>) Expression.Property(Expression, PropertyInfo, params Expression[]) Expression.Property(Expression, string) Expression.Property(Expression, string, params Expression[]) Expression.Property(Expression, Type, string) Expression.PropertyOrField(Expression, string) Expression.Quote(Expression) Expression.Reduce() Expression.ReduceAndCheck() Expression.ReduceExtensions() Expression.ReferenceEqual(Expression, Expression) Expression.ReferenceNotEqual(Expression, Expression) Expression.Rethrow() Expression.Rethrow(Type) Expression.Return(LabelTarget) Expression.Return(LabelTarget, Expression) Expression.Return(LabelTarget, Expression, Type) Expression.Return(LabelTarget, Type) Expression.RightShift(Expression, Expression) Expression.RightShift(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression) Expression.RightShiftAssign(Expression, Expression, MethodInfo) Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.RuntimeVariables(IEnumerable<ParameterExpression>) Expression.RuntimeVariables(params ParameterExpression[]) Expression.Subtract(Expression, Expression) Expression.Subtract(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression) Expression.SubtractAssign(Expression, Expression, MethodInfo) Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractAssignChecked(Expression, Expression) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo) Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression) Expression.SubtractChecked(Expression, Expression) Expression.SubtractChecked(Expression, Expression, MethodInfo) Expression.Switch(Expression, Expression, params SwitchCase[]) Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Expression, Expression, MethodInfo, params SwitchCase[]) Expression.Switch(Expression, params SwitchCase[]) Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>) Expression.Switch(Type, Expression, Expression, MethodInfo, params SwitchCase[]) Expression.SwitchCase(Expression, IEnumerable<Expression>) Expression.SwitchCase(Expression, params Expression[]) Expression.SymbolDocument(string) Expression.SymbolDocument(string, Guid) Expression.SymbolDocument(string, Guid, Guid) Expression.SymbolDocument(string, Guid, Guid, Guid) Expression.Throw(Expression) Expression.Throw(Expression, Type) Expression.ToString() Expression.TryCatch(Expression, params CatchBlock[]) Expression.TryCatchFinally(Expression, Expression, params CatchBlock[]) Expression.TryFault(Expression, Expression) Expression.TryFinally(Expression, Expression) Expression.TryGetActionType(Type[], out Type) Expression.TryGetFuncType(Type[], out Type) Expression.TypeAs(Expression, Type) Expression.TypeEqual(Expression, Type) Expression.TypeIs(Expression, Type) Expression.UnaryPlus(Expression) Expression.UnaryPlus(Expression, MethodInfo) Expression.Unbox(Expression, Type) Expression.Variable(Type) Expression.Variable(Type, string) Expression.CanReduce object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SingleResultShaperExpression(Expression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public SingleResultShaperExpression(Expression projection, Expression innerShaper) Parameters projection Expression innerShaper Expression Properties InnerShaper This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression InnerShaper { get; } Property Value Expression NodeType This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override sealed ExpressionType NodeType { get; } Property Value ExpressionType Projection This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual Expression Projection { get; } Property Value Expression Type This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public override Type Type { get; } Property Value Type Methods Update(Expression, Expression) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public virtual SingleResultShaperExpression Update(Expression projection, Expression innerShaper) Parameters projection Expression innerShaper Expression Returns SingleResultShaperExpression VisitChildren(ExpressionVisitor) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. protected override Expression VisitChildren(ExpressionVisitor visitor) Parameters visitor ExpressionVisitor Returns Expression"
  },
  "api/MASES.EntityFrameworkCore.KNet.Query.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Query.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Query.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Query.Internal Classes CollectionResultShaperExpression This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. EntityProjectionExpression This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaExpressionTranslatingExpressionVisitor This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaProjectionBindingExpressionVisitor This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryContext This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryContextFactory This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryExpression This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryTranslationPreprocessor This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryTranslationPreprocessorFactory This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryableMethodTranslatingExpressionVisitor This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaQueryableMethodTranslatingExpressionVisitorFactory This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaShapedQueryCompilingExpressionVisitor This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaShapedQueryCompilingExpressionVisitorFactory This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTableExpression This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. SingleResultShaperExpression This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. Structs AnonymousObject This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.Key.Binary-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.Key.Binary-1.html",
    "title": "Class AvroKEFCoreSerDes.Key.Binary<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes.Key.Binary<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class AvroKEFCoreSerDes.Key.Binary<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object AvroKEFCoreSerDes.Key.Binary<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of AvroKEFCoreSerDes.Key.Binary<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of AvroKEFCoreSerDes.Key.Binary<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.Key.Json-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.Key.Json-1.html",
    "title": "Class AvroKEFCoreSerDes.Key.Json<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes.Key.Json<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class AvroKEFCoreSerDes.Key.Json<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object AvroKEFCoreSerDes.Key.Json<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of AvroKEFCoreSerDes.Key.Json<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of AvroKEFCoreSerDes.Key.Json<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.Key.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.Key.html",
    "title": "Class AvroKEFCoreSerDes.Key | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes.Key Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Base class to define key extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public static class AvroKEFCoreSerDes.Key Inheritance object AvroKEFCoreSerDes.Key Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.ValueContainer.Binary-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.ValueContainer.Binary-1.html",
    "title": "Class AvroKEFCoreSerDes.ValueContainer.Binary<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes.ValueContainer.Binary<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class AvroKEFCoreSerDes.ValueContainer.Binary<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object AvroKEFCoreSerDes.ValueContainer.Binary<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of AvroKEFCoreSerDes.ValueContainer.Binary<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of AvroKEFCoreSerDes.ValueContainer.Binary<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.ValueContainer.Json-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.ValueContainer.Json-1.html",
    "title": "Class AvroKEFCoreSerDes.ValueContainer.Json<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes.ValueContainer.Json<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class AvroKEFCoreSerDes.ValueContainer.Json<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object AvroKEFCoreSerDes.ValueContainer.Json<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of AvroKEFCoreSerDes.ValueContainer.Json<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of AvroKEFCoreSerDes.ValueContainer.Json<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.ValueContainer.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.ValueContainer.html",
    "title": "Class AvroKEFCoreSerDes.ValueContainer | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes.ValueContainer Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Base class to define ValueContainer extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public static class AvroKEFCoreSerDes.ValueContainer Inheritance object AvroKEFCoreSerDes.ValueContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.AvroKEFCoreSerDes.html",
    "title": "Class AvroKEFCoreSerDes | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKEFCoreSerDes Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Avro base class to define extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public static class AvroKEFCoreSerDes Inheritance object AvroKEFCoreSerDes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultKeySerialization Returns the default serializer Type for keys public static readonly Type DefaultKeySerialization Field Value Type DefaultValueContainer Returns the default Type for value containers public static readonly Type DefaultValueContainer Field Value Type DefaultValueContainerSerialization Returns the default serializer Type for value containers public static readonly Type DefaultValueContainerSerialization Field Value Type"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler.AvroSerializationHelper.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler.AvroSerializationHelper.html",
    "title": "Class AvroSerializationHelper | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroSerializationHelper Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler.dll public static class AvroSerializationHelper Inheritance object AvroSerializationHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildDefaultSchema(string) public static void BuildDefaultSchema(string outputFolder) Parameters outputFolder string"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Compiler Classes AvroSerializationHelper"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.AvroKeyContainer.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.AvroKeyContainer.html",
    "title": "Class AvroKeyContainer | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroKeyContainer Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Represents the storage container type to be used from KEFCore for keys public class AvroKeyContainer : ISpecificRecord Inheritance object AvroKeyContainer Implements ISpecificRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _SCHEMA public static Schema _SCHEMA Field Value Schema Properties PrimaryKey public IList<object> PrimaryKey { get; set; } Property Value IList<object> Schema Schema of this instance. public virtual Schema Schema { get; } Property Value Schema Methods Get(int) Return the value of a field given its position in the schema. This method is not meant to be called by user code, but only by Avro.Specific.SpecificDatumReader<T> implementations. public virtual object Get(int fieldPos) Parameters fieldPos int Position of the field. Returns object Value of the field. Put(int, object) Set the value of a field given its position in the schema. This method is not meant to be called by user code, but only by Avro.Specific.SpecificDatumWriter<T> implementations. public virtual void Put(int fieldPos, object fieldValue) Parameters fieldPos int Position of the field. fieldValue object Value of the field."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.AvroValueContainer-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.AvroValueContainer-1.html",
    "title": "Class AvroValueContainer<TKey> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroValueContainer<TKey> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll The default ValueContainer used from KEFCore public class AvroValueContainer<TKey> : AvroValueContainer, ISpecificRecord, IValueContainer<TKey> where TKey : notnull Type Parameters TKey It is the key Type passed from Entity Framework associated to the Entity data will be stored in the AvroValueContainer<TKey> Inheritance object AvroValueContainer AvroValueContainer<TKey> Implements ISpecificRecord IValueContainer<TKey> Inherited Members AvroValueContainer._SCHEMA AvroValueContainer.Schema AvroValueContainer.EntityName AvroValueContainer.ClrType AvroValueContainer.Data AvroValueContainer.Get(int) AvroValueContainer.Put(int, object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AvroValueContainer() Initialize a new instance of AvroValueContainer<TKey> public AvroValueContainer() Remarks It is mainly used from the JSON serializer AvroValueContainer(IEntityType, object[]) Initialize a new instance of AvroValueContainer<TKey> public AvroValueContainer(IEntityType tName, object[] rData) Parameters tName IEntityType The IEntityType requesting the AvroValueContainer<TKey> for rData rData object[] The data, built from EFCore, to be stored in the AvroValueContainer<TKey> Remarks This constructor is mandatory and it is used from KEFCore to request a AvroValueContainer<TKey> Methods GetData(IEntityType, ref object[]) Returns back the raw data associated to the Entity public void GetData(IEntityType tName, ref object[] array) Parameters tName IEntityType The requesting IEntityType to get the data back, can null if not available array object[] The array of object to be filled in with the data stored in the ValueContainer GetProperties() Returns back a dictionary of properties (PropertyIndex, PropertyName) associated to the Entity public IReadOnlyDictionary<int, string> GetProperties() Returns IReadOnlyDictionary<int, string> A dictionary of properties (PropertyIndex, PropertyName) filled in with the data stored in the ValueContainer"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.AvroValueContainer.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.AvroValueContainer.html",
    "title": "Class AvroValueContainer | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class AvroValueContainer Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Represents the storage container type to be used from KEFCore public class AvroValueContainer : ISpecificRecord Inheritance object AvroValueContainer Implements ISpecificRecord Derived AvroValueContainer<TKey> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _SCHEMA public static Schema _SCHEMA Field Value Schema Properties ClrType public string ClrType { get; set; } Property Value string Data public IList<PropertyDataRecord> Data { get; set; } Property Value IList<PropertyDataRecord> EntityName public string EntityName { get; set; } Property Value string Schema Schema of this instance. public virtual Schema Schema { get; } Property Value Schema Methods Get(int) Return the value of a field given its position in the schema. This method is not meant to be called by user code, but only by Avro.Specific.SpecificDatumReader<T> implementations. public virtual object Get(int fieldPos) Parameters fieldPos int Position of the field. Returns object Value of the field. Put(int, object) Set the value of a field given its position in the schema. This method is not meant to be called by user code, but only by Avro.Specific.SpecificDatumWriter<T> implementations. public virtual void Put(int fieldPos, object fieldValue) Parameters fieldPos int Position of the field. fieldValue object Value of the field."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.PropertyDataRecord.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.PropertyDataRecord.html",
    "title": "Class PropertyDataRecord | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class PropertyDataRecord Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Avro.dll Represents the single container for Entity properties stored in AvroValueContainer and used from KEFCore public class PropertyDataRecord : ISpecificRecord Inheritance object PropertyDataRecord Implements ISpecificRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _SCHEMA public static Schema _SCHEMA Field Value Schema Properties ClrType public string ClrType { get; set; } Property Value string PropertyIndex public int PropertyIndex { get; set; } Property Value int PropertyName public string PropertyName { get; set; } Property Value string Schema Schema of this instance. public virtual Schema Schema { get; } Property Value Schema Value public object Value { get; set; } Property Value object Methods Get(int) Return the value of a field given its position in the schema. This method is not meant to be called by user code, but only by Avro.Specific.SpecificDatumReader<T> implementations. public virtual object Get(int fieldPos) Parameters fieldPos int Position of the field. Returns object Value of the field. Put(int, object) Set the value of a field given its position in the schema. This method is not meant to be called by user code, but only by Avro.Specific.SpecificDatumWriter<T> implementations. public virtual void Put(int fieldPos, object fieldValue) Parameters fieldPos int Position of the field. fieldValue object Value of the field."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage Classes AvroKeyContainer Represents the storage container type to be used from KEFCore for keys AvroValueContainer Represents the storage container type to be used from KEFCore AvroValueContainer<TKey> The default ValueContainer used from KEFCore PropertyDataRecord Represents the single container for Entity properties stored in AvroValueContainer and used from KEFCore"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Avro.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Avro Classes AvroKEFCoreSerDes Avro base class to define extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html AvroKEFCoreSerDes.Key Base class to define key extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html AvroKEFCoreSerDes.Key.Binary<T> Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html AvroKEFCoreSerDes.Key.Json<T> Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html AvroKEFCoreSerDes.ValueContainer Base class to define ValueContainer extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html AvroKEFCoreSerDes.ValueContainer.Binary<T> Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html AvroKEFCoreSerDes.ValueContainer.Json<T> Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.EntityExtractor.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.EntityExtractor.html",
    "title": "Class EntityExtractor | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class EntityExtractor Namespace MASES.EntityFrameworkCore.KNet.Serialization Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll This is an helper class to extract data information from Kafka Records stored in topics public class EntityExtractor Inheritance object EntityExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromRawValueData(Type, Type, Type, Type, string, byte[], byte[], bool) Extract information for Entity from recordValue in input public static object FromRawValueData(Type keyType, Type valueContainer, Type keySerializerSelectorType, Type valueSerializerSelectorType, string topic, byte[] recordValue, byte[] recordKey, bool throwUnmatch = false) Parameters keyType Type Expected key Type valueContainer Type Expected ValueContainer Type keySerializerSelectorType Type Key serializer to be used valueSerializerSelectorType Type ValueContainer serializer to be used topic string The Apache Kafka topic the data is coming from recordValue byte[] The Apache Kafka record value containing the information recordKey byte[] The Apache Kafka record key containing the information throwUnmatch bool Throws exceptions if there is unmatch in data retrieve, e.g. a property not available or a not settable Returns object The extracted entity FromRecord(ConsumerRecord<byte[], byte[]>, bool) Extract information for Entity from record in input public static object FromRecord(ConsumerRecord<byte[], byte[]> record, bool throwUnmatch = false) Parameters record ConsumerRecord<byte[], byte[]> The Apache Kafka record containing the information throwUnmatch bool Throws exceptions if there is unmatch in data retrieve, e.g. a property not available or a not settable Returns object The extracted entity FromRecord<TEntity>(ConsumerRecord<byte[], byte[]>, bool) Extract information for Entity from record in input public static TEntity FromRecord<TEntity>(ConsumerRecord<byte[], byte[]> record, bool throwUnmatch = false) where TEntity : class Parameters record ConsumerRecord<byte[], byte[]> The Apache Kafka record containing the information throwUnmatch bool Throws exceptions if there is unmatch in data retrieve, e.g. a property not available or a not settable Returns TEntity The extracted entity Type Parameters TEntity FromTopic(ConsumerConfigBuilder, string, Action<object?, Exception?>, CancellationToken, bool) Extract information for Entity using consumerConfig configurtion within a topicName and send them to cb public static void FromTopic(ConsumerConfigBuilder consumerConfig, string topicName, Action<object?, Exception?> cb, CancellationToken token, bool onlyLatest = false) Parameters consumerConfig ConsumerConfigBuilder The ConsumerConfigBuilder with configuration topicName string The topic containing the data cb Action<object, Exception> The Action<T1, T2> where data will be available token CancellationToken The CancellationToken to use to stop execution onlyLatest bool Start execution only for newest messages and does not execute for oldest, default is from beginning FromTopic(string, string, Action<object?, Exception?>, CancellationToken, bool) Extract information for Entity from bootstrapServer within a topicName and send them to cb public static void FromTopic(string bootstrapServer, string topicName, Action<object?, Exception?> cb, CancellationToken token, bool onlyLatest = false) Parameters bootstrapServer string The Apache Kafka bootstrap.servers topicName string The topic containing the data cb Action<object, Exception> The Action<T1, T2> where data will be available token CancellationToken The CancellationToken to use to stop execution onlyLatest bool Start execution only for newest messages and does not execute for oldest, default is from beginning FromTopic<TEntity>(ConsumerConfigBuilder, string, Action<TEntity?, Exception?>, CancellationToken, bool) Extract information for Entity using consumerConfig configurtion within a topicName and send them to cb public static void FromTopic<TEntity>(ConsumerConfigBuilder consumerConfig, string topicName, Action<TEntity?, Exception?> cb, CancellationToken token, bool onlyLatest = false) where TEntity : class Parameters consumerConfig ConsumerConfigBuilder The ConsumerConfigBuilder with configuration topicName string The topic containing the data cb Action<TEntity, Exception> The Action<T1, T2> where data will be available token CancellationToken The CancellationToken to use to stop execution onlyLatest bool Start execution only for newest messages and does not execute for oldest, default is from beginning Type Parameters TEntity The Entity type if it is known FromTopic<TEntity>(string, string, Action<TEntity?, Exception?>, CancellationToken, bool) Extract information for Entity from bootstrapServer within a topicName and send them to cb public static void FromTopic<TEntity>(string bootstrapServer, string topicName, Action<TEntity?, Exception?> cb, CancellationToken token, bool onlyLatest = false) where TEntity : class Parameters bootstrapServer string The Apache Kafka bootstrap.servers topicName string The topic containing the data cb Action<TEntity, Exception> The Action<T1, T2> where data will be available token CancellationToken The CancellationToken to use to stop execution onlyLatest bool Start execution only for newest messages and does not execute for oldest, default is from beginning Type Parameters TEntity The Entity type if it is known"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.IValueContainer-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.IValueContainer-1.html",
    "title": "Interface IValueContainer<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IValueContainer<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll This is the main interface a class must implement to be a ValueContainer. More info here public interface IValueContainer<in T> where T : notnull Type Parameters T It is the key Type passed from Entity Framework associated to the Entity data will be stored in the ValueContainer Properties ClrType The CLR Type of IEntityType string ClrType { get; } Property Value string EntityName The Entity name of IEntityType string EntityName { get; } Property Value string Methods GetData(IEntityType, ref object[]) Returns back the raw data associated to the Entity void GetData(IEntityType tName, ref object[] array) Parameters tName IEntityType The requesting IEntityType to get the data back, can null if not available array object[] The array of object to be filled in with the data stored in the ValueContainer GetProperties() Returns back a dictionary of properties (PropertyIndex, PropertyName) associated to the Entity IReadOnlyDictionary<int, string> GetProperties() Returns IReadOnlyDictionary<int, string> A dictionary of properties (PropertyIndex, PropertyName) filled in with the data stored in the ValueContainer"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.DefaultKEFCoreSerDes.Key-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.DefaultKEFCoreSerDes.Key-1.html",
    "title": "Class DefaultKEFCoreSerDes.Key<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class DefaultKEFCoreSerDes.Key<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class DefaultKEFCoreSerDes.Key<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object DefaultKEFCoreSerDes.Key<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of DefaultKEFCoreSerDes.Key<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of DefaultKEFCoreSerDes.Key<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.DefaultKEFCoreSerDes.ValueContainer-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.DefaultKEFCoreSerDes.ValueContainer-1.html",
    "title": "Class DefaultKEFCoreSerDes.ValueContainer<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class DefaultKEFCoreSerDes.ValueContainer<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll Base class to define ValueContainer extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class DefaultKEFCoreSerDes.ValueContainer<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object DefaultKEFCoreSerDes.ValueContainer<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of DefaultKEFCoreSerDes.ValueContainer<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of DefaultKEFCoreSerDes.ValueContainer<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.DefaultKEFCoreSerDes.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.DefaultKEFCoreSerDes.html",
    "title": "Class DefaultKEFCoreSerDes | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class DefaultKEFCoreSerDes Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll Default base class to define extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public static class DefaultKEFCoreSerDes Inheritance object DefaultKEFCoreSerDes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultKeySerialization Returns the default serializer Type for keys public static readonly Type DefaultKeySerialization Field Value Type DefaultValueContainer Returns the default Type for value containers public static readonly Type DefaultValueContainer Field Value Type DefaultValueContainerSerialization Returns the default serializer Type for value containers public static readonly Type DefaultValueContainerSerialization Field Value Type"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.DefaultValueContainer-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.DefaultValueContainer-1.html",
    "title": "Class DefaultValueContainer<TKey> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class DefaultValueContainer<TKey> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll The default ValueContainer used from KEFCore public class DefaultValueContainer<TKey> : IValueContainer<TKey> where TKey : notnull Type Parameters TKey It is the key Type passed from Entity Framework associated to the Entity data will be stored in the DefaultValueContainer<TKey> Inheritance object DefaultValueContainer<TKey> Implements IValueContainer<TKey> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultValueContainer() Initialize a new instance of DefaultValueContainer<TKey> public DefaultValueContainer() Remarks It is mainly used from the JSON serializer DefaultValueContainer(IEntityType, object[]) Initialize a new instance of DefaultValueContainer<TKey> public DefaultValueContainer(IEntityType tName, object[] rData) Parameters tName IEntityType The IEntityType requesting the DefaultValueContainer<TKey> for rData rData object[] The data, built from EFCore, to be stored in the DefaultValueContainer<TKey> Remarks This constructor is mandatory and it is used from KEFCore to request a DefaultValueContainer<TKey> Properties ClrType The CLR Type of IEntityType public string ClrType { get; set; } Property Value string Data The data stored associated to the IEntityType public Dictionary<int, PropertyData>? Data { get; set; } Property Value Dictionary<int, PropertyData> EntityName The Entity name of IEntityType public string EntityName { get; set; } Property Value string Methods GetData(IEntityType, ref object[]) Returns back the raw data associated to the Entity public void GetData(IEntityType tName, ref object[] array) Parameters tName IEntityType The requesting IEntityType to get the data back, can null if not available array object[] The array of object to be filled in with the data stored in the ValueContainer GetProperties() Returns back a dictionary of properties (PropertyIndex, PropertyName) associated to the Entity public IReadOnlyDictionary<int, string> GetProperties() Returns IReadOnlyDictionary<int, string> A dictionary of properties (PropertyIndex, PropertyName) filled in with the data stored in the ValueContainer"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.PropertyData.ManagedTypes.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.PropertyData.ManagedTypes.html",
    "title": "Enum PropertyData.ManagedTypes | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Enum PropertyData.ManagedTypes Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll List of Type managed from PropertyData public enum PropertyData.ManagedTypes Fields Byte = 5 byte DateTime = 3 DateTime DateTimeOffset = 4 DateTimeOffset Double = 9 double Float = 10 float Guid = 2 Guid Int = 7 int Long = 8 long Short = 6 short String = 1 string Undefined = 0 Not defined or not found"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.PropertyData.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.PropertyData.html",
    "title": "Class PropertyData | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class PropertyData Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.dll This is a supporting class used from DefaultValueContainer<TKey> public class PropertyData : IJsonOnDeserialized Inheritance object PropertyData Implements IJsonOnDeserialized Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PropertyData() Initialize a new instance of PropertyData public PropertyData() Remarks It is mainly used from the JSON serializer PropertyData(IProperty, object) Initialize a new instance of PropertyData public PropertyData(IProperty property, object value) Parameters property IProperty The IProperty to be stored into PropertyData associated to value value object The data, built from EFCore, to be stored in the PropertyData Remarks This constructor is mandatory and it is used from DefaultValueContainer<TKey> Properties ClrType The full name of the CLR Type of the IProperty public string? ClrType { get; set; } Property Value string ManagedType The PropertyData.ManagedTypes value of the ClrType public PropertyData.ManagedTypes? ManagedType { get; set; } Property Value PropertyData.ManagedTypes? PropertyName The name of the IProperty public string? PropertyName { get; set; } Property Value string Value The raw value associated to the IProperty public object? Value { get; set; } Property Value object Methods OnDeserialized() The method that is called after deserialization. public void OnDeserialized()"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json.Storage Classes DefaultValueContainer<TKey> The default ValueContainer used from KEFCore PropertyData This is a supporting class used from DefaultValueContainer<TKey> Enums PropertyData.ManagedTypes List of Type managed from PropertyData"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Json.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Json Classes DefaultKEFCoreSerDes Default base class to define extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html DefaultKEFCoreSerDes.Key<T> Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html DefaultKEFCoreSerDes.ValueContainer<T> Base class to define ValueContainer extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.ProtobufKEFCoreSerDes.Key-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.ProtobufKEFCoreSerDes.Key-1.html",
    "title": "Class ProtobufKEFCoreSerDes.Key<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class ProtobufKEFCoreSerDes.Key<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class ProtobufKEFCoreSerDes.Key<T> : ISerDesSelector<T>, ISerDesSelector Type Parameters T Inheritance object ProtobufKEFCoreSerDes.Key<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of ProtobufKEFCoreSerDes.Key<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of ProtobufKEFCoreSerDes.Key<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.ProtobufKEFCoreSerDes.ValueContainer-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.ProtobufKEFCoreSerDes.ValueContainer-1.html",
    "title": "Class ProtobufKEFCoreSerDes.ValueContainer<T> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class ProtobufKEFCoreSerDes.ValueContainer<T> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Base class to define ValueContainer extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public class ProtobufKEFCoreSerDes.ValueContainer<T> : ISerDesSelector<T>, ISerDesSelector where T : class, IMessage<T> Type Parameters T Inheritance object ProtobufKEFCoreSerDes.ValueContainer<T> Implements ISerDesSelector<T> ISerDesSelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ByteArraySerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on byte array data exchange public static Type ByteArraySerDes { get; } Property Value Type ByteBufferSerDes Returns the generic Type implementing ISerDes<T, TJVMT> based on ByteBuffer data exchange public static Type ByteBufferSerDes { get; } Property Value Type Remarks Returns null if ByteBuffer data exchange is not supported SelectorTypeName Returns the name of the Type implementing ISerDesSelector public static string SelectorTypeName { get; } Property Value string Methods NewByteArraySerDes() Returns an instance of ByteArraySerDes public static ISerDesRaw<T> NewByteArraySerDes() Returns ISerDesRaw<T> The ISerDesRaw<T> of a new instance of ByteArraySerDes based on T NewByteBufferSerDes() Returns an instance of ByteBufferSerDes public static ISerDesBuffered<T> NewByteBufferSerDes() Returns ISerDesBuffered<T> The ISerDesBuffered<T> of a new instance of ByteBufferSerDes based on T NewInstance() Returns a new instance of ProtobufKEFCoreSerDes.ValueContainer<T> public static ISerDesSelector<T> NewInstance() Returns ISerDesSelector<T> The ISerDesSelector<T> of ProtobufKEFCoreSerDes.ValueContainer<T> NewSerDes<TJVM>() Returns an instance of ISerDes<T, TJVMT> public static ISerDes<T, TJVM> NewSerDes<TJVM>() Returns ISerDes<T, TJVM> The ISerDes<T, TJVMT> of a new instance of ByteArraySerDes or ByteBufferSerDes based on TJVM Type Parameters TJVM The JVM type to use for T"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.ProtobufKEFCoreSerDes.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.ProtobufKEFCoreSerDes.html",
    "title": "Class ProtobufKEFCoreSerDes | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class ProtobufKEFCoreSerDes Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Protobuf base class to define extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html public static class ProtobufKEFCoreSerDes Inheritance object ProtobufKEFCoreSerDes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultKeySerialization Returns the default serializer Type for keys public static readonly Type DefaultKeySerialization Field Value Type DefaultValueContainer Returns the default Type for value containers public static readonly Type DefaultValueContainer Field Value Type DefaultValueContainerSerialization Returns the default serializer Type for value containers public static readonly Type DefaultValueContainerSerialization Field Value Type"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.GenericValue.KindOneofCase.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.GenericValue.KindOneofCase.html",
    "title": "Enum GenericValue.KindOneofCase | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Enum GenericValue.KindOneofCase Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Enum of possible cases for the \"kind\" oneof. public enum GenericValue.KindOneofCase Fields BoolValue = 2 ByteValue = 3 DatetimeValue = 11 DatetimeoffsetValue = 12 DoubleValue = 8 FloatValue = 7 GuidValue = 10 IntValue = 5 LongValue = 6 None = 0 NullValue = 1 ShortValue = 4 StringValue = 9"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.GenericValue.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.GenericValue.html",
    "title": "Class GenericValue | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class GenericValue Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll [START messages] Our address book file is just one of these. public sealed class GenericValue : IMessage<GenericValue>, IEquatable<GenericValue>, IDeepCloneable<GenericValue>, IBufferMessage, IMessage Inheritance object GenericValue Implements IMessage<GenericValue> IEquatable<GenericValue> IDeepCloneable<GenericValue> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors GenericValue() public GenericValue() GenericValue(GenericValue) public GenericValue(GenericValue other) Parameters other GenericValue GenericValue(object) Initializer for input public GenericValue(object input) Parameters input object The value to insert Exceptions InvalidOperationException Fields BoolValueFieldNumber Field number for the \"bool_value\" field. public const int BoolValueFieldNumber = 2 Field Value int ByteValueFieldNumber Field number for the \"byte_value\" field. public const int ByteValueFieldNumber = 3 Field Value int DatetimeValueFieldNumber Field number for the \"datetime_value\" field. public const int DatetimeValueFieldNumber = 11 Field Value int DatetimeoffsetValueFieldNumber Field number for the \"datetimeoffset_value\" field. public const int DatetimeoffsetValueFieldNumber = 12 Field Value int DoubleValueFieldNumber Field number for the \"double_value\" field. public const int DoubleValueFieldNumber = 8 Field Value int FloatValueFieldNumber Field number for the \"float_value\" field. public const int FloatValueFieldNumber = 7 Field Value int GuidValueFieldNumber Field number for the \"guid_value\" field. public const int GuidValueFieldNumber = 10 Field Value int IntValueFieldNumber Field number for the \"int_value\" field. public const int IntValueFieldNumber = 5 Field Value int LongValueFieldNumber Field number for the \"long_value\" field. public const int LongValueFieldNumber = 6 Field Value int NullValueFieldNumber Field number for the \"null_value\" field. public const int NullValueFieldNumber = 1 Field Value int ShortValueFieldNumber Field number for the \"short_value\" field. public const int ShortValueFieldNumber = 4 Field Value int StringValueFieldNumber Field number for the \"string_value\" field. public const int StringValueFieldNumber = 9 Field Value int Properties BoolValue Represents a boolean value. public bool BoolValue { get; set; } Property Value bool ByteValue Represents a int value. public int ByteValue { get; set; } Property Value int DatetimeValue Represents a Timestamp value. public Timestamp DatetimeValue { get; set; } Property Value Timestamp DatetimeoffsetValue Represents a Timestamp value. public Timestamp DatetimeoffsetValue { get; set; } Property Value Timestamp Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor DoubleValue Represents a double value. public double DoubleValue { get; set; } Property Value double FloatValue Represents a float value. public float FloatValue { get; set; } Property Value float GuidValue Represents a Guid value. public ByteString GuidValue { get; set; } Property Value ByteString HasBoolValue Gets whether the \"bool_value\" field is set public bool HasBoolValue { get; } Property Value bool HasByteValue Gets whether the \"byte_value\" field is set public bool HasByteValue { get; } Property Value bool HasDoubleValue Gets whether the \"double_value\" field is set public bool HasDoubleValue { get; } Property Value bool HasFloatValue Gets whether the \"float_value\" field is set public bool HasFloatValue { get; } Property Value bool HasGuidValue Gets whether the \"guid_value\" field is set public bool HasGuidValue { get; } Property Value bool HasIntValue Gets whether the \"int_value\" field is set public bool HasIntValue { get; } Property Value bool HasLongValue Gets whether the \"long_value\" field is set public bool HasLongValue { get; } Property Value bool HasNullValue Gets whether the \"null_value\" field is set public bool HasNullValue { get; } Property Value bool HasShortValue Gets whether the \"short_value\" field is set public bool HasShortValue { get; } Property Value bool HasStringValue Gets whether the \"string_value\" field is set public bool HasStringValue { get; } Property Value bool IntValue Represents a int value. public int IntValue { get; set; } Property Value int KindCase public GenericValue.KindOneofCase KindCase { get; } Property Value GenericValue.KindOneofCase LongValue Represents a long value. public long LongValue { get; set; } Property Value long NullValue Represents a null value. public NullValue NullValue { get; set; } Property Value NullValue Parser public static MessageParser<GenericValue> Parser { get; } Property Value MessageParser<GenericValue> ShortValue Represents a int value. public int ShortValue { get; set; } Property Value int StringValue Represents a string value. public string StringValue { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearBoolValue() Clears the value of the oneof if it's currently set to \"bool_value\" public void ClearBoolValue() ClearByteValue() Clears the value of the oneof if it's currently set to \"byte_value\" public void ClearByteValue() ClearDoubleValue() Clears the value of the oneof if it's currently set to \"double_value\" public void ClearDoubleValue() ClearFloatValue() Clears the value of the oneof if it's currently set to \"float_value\" public void ClearFloatValue() ClearGuidValue() Clears the value of the oneof if it's currently set to \"guid_value\" public void ClearGuidValue() ClearIntValue() Clears the value of the oneof if it's currently set to \"int_value\" public void ClearIntValue() ClearKind() public void ClearKind() ClearLongValue() Clears the value of the oneof if it's currently set to \"long_value\" public void ClearLongValue() ClearNullValue() Clears the value of the oneof if it's currently set to \"null_value\" public void ClearNullValue() ClearShortValue() Clears the value of the oneof if it's currently set to \"short_value\" public void ClearShortValue() ClearStringValue() Clears the value of the oneof if it's currently set to \"string_value\" public void ClearStringValue() Clone() Creates a deep clone of this object. public GenericValue Clone() Returns GenericValue A deep clone of this object. Equals(GenericValue) Indicates whether the current object is equal to another object of the same type. public bool Equals(GenericValue other) Parameters other GenericValue An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetContent() Returns the content of GenericValue public object GetContent() Returns object GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(GenericValue) Merges the given message into this one. public void MergeFrom(GenericValue other) Parameters other GenericValue Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.GenericValueReflection.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.GenericValueReflection.html",
    "title": "Class GenericValueReflection | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class GenericValueReflection Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Holder for reflection information generated from GenericValue.proto public static class GenericValueReflection Inheritance object GenericValueReflection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descriptor File descriptor for GenericValue.proto public static FileDescriptor Descriptor { get; } Property Value FileDescriptor"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.KeyContainer.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.KeyContainer.html",
    "title": "Class KeyContainer | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KeyContainer Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Our address book file is just one of these. public sealed class KeyContainer : IMessage<KeyContainer>, IEquatable<KeyContainer>, IDeepCloneable<KeyContainer>, IBufferMessage, IMessage Inheritance object KeyContainer Implements IMessage<KeyContainer> IEquatable<KeyContainer> IDeepCloneable<KeyContainer> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors KeyContainer() public KeyContainer() KeyContainer(KeyContainer) public KeyContainer(KeyContainer other) Parameters other KeyContainer KeyContainer(params object[]) Initializer public KeyContainer(params object[] input) Parameters input object[] Fields PrimaryKeyFieldNumber Field number for the \"PrimaryKey\" field. public const int PrimaryKeyFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<KeyContainer> Parser { get; } Property Value MessageParser<KeyContainer> PrimaryKey public PrimaryKeyType PrimaryKey { get; set; } Property Value PrimaryKeyType Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public KeyContainer Clone() Returns KeyContainer A deep clone of this object. Equals(KeyContainer) Indicates whether the current object is equal to another object of the same type. public bool Equals(KeyContainer other) Parameters other KeyContainer An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetContent() Returns the content of KeyContainer public object GetContent() Returns object GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(KeyContainer) Merges the given message into this one. public void MergeFrom(KeyContainer other) Parameters other KeyContainer Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.KeyContainerReflection.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.KeyContainerReflection.html",
    "title": "Class KeyContainerReflection | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KeyContainerReflection Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Holder for reflection information generated from KeyContainer.proto public static class KeyContainerReflection Inheritance object KeyContainerReflection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descriptor File descriptor for KeyContainer.proto public static FileDescriptor Descriptor { get; } Property Value FileDescriptor"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.PrimaryKeyType.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.PrimaryKeyType.html",
    "title": "Class PrimaryKeyType | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class PrimaryKeyType Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll [START messages] public sealed class PrimaryKeyType : IMessage<PrimaryKeyType>, IEquatable<PrimaryKeyType>, IDeepCloneable<PrimaryKeyType>, IBufferMessage, IMessage Inheritance object PrimaryKeyType Implements IMessage<PrimaryKeyType> IEquatable<PrimaryKeyType> IDeepCloneable<PrimaryKeyType> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PrimaryKeyType() public PrimaryKeyType() PrimaryKeyType(PrimaryKeyType) public PrimaryKeyType(PrimaryKeyType other) Parameters other PrimaryKeyType PrimaryKeyType(params object[]) Initializer public PrimaryKeyType(params object[] input) Parameters input object[] Fields ValuesFieldNumber Field number for the \"values\" field. public const int ValuesFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PrimaryKeyType> Parser { get; } Property Value MessageParser<PrimaryKeyType> Values public RepeatedField<GenericValue> Values { get; } Property Value RepeatedField<GenericValue> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PrimaryKeyType Clone() Returns PrimaryKeyType A deep clone of this object. Equals(PrimaryKeyType) Indicates whether the current object is equal to another object of the same type. public bool Equals(PrimaryKeyType other) Parameters other PrimaryKeyType An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetContent() Returns the content of PrimaryKeyType public object[] GetContent() Returns object[] GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PrimaryKeyType) Merges the given message into this one. public void MergeFrom(PrimaryKeyType other) Parameters other PrimaryKeyType Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.PropertyDataRecord.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.PropertyDataRecord.html",
    "title": "Class PropertyDataRecord | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class PropertyDataRecord Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll [START messages] public sealed class PropertyDataRecord : IMessage<PropertyDataRecord>, IEquatable<PropertyDataRecord>, IDeepCloneable<PropertyDataRecord>, IBufferMessage, IMessage Inheritance object PropertyDataRecord Implements IMessage<PropertyDataRecord> IEquatable<PropertyDataRecord> IDeepCloneable<PropertyDataRecord> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PropertyDataRecord() public PropertyDataRecord() PropertyDataRecord(PropertyDataRecord) public PropertyDataRecord(PropertyDataRecord other) Parameters other PropertyDataRecord Fields ClrTypeFieldNumber Field number for the \"ClrType\" field. public const int ClrTypeFieldNumber = 3 Field Value int PropertyIndexFieldNumber Field number for the \"PropertyIndex\" field. public const int PropertyIndexFieldNumber = 1 Field Value int PropertyNameFieldNumber Field number for the \"PropertyName\" field. public const int PropertyNameFieldNumber = 2 Field Value int ValueFieldNumber Field number for the \"Value\" field. public const int ValueFieldNumber = 4 Field Value int Properties ClrType public string ClrType { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PropertyDataRecord> Parser { get; } Property Value MessageParser<PropertyDataRecord> PropertyIndex public int PropertyIndex { get; set; } Property Value int PropertyName public string PropertyName { get; set; } Property Value string Value public GenericValue Value { get; set; } Property Value GenericValue Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PropertyDataRecord Clone() Returns PropertyDataRecord A deep clone of this object. Equals(PropertyDataRecord) Indicates whether the current object is equal to another object of the same type. public bool Equals(PropertyDataRecord other) Parameters other PropertyDataRecord An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PropertyDataRecord) Merges the given message into this one. public void MergeFrom(PropertyDataRecord other) Parameters other PropertyDataRecord Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.ProtobufValueContainer-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.ProtobufValueContainer-1.html",
    "title": "Class ProtobufValueContainer<TKey> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class ProtobufValueContainer<TKey> Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll The default ValueContainer used from KEFCore public class ProtobufValueContainer<TKey> : IMessage<ProtobufValueContainer<TKey>>, IMessage, IEquatable<ProtobufValueContainer<TKey>>, IDeepCloneable<ProtobufValueContainer<TKey>>, IValueContainer<TKey> where TKey : notnull Type Parameters TKey It is the key Type passed from Entity Framework associated to the Entity data will be stored in the ProtobufValueContainer<TKey> Inheritance object ProtobufValueContainer<TKey> Implements IMessage<ProtobufValueContainer<TKey>> IMessage IEquatable<ProtobufValueContainer<TKey>> IDeepCloneable<ProtobufValueContainer<TKey>> IValueContainer<TKey> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProtobufValueContainer() Initialize a new instance of ProtobufValueContainer<TKey> public ProtobufValueContainer() Remarks It is mainly used from the JSON serializer ProtobufValueContainer(ProtobufValueContainer<TKey>) Initialize a new instance of ProtobufValueContainer<TKey> public ProtobufValueContainer(ProtobufValueContainer<TKey> clone) Parameters clone ProtobufValueContainer<TKey> Remarks It is mainly used from the JSON serializer ProtobufValueContainer(ValueContainer) Initialize a new instance of ProtobufValueContainer<TKey> public ProtobufValueContainer(ValueContainer clone) Parameters clone ValueContainer Remarks It is mainly used from the JSON serializer ProtobufValueContainer(IEntityType, object[]) Initialize a new instance of ProtobufValueContainer<TKey> public ProtobufValueContainer(IEntityType tName, object[] rData) Parameters tName IEntityType The IEntityType requesting the ProtobufValueContainer<TKey> for rData rData object[] The data, built from EFCore, to be stored in the ProtobufValueContainer<TKey> Remarks This constructor is mandatory and it is used from KEFCore to request a ProtobufValueContainer<TKey> Properties ClrType The CLR Type of IEntityType public string ClrType { get; } Property Value string Descriptor Descriptor for this message. All instances are expected to return the same descriptor, and for generated types this will be an explicitly-implemented member, returning the same value as the static property declared on the type. public MessageDescriptor Descriptor { get; } Property Value MessageDescriptor EntityName The Entity name of IEntityType public string EntityName { get; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ProtobufValueContainer<TKey> Clone() Returns ProtobufValueContainer<TKey> A deep clone of this object. Equals(ProtobufValueContainer<TKey>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ProtobufValueContainer<TKey>? other) Parameters other ProtobufValueContainer<TKey> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetData(IEntityType, ref object[]) Returns back the raw data associated to the Entity public void GetData(IEntityType tName, ref object[] array) Parameters tName IEntityType The requesting IEntityType to get the data back, can null if not available array object[] The array of object to be filled in with the data stored in the ValueContainer GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetProperties() Returns back a dictionary of properties (PropertyIndex, PropertyName) associated to the Entity public IReadOnlyDictionary<int, string> GetProperties() Returns IReadOnlyDictionary<int, string> A dictionary of properties (PropertyIndex, PropertyName) filled in with the data stored in the ValueContainer MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(ProtobufValueContainer<TKey>) Merges the given message into this one. public void MergeFrom(ProtobufValueContainer<TKey> message) Parameters message ProtobufValueContainer<TKey> The message to merge with this one. Must not be null. Remarks See the user guide for precise merge semantics. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.ValueContainer.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.ValueContainer.html",
    "title": "Class ValueContainer | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class ValueContainer Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Our address book file is just one of these. public sealed class ValueContainer : IMessage<ValueContainer>, IEquatable<ValueContainer>, IDeepCloneable<ValueContainer>, IBufferMessage, IMessage Inheritance object ValueContainer Implements IMessage<ValueContainer> IEquatable<ValueContainer> IDeepCloneable<ValueContainer> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ValueContainer() public ValueContainer() ValueContainer(ValueContainer) public ValueContainer(ValueContainer other) Parameters other ValueContainer Fields ClrTypeFieldNumber Field number for the \"ClrType\" field. public const int ClrTypeFieldNumber = 2 Field Value int DataFieldNumber Field number for the \"Data\" field. public const int DataFieldNumber = 3 Field Value int EntityNameFieldNumber Field number for the \"EntityName\" field. public const int EntityNameFieldNumber = 1 Field Value int Properties ClrType public string ClrType { get; set; } Property Value string Data public RepeatedField<PropertyDataRecord> Data { get; } Property Value RepeatedField<PropertyDataRecord> Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor EntityName public string EntityName { get; set; } Property Value string Parser public static MessageParser<ValueContainer> Parser { get; } Property Value MessageParser<ValueContainer> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ValueContainer Clone() Returns ValueContainer A deep clone of this object. Equals(ValueContainer) Indicates whether the current object is equal to another object of the same type. public bool Equals(ValueContainer other) Parameters other ValueContainer An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(ValueContainer) Merges the given message into this one. public void MergeFrom(ValueContainer other) Parameters other ValueContainer Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.ValueContainerReflection.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.ValueContainerReflection.html",
    "title": "Class ValueContainerReflection | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class ValueContainerReflection Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Assembly MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.dll Holder for reflection information generated from ValueContainer.proto public static class ValueContainerReflection Inheritance object ValueContainerReflection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descriptor File descriptor for ValueContainer.proto public static FileDescriptor Descriptor { get; } Property Value FileDescriptor"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage Classes GenericValue [START messages] Our address book file is just one of these. GenericValueReflection Holder for reflection information generated from GenericValue.proto KeyContainer Our address book file is just one of these. KeyContainerReflection Holder for reflection information generated from KeyContainer.proto PrimaryKeyType [START messages] PropertyDataRecord [START messages] ProtobufValueContainer<TKey> The default ValueContainer used from KEFCore ValueContainer Our address book file is just one of these. ValueContainerReflection Holder for reflection information generated from ValueContainer.proto Enums GenericValue.KindOneofCase Enum of possible cases for the \"kind\" oneof."
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization.Protobuf Classes ProtobufKEFCoreSerDes Protobuf base class to define extensions of SerDes<T, TJVMT>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html ProtobufKEFCoreSerDes.Key<T> Base class to define key extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html ProtobufKEFCoreSerDes.ValueContainer<T> Base class to define ValueContainer extensions of ISerDesSelector<T>, for example https://masesgroup.github.io/KNet/articles/usageSerDes.html"
  },
  "api/MASES.EntityFrameworkCore.KNet.Serialization.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Serialization.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Serialization | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Serialization Classes EntityExtractor This is an helper class to extract data information from Kafka Records stored in topics Interfaces IValueContainer<T> This is the main interface a class must implement to be a ValueContainer. More info here"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.EntityTypeChanged.ChangeKindType.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.EntityTypeChanged.ChangeKindType.html",
    "title": "Enum EntityTypeChanged.ChangeKindType | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Enum EntityTypeChanged.ChangeKindType Namespace MASES.EntityFrameworkCore.KNet.Storage Assembly MASES.EntityFrameworkCore.KNet.dll The change occurred [Flags] public enum EntityTypeChanged.ChangeKindType Fields Added = 1 The Key was added Removed = 4 The Key was removed Updated = 2 The Key was updated Upserted = Added | Updated The Key was added or updated"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.EntityTypeChanged.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.EntityTypeChanged.html",
    "title": "Struct EntityTypeChanged | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Struct EntityTypeChanged Namespace MASES.EntityFrameworkCore.KNet.Storage Assembly MASES.EntityFrameworkCore.KNet.dll The event data informing about changes on an IEntityType using the OnChangeEvent event handler public readonly struct EntityTypeChanged Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties ChangeKind The Removed if Key was deleted, otherwise Key was added or updated public EntityTypeChanged.ChangeKindType ChangeKind { get; } Property Value EntityTypeChanged.ChangeKindType EntityType The IEntityType with changes public IEntityType EntityType { get; } Property Value IEntityType Key The key removed if ChangeKind is Removed, otherwise it was added or updated public object? Key { get; } Property Value object KeyAdded Helper to understand if the Key was added public bool KeyAdded { get; } Property Value bool KeyRemoved Helper to understand if the Key was removed public bool KeyRemoved { get; } Property Value bool KeyUpdated Helper to understand if the Key was updated public bool KeyUpdated { get; } Property Value bool KeyUpserted Helper to understand if the Key was added or updated public bool KeyUpserted { get; } Property Value bool"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.EntityTypeProducer-4.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.EntityTypeProducer-4.html",
    "title": "Class EntityTypeProducer<TKey, TValueContainer, TJVMKey, TJVMValueContainer> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class EntityTypeProducer<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class EntityTypeProducer<TKey, TValueContainer, TJVMKey, TJVMValueContainer> : IEntityTypeProducer, IDisposable where TKey : notnull where TValueContainer : class, IValueContainer<TKey> Type Parameters TKey TValueContainer TJVMKey TJVMValueContainer Inheritance object EntityTypeProducer<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Implements IEntityTypeProducer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EntityTypeProducer(IEntityType, IKafkaCluster) Default initializer public EntityTypeProducer(IEntityType entityType, IKafkaCluster cluster) Parameters entityType IEntityType cluster IKafkaCluster Properties EntityType Associated IEntityType public virtual IEntityType EntityType { get; } Property Value IEntityType ValueBuffers The current ValueBuffers public IEnumerable<ValueBuffer> ValueBuffers { get; } Property Value IEnumerable<ValueBuffer> Methods Commit(IEnumerable<IKafkaRowBag>) Stores an IEnumerable<T> public IEnumerable<Future<RecordMetadata>> Commit(IEnumerable<IKafkaRowBag> records) Parameters records IEnumerable<IKafkaRowBag> The IEnumerable<T> to be stored Returns IEnumerable<Future<RecordMetadata>> Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.EntityTypeProducers.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.EntityTypeProducers.html",
    "title": "Class EntityTypeProducers | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class EntityTypeProducers Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class EntityTypeProducers Inheritance object EntityTypeProducers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Create<TKey, TValueContainer, TJVMKey, TJVMValueContainer>(IEntityType, IKafkaCluster) Allocates a new IEntityTypeProducer public static IEntityTypeProducer Create<TKey, TValueContainer, TJVMKey, TJVMValueContainer>(IEntityType entityType, IKafkaCluster cluster) where TKey : notnull where TValueContainer : class, IValueContainer<TKey> Parameters entityType IEntityType cluster IKafkaCluster Returns IEntityTypeProducer Type Parameters TKey TValueContainer TJVMKey TJVMValueContainer Dispose(IEntityTypeProducer) Dispose a previously allocated IEntityTypeProducer public static void Dispose(IEntityTypeProducer producer) Parameters producer IEntityTypeProducer"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IEntityTypeProducer.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IEntityTypeProducer.html",
    "title": "Interface IEntityTypeProducer | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IEntityTypeProducer Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IEntityTypeProducer : IDisposable Inherited Members IDisposable.Dispose() Properties EntityType Associated IEntityType IEntityType EntityType { get; } Property Value IEntityType ValueBuffers The current ValueBuffers IEnumerable<ValueBuffer> ValueBuffers { get; } Property Value IEnumerable<ValueBuffer> Methods Commit(IEnumerable<IKafkaRowBag>) Stores an IEnumerable<T> IEnumerable<Future<RecordMetadata>> Commit(IEnumerable<IKafkaRowBag> records) Parameters records IEnumerable<IKafkaRowBag> The IEnumerable<T> to be stored Returns IEnumerable<Future<RecordMetadata>>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaCluster.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaCluster.html",
    "title": "Interface IKafkaCluster | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaCluster Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaCluster : IDisposable Inherited Members IDisposable.Dispose() Properties ClusterId The Apche Kafka cluster identifier string ClusterId { get; } Property Value string Options The KafkaOptionsExtension KafkaOptionsExtension Options { get; } Property Value KafkaOptionsExtension Methods CreateTable(IEntityType) Creates a table for IEntityType on Apache Kafka cluster string CreateTable(IEntityType entityType) Parameters entityType IEntityType Returns string EnsureConnected(IModel, IDiagnosticsLogger<Update>) Execute the EnsureDatabaseConnected() bool EnsureConnected(IModel designModel, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters designModel IModel updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns bool EnsureCreated(IUpdateAdapterFactory, IModel, IDiagnosticsLogger<Update>) Execute the EnsureDatabaseCreated() bool EnsureCreated(IUpdateAdapterFactory updateAdapterFactory, IModel designModel, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters updateAdapterFactory IUpdateAdapterFactory designModel IModel updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns bool EnsureDeleted(IUpdateAdapterFactory, IModel, IDiagnosticsLogger<Update>) Execute the EnsureDatabaseDeleted() bool EnsureDeleted(IUpdateAdapterFactory updateAdapterFactory, IModel designModel, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters updateAdapterFactory IUpdateAdapterFactory designModel IModel updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns bool ExecuteTransaction(IList<IUpdateEntry>, IDiagnosticsLogger<Update>) Executes a transaction int ExecuteTransaction(IList<IUpdateEntry> entries, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters entries IList<IUpdateEntry> updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns int GetIntegerValueGenerator<TProperty>(IProperty) Gets the KafkaIntegerValueGenerator<TValue> KafkaIntegerValueGenerator<TProperty> GetIntegerValueGenerator<TProperty>(IProperty property) Parameters property IProperty Returns KafkaIntegerValueGenerator<TProperty> Type Parameters TProperty GetValueBuffers(IEntityType) Retrieve the ValueBuffer IEnumerable<ValueBuffer> GetValueBuffers(IEntityType entityType) Parameters entityType IEntityType Returns IEnumerable<ValueBuffer>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaClusterCache.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaClusterCache.html",
    "title": "Interface IKafkaClusterCache | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaClusterCache Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaClusterCache Extension Methods KafkaClusterCacheExtensions.GetCluster(IKafkaClusterCache, IDbContextOptions) Methods Dispose(IKafkaCluster) Dispose an IKafkaCluster void Dispose(IKafkaCluster cluster) Parameters cluster IKafkaCluster GetCluster(KafkaOptionsExtension) Gets an IKafkaCluster IKafkaCluster GetCluster(KafkaOptionsExtension options) Parameters options KafkaOptionsExtension Returns IKafkaCluster"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaDatabase.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaDatabase.html",
    "title": "Interface IKafkaDatabase | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaDatabase Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaDatabase : IDatabase, IDisposable Inherited Members IDatabase.SaveChanges(IList<IUpdateEntry>) IDatabase.SaveChangesAsync(IList<IUpdateEntry>, CancellationToken) IDatabase.CompileQuery<TResult>(Expression, bool) IDisposable.Dispose() Properties Cluster The referring IKafkaCluster IKafkaCluster Cluster { get; } Property Value IKafkaCluster Methods EnsureDatabaseConnected() Execute the CanConnect() bool EnsureDatabaseConnected() Returns bool EnsureDatabaseCreated() Execute the EnsureCreated() bool EnsureDatabaseCreated() Returns bool EnsureDatabaseDeleted() Execute the EnsureDeleted() bool EnsureDatabaseDeleted() Returns bool"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaRowBag.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaRowBag.html",
    "title": "Interface IKafkaRowBag | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaRowBag Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaRowBag Properties AssociatedTopicName The topic data will be stored string AssociatedTopicName { get; } Property Value string UpdateEntry The IUpdateEntry with changes IUpdateEntry UpdateEntry { get; } Property Value IUpdateEntry"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaStreamsRetriever.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaStreamsRetriever.html",
    "title": "Interface IKafkaStreamsRetriever | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaStreamsRetriever Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaStreamsRetriever : IDisposable Inherited Members IDisposable.Dispose() Methods GetValueBuffers() Retrieve an IEnumerable<T> from the IKafkaStreamsRetriever instance IEnumerable<ValueBuffer> GetValueBuffers() Returns IEnumerable<ValueBuffer> An IEnumerable<T>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaTable.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaTable.html",
    "title": "Interface IKafkaTable | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaTable Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaTable : IEntityTypeProducer, IDisposable Inherited Members IEntityTypeProducer.EntityType IEntityTypeProducer.Commit(IEnumerable<IKafkaRowBag>) IEntityTypeProducer.ValueBuffers IDisposable.Dispose() Properties Cluster The referring IKafkaCluster IKafkaCluster Cluster { get; } Property Value IKafkaCluster Rows Current rows IEnumerable<object?[]> Rows { get; } Property Value IEnumerable<object[]> Methods BumpValueGenerators(object?[]) Bumps values void BumpValueGenerators(object?[] row) Parameters row object[] Create(IUpdateEntry) Creates a new row IKafkaRowBag Create(IUpdateEntry entry) Parameters entry IUpdateEntry Returns IKafkaRowBag Delete(IUpdateEntry) Deletes a row IKafkaRowBag Delete(IUpdateEntry entry) Parameters entry IUpdateEntry Returns IKafkaRowBag GetIntegerValueGenerator<TProperty>(IProperty, IReadOnlyList<IKafkaTable>) Get an KafkaIntegerValueGenerator<TValue> KafkaIntegerValueGenerator<TProperty> GetIntegerValueGenerator<TProperty>(IProperty property, IReadOnlyList<IKafkaTable> tables) Parameters property IProperty tables IReadOnlyList<IKafkaTable> Returns KafkaIntegerValueGenerator<TProperty> Type Parameters TProperty SnapshotRows() Create snapshot IReadOnlyList<object?[]> SnapshotRows() Returns IReadOnlyList<object[]> Update(IUpdateEntry) Updates a row IKafkaRowBag Update(IUpdateEntry entry) Parameters entry IUpdateEntry Returns IKafkaRowBag"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaTableFactory.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.IKafkaTableFactory.html",
    "title": "Interface IKafkaTableFactory | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaTableFactory Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaTableFactory Methods Create(IKafkaCluster, IEntityType) Allocate a new IKafkaTable IKafkaTable Create(IKafkaCluster cluster, IEntityType entityType) Parameters cluster IKafkaCluster entityType IEntityType Returns IKafkaTable Dispose(IKafkaTable) Dispose a previously allocated IKafkaTable void Dispose(IKafkaTable table) Parameters table IKafkaTable"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KNetStreamsRetriever-4.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KNetStreamsRetriever-4.html",
    "title": "Class KNetStreamsRetriever<TKey, TValue, TJVMKey, TJVMValue> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KNetStreamsRetriever<TKey, TValue, TJVMKey, TJVMValue> Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KNetStreamsRetriever<TKey, TValue, TJVMKey, TJVMValue> : IKafkaStreamsRetriever, IDisposable where TKey : notnull where TValue : IValueContainer<TKey> Type Parameters TKey TValue TJVMKey TJVMValue Inheritance object KNetStreamsRetriever<TKey, TValue, TJVMKey, TJVMValue> Implements IKafkaStreamsRetriever IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KNetStreamsRetriever(IKafkaCluster, IEntityType) Default initializer public KNetStreamsRetriever(IKafkaCluster kafkaCluster, IEntityType entityType) Parameters kafkaCluster IKafkaCluster entityType IEntityType Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetValueBuffers() Retrieve an IEnumerable<T> from the IKafkaStreamsRetriever instance public IEnumerable<ValueBuffer> GetValueBuffers() Returns IEnumerable<ValueBuffer> An IEnumerable<T>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaCluster.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaCluster.html",
    "title": "Class KafkaCluster | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaCluster Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaCluster : IKafkaCluster, IDisposable Inheritance object KafkaCluster Implements IKafkaCluster IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaCluster(KafkaOptionsExtension, IKafkaTableFactory) Dfault initializer public KafkaCluster(KafkaOptionsExtension options, IKafkaTableFactory tableFactory) Parameters options KafkaOptionsExtension tableFactory IKafkaTableFactory Properties ClusterId The Apche Kafka cluster identifier public virtual string ClusterId { get; } Property Value string Options The KafkaOptionsExtension public virtual KafkaOptionsExtension Options { get; } Property Value KafkaOptionsExtension Methods CreateTable(IEntityType) Creates a table for IEntityType on Apache Kafka cluster public virtual string CreateTable(IEntityType entityType) Parameters entityType IEntityType Returns string Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public virtual void Dispose() EnsureConnected(IModel, IDiagnosticsLogger<Update>) Execute the EnsureDatabaseConnected() public virtual bool EnsureConnected(IModel designModel, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters designModel IModel updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns bool EnsureCreated(IUpdateAdapterFactory, IModel, IDiagnosticsLogger<Update>) Execute the EnsureDatabaseCreated() public virtual bool EnsureCreated(IUpdateAdapterFactory updateAdapterFactory, IModel designModel, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters updateAdapterFactory IUpdateAdapterFactory designModel IModel updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns bool EnsureDeleted(IUpdateAdapterFactory, IModel, IDiagnosticsLogger<Update>) Execute the EnsureDatabaseDeleted() public virtual bool EnsureDeleted(IUpdateAdapterFactory updateAdapterFactory, IModel designModel, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters updateAdapterFactory IUpdateAdapterFactory designModel IModel updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns bool ExecuteTransaction(IList<IUpdateEntry>, IDiagnosticsLogger<Update>) Executes a transaction public virtual int ExecuteTransaction(IList<IUpdateEntry> entries, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters entries IList<IUpdateEntry> updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Returns int GetIntegerValueGenerator<TProperty>(IProperty) Gets the KafkaIntegerValueGenerator<TValue> public virtual KafkaIntegerValueGenerator<TProperty> GetIntegerValueGenerator<TProperty>(IProperty property) Parameters property IProperty Returns KafkaIntegerValueGenerator<TProperty> Type Parameters TProperty GetValueBuffers(IEntityType) Retrieve the ValueBuffer public virtual IEnumerable<ValueBuffer> GetValueBuffers(IEntityType entityType) Parameters entityType IEntityType Returns IEnumerable<ValueBuffer>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaClusterCache.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaClusterCache.html",
    "title": "Class KafkaClusterCache | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaClusterCache Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaClusterCache : IKafkaClusterCache Inheritance object KafkaClusterCache Implements IKafkaClusterCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods KafkaClusterCacheExtensions.GetCluster(IKafkaClusterCache, IDbContextOptions) Constructors KafkaClusterCache(IKafkaTableFactory, IKafkaSingletonOptions?) Default initializer public KafkaClusterCache(IKafkaTableFactory tableFactory, IKafkaSingletonOptions? options) Parameters tableFactory IKafkaTableFactory options IKafkaSingletonOptions Methods Dispose(IKafkaCluster) Dispose an IKafkaCluster public virtual void Dispose(IKafkaCluster cluster) Parameters cluster IKafkaCluster GetCluster(KafkaOptionsExtension) Gets an IKafkaCluster public virtual IKafkaCluster GetCluster(KafkaOptionsExtension options) Parameters options KafkaOptionsExtension Returns IKafkaCluster"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaClusterCacheExtensions.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaClusterCacheExtensions.html",
    "title": "Class KafkaClusterCacheExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaClusterCacheExtensions Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public static class KafkaClusterCacheExtensions Inheritance object KafkaClusterCacheExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCluster(IKafkaClusterCache, IDbContextOptions) Gets the IKafkaCluster public static IKafkaCluster GetCluster(this IKafkaClusterCache storeCache, IDbContextOptions options) Parameters storeCache IKafkaClusterCache options IDbContextOptions Returns IKafkaCluster"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaDatabase.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaDatabase.html",
    "title": "Class KafkaDatabase | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDatabase Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaDatabase : Database, IKafkaDatabase, IDatabase, IDisposable Inheritance object Database KafkaDatabase Implements IKafkaDatabase IDatabase IDisposable Inherited Members Database.CompileQuery<TResult>(Expression, bool) Database.Dependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaDatabase(DatabaseDependencies, IKafkaClusterCache, IDbContextOptions, IDesignTimeModel, IUpdateAdapterFactory, IDiagnosticsLogger<Update>) Default initializer public KafkaDatabase(DatabaseDependencies dependencies, IKafkaClusterCache clusterCache, IDbContextOptions options, IDesignTimeModel designTimeModel, IUpdateAdapterFactory updateAdapterFactory, IDiagnosticsLogger<DbLoggerCategory.Update> updateLogger) Parameters dependencies DatabaseDependencies clusterCache IKafkaClusterCache options IDbContextOptions designTimeModel IDesignTimeModel updateAdapterFactory IUpdateAdapterFactory updateLogger IDiagnosticsLogger<DbLoggerCategory.Update> Properties Cluster The referring IKafkaCluster public virtual IKafkaCluster Cluster { get; } Property Value IKafkaCluster Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() EnsureDatabaseConnected() Execute the CanConnect() public virtual bool EnsureDatabaseConnected() Returns bool EnsureDatabaseCreated() Execute the EnsureCreated() public virtual bool EnsureDatabaseCreated() Returns bool EnsureDatabaseDeleted() Execute the EnsureDeleted() public virtual bool EnsureDatabaseDeleted() Returns bool SaveChanges(IList<IUpdateEntry>) Persists changes from the supplied entries to the database. public override int SaveChanges(IList<IUpdateEntry> entries) Parameters entries IList<IUpdateEntry> Entries representing the changes to be persisted. Returns int The number of state entries persisted to the database. SaveChangesAsync(IList<IUpdateEntry>, CancellationToken) Asynchronously persists changes from the supplied entries to the database. public override Task<int> SaveChangesAsync(IList<IUpdateEntry> entries, CancellationToken cancellationToken = default) Parameters entries IList<IUpdateEntry> Entries representing the changes to be persisted. cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<int> A task that represents the asynchronous save operation. The task result contains the number of entries persisted to the database. Exceptions OperationCanceledException If the CancellationToken is canceled."
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaDatabaseCreator.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaDatabaseCreator.html",
    "title": "Class KafkaDatabaseCreator | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaDatabaseCreator Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaDatabaseCreator : IDatabaseCreator Inheritance object KafkaDatabaseCreator Implements IDatabaseCreator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default initializer Constructors KafkaDatabaseCreator(IDatabase) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaDatabaseCreator(IDatabase database) Parameters database IDatabase Remarks Default initializer Properties Database The IKafkaDatabase protected virtual IKafkaDatabase Database { get; } Property Value IKafkaDatabase Methods CanConnect() Determines whether or not the database is available and can be connected to. public virtual bool CanConnect() Returns bool true if the database is available; false otherwise. Remarks Note that being able to connect to the database does not mean that it is up-to-date with regard to schema creation, etc. CanConnectAsync(CancellationToken) Determines whether or not the database is available and can be connected to. public virtual Task<bool> CanConnectAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<bool> true if the database is available; false otherwise. Remarks Note that being able to connect to the database does not mean that it is up-to-date with regard to schema creation, etc. Exceptions OperationCanceledException If the CancellationToken is canceled. EnsureCreated() Ensures that the database for the context exists. If it exists, no action is taken. If it does not exist then the database and all its schema are created. If the database exists, then no effort is made to ensure it is compatible with the model for this context. public virtual bool EnsureCreated() Returns bool true if the database is created, false if it already existed. EnsureCreatedAsync(CancellationToken) Asynchronously ensures that the database for the context exists. If it exists, no action is taken. If it does not exist then the database and all its schema are created. If the database exists, then no effort is made to ensure it is compatible with the model for this context. public virtual Task<bool> EnsureCreatedAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<bool> A task that represents the asynchronous save operation. The task result contains true if the database is created, false if it already existed. Exceptions OperationCanceledException If the CancellationToken is canceled. EnsureDeleted() Ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does exist then the database is deleted. Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by the model for this context. public virtual bool EnsureDeleted() Returns bool true if the database is deleted, false if it did not exist. EnsureDeletedAsync(CancellationToken) Asynchronously ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does exist then the database is deleted. Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by the model for this context. public virtual Task<bool> EnsureDeletedAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<bool> A task that represents the asynchronous save operation. The task result contains true if the database is deleted, false if it did not exist. Exceptions OperationCanceledException If the CancellationToken is canceled."
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaRowBag-2.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaRowBag-2.html",
    "title": "Class KafkaRowBag<TKey, TValueContainer> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaRowBag<TKey, TValueContainer> Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaRowBag<TKey, TValueContainer> : IKafkaRowBag where TKey : notnull where TValueContainer : IValueContainer<TKey> Type Parameters TKey TValueContainer Inheritance object KafkaRowBag<TKey, TValueContainer> Implements IKafkaRowBag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default initializer Constructors KafkaRowBag(IUpdateEntry, string, TKey, object?[]?) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaRowBag(IUpdateEntry entry, string topicName, TKey key, object?[]? row) Parameters entry IUpdateEntry topicName string key TKey row object[] Remarks Default initializer Properties AssociatedTopicName The topic data will be stored public string AssociatedTopicName { get; } Property Value string Key The Key public TKey Key { get; } Property Value TKey UpdateEntry The IUpdateEntry with changes public IUpdateEntry UpdateEntry { get; } Property Value IUpdateEntry ValueBuffer The ValueBuffer content public object?[]? ValueBuffer { get; } Property Value object[] Methods Value(ConstructorInfo) The Value public TValueContainer? Value(ConstructorInfo ci) Parameters ci ConstructorInfo Returns TValueContainer"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaStreamsBaseRetriever-4.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaStreamsBaseRetriever-4.html",
    "title": "Class KafkaStreamsBaseRetriever<TKey, TValue, K, V> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaStreamsBaseRetriever<TKey, TValue, K, V> Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaStreamsBaseRetriever<TKey, TValue, K, V> : IKafkaStreamsRetriever, IDisposable where TKey : notnull where TValue : IValueContainer<TKey> Type Parameters TKey TValue K V Inheritance object KafkaStreamsBaseRetriever<TKey, TValue, K, V> Implements IKafkaStreamsRetriever IDisposable Derived KafkaStreamsTableRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaStreamsBaseRetriever(IKafkaCluster, IEntityType, ISerDes<TKey, K>, ISerDes<TValue, V>, StreamsBuilder) Default initializer public KafkaStreamsBaseRetriever(IKafkaCluster kafkaCluster, IEntityType entityType, ISerDes<TKey, K> keySerdes, ISerDes<TValue, V> valueSerdes, StreamsBuilder builder) Parameters kafkaCluster IKafkaCluster entityType IEntityType keySerdes ISerDes<TKey, K> valueSerdes ISerDes<TValue, V> builder StreamsBuilder Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetValueBuffers() Retrieve an IEnumerable<T> from the IKafkaStreamsRetriever instance public IEnumerable<ValueBuffer> GetValueBuffers() Returns IEnumerable<ValueBuffer> An IEnumerable<T>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaStreamsTableRetriever-4.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaStreamsTableRetriever-4.html",
    "title": "Class KafkaStreamsTableRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaStreamsTableRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public sealed class KafkaStreamsTableRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> : KafkaStreamsBaseRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer>, IKafkaStreamsRetriever, IDisposable where TKey : notnull where TValueContainer : IValueContainer<TKey> Type Parameters TKey TValueContainer TJVMKey TJVMValueContainer Inheritance object KafkaStreamsBaseRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> KafkaStreamsTableRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Implements IKafkaStreamsRetriever IDisposable Inherited Members KafkaStreamsBaseRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer>.Dispose() KafkaStreamsBaseRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer>.GetValueBuffers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Remarks Default initializer Constructors KafkaStreamsTableRetriever(IKafkaCluster, IEntityType, ISerDes<TKey, TJVMKey>, ISerDes<TValueContainer, TJVMValueContainer>) Initializer public KafkaStreamsTableRetriever(IKafkaCluster kafkaCluster, IEntityType entityType, ISerDes<TKey, TJVMKey> keySerdes, ISerDes<TValueContainer, TJVMValueContainer> valueSerdes) Parameters kafkaCluster IKafkaCluster entityType IEntityType keySerdes ISerDes<TKey, TJVMKey> valueSerdes ISerDes<TValueContainer, TJVMValueContainer> KafkaStreamsTableRetriever(IKafkaCluster, IEntityType, ISerDes<TKey, TJVMKey>, ISerDes<TValueContainer, TJVMValueContainer>, StreamsBuilder) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaStreamsTableRetriever(IKafkaCluster kafkaCluster, IEntityType entityType, ISerDes<TKey, TJVMKey> keySerdes, ISerDes<TValueContainer, TJVMValueContainer> valueSerdes, StreamsBuilder builder) Parameters kafkaCluster IKafkaCluster entityType IEntityType keySerdes ISerDes<TKey, TJVMKey> valueSerdes ISerDes<TValueContainer, TJVMValueContainer> builder StreamsBuilder Remarks Default initializer"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTable-4.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTable-4.html",
    "title": "Class KafkaTable<TKey, TValueContainer, TJVMKey, TJVMValueContainer> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTable<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTable<TKey, TValueContainer, TJVMKey, TJVMValueContainer> : IKafkaTable, IEntityTypeProducer, IDisposable where TKey : notnull where TValueContainer : class, IValueContainer<TKey> Type Parameters TKey TValueContainer TJVMKey TJVMValueContainer Inheritance object KafkaTable<TKey, TValueContainer, TJVMKey, TJVMValueContainer> Implements IKafkaTable IEntityTypeProducer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaTable(IKafkaCluster, IEntityType, bool) Default initializer public KafkaTable(IKafkaCluster cluster, IEntityType entityType, bool sensitiveLoggingEnabled) Parameters cluster IKafkaCluster entityType IEntityType sensitiveLoggingEnabled bool Properties Cluster The referring IKafkaCluster public virtual IKafkaCluster Cluster { get; } Property Value IKafkaCluster EntityType Associated IEntityType public virtual IEntityType EntityType { get; } Property Value IEntityType Rows Current rows public virtual IEnumerable<object?[]> Rows { get; } Property Value IEnumerable<object[]> ValueBuffers The current ValueBuffers public virtual IEnumerable<ValueBuffer> ValueBuffers { get; } Property Value IEnumerable<ValueBuffer> Methods BumpValueGenerators(object?[]) Bumps values public virtual void BumpValueGenerators(object?[] row) Parameters row object[] Commit(IEnumerable<IKafkaRowBag>) Stores an IEnumerable<T> public virtual IEnumerable<Future<RecordMetadata>> Commit(IEnumerable<IKafkaRowBag> records) Parameters records IEnumerable<IKafkaRowBag> The IEnumerable<T> to be stored Returns IEnumerable<Future<RecordMetadata>> Create(IUpdateEntry) Creates a new row public virtual IKafkaRowBag Create(IUpdateEntry entry) Parameters entry IUpdateEntry Returns IKafkaRowBag Delete(IUpdateEntry) Deletes a row public virtual IKafkaRowBag Delete(IUpdateEntry entry) Parameters entry IUpdateEntry Returns IKafkaRowBag Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public virtual void Dispose() GetIntegerValueGenerator<TProperty>(IProperty, IReadOnlyList<IKafkaTable>) Get an KafkaIntegerValueGenerator<TValue> public virtual KafkaIntegerValueGenerator<TProperty> GetIntegerValueGenerator<TProperty>(IProperty property, IReadOnlyList<IKafkaTable> tables) Parameters property IProperty tables IReadOnlyList<IKafkaTable> Returns KafkaIntegerValueGenerator<TProperty> Type Parameters TProperty SnapshotRows() Create snapshot public virtual IReadOnlyList<object?[]> SnapshotRows() Returns IReadOnlyList<object[]> ThrowUpdateConcurrencyException(IUpdateEntry, Dictionary<IProperty, object?>) Throws an exception indicating that concurrency conflicts were detected. protected virtual void ThrowUpdateConcurrencyException(IUpdateEntry entry, Dictionary<IProperty, object?> concurrencyConflicts) Parameters entry IUpdateEntry The update entry which resulted in the conflict(s). concurrencyConflicts Dictionary<IProperty, object> The conflicting properties with their associated database values. Update(IUpdateEntry) Updates a row public virtual IKafkaRowBag Update(IUpdateEntry entry) Parameters entry IUpdateEntry Returns IKafkaRowBag"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTableFactory.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTableFactory.html",
    "title": "Class KafkaTableFactory | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTableFactory Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTableFactory : IKafkaTableFactory Inheritance object KafkaTableFactory Implements IKafkaTableFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaTableFactory(ILoggingOptions, IKafkaSingletonOptions) Default initializer public KafkaTableFactory(ILoggingOptions loggingOptions, IKafkaSingletonOptions options) Parameters loggingOptions ILoggingOptions options IKafkaSingletonOptions Methods Create(IKafkaCluster, IEntityType) Allocate a new IKafkaTable public virtual IKafkaTable Create(IKafkaCluster cluster, IEntityType entityType) Parameters cluster IKafkaCluster entityType IEntityType Returns IKafkaTable Dispose(IKafkaTable) Dispose a previously allocated IKafkaTable public void Dispose(IKafkaTable table) Parameters table IKafkaTable"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTransaction.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTransaction.html",
    "title": "Class KafkaTransaction | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTransaction Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTransaction : IDbContextTransaction, IDisposable, IAsyncDisposable Inheritance object KafkaTransaction Implements IDbContextTransaction IDisposable IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TransactionId Gets the transaction identifier. public virtual Guid TransactionId { get; } Property Value Guid Remarks See Transactions in EF Core for more information and examples. Methods Commit() Commits all changes made to the database in the current transaction. public virtual void Commit() Remarks See Transactions in EF Core for more information and examples. CommitAsync(CancellationToken) Commits all changes made to the database in the current transaction asynchronously. public virtual Task CommitAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task A Task representing the asynchronous operation. Remarks See Transactions in EF Core for more information and examples. Exceptions OperationCanceledException If the CancellationToken is canceled. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public virtual void Dispose() DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public virtual ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. Rollback() Discards all changes made to the database in the current transaction. public virtual void Rollback() Remarks See Transactions in EF Core for more information and examples. RollbackAsync(CancellationToken) Discards all changes made to the database in the current transaction asynchronously. public virtual Task RollbackAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task A Task representing the asynchronous operation. Remarks See Transactions in EF Core for more information and examples. Exceptions OperationCanceledException If the CancellationToken is canceled."
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTransactionManager.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTransactionManager.html",
    "title": "Class KafkaTransactionManager | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTransactionManager Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTransactionManager : IDbContextTransactionManager, IResettableService, ITransactionEnlistmentManager Inheritance object KafkaTransactionManager Implements IDbContextTransactionManager IResettableService ITransactionEnlistmentManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaTransactionManager(IDiagnosticsLogger<Transaction>) Default initializer public KafkaTransactionManager(IDiagnosticsLogger<DbLoggerCategory.Database.Transaction> logger) Parameters logger IDiagnosticsLogger<DbLoggerCategory.Database.Transaction> Properties CurrentTransaction Gets the current transaction. public virtual IDbContextTransaction? CurrentTransaction { get; } Property Value IDbContextTransaction EnlistedTransaction The currently enlisted transaction. public virtual Transaction? EnlistedTransaction { get; } Property Value Transaction Methods BeginTransaction() Begins a new transaction. public virtual IDbContextTransaction BeginTransaction() Returns IDbContextTransaction The newly created transaction. BeginTransactionAsync(CancellationToken) Asynchronously begins a new transaction. public virtual Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<IDbContextTransaction> A task that represents the asynchronous operation. The task result contains the newly created transaction. Exceptions OperationCanceledException If the CancellationToken is canceled. CommitTransaction() Commits all changes made to the database in the current transaction. public virtual void CommitTransaction() CommitTransactionAsync(CancellationToken) Commits all changes made to the database in the current transaction. public virtual Task CommitTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException If the CancellationToken is canceled. EnlistTransaction(Transaction?) Specifies an existing Transaction to be used for database operations. public virtual void EnlistTransaction(Transaction? transaction) Parameters transaction Transaction The transaction to be used. ResetState() Resets the service so that it can be used from the pool. public virtual void ResetState() ResetStateAsync(CancellationToken) Resets the service so that it can be used from the pool. public virtual Task ResetStateAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException If the CancellationToken is canceled. RollbackTransaction() Discards all changes made to the database in the current transaction. public virtual void RollbackTransaction() RollbackTransactionAsync(CancellationToken) Discards all changes made to the database in the current transaction. public virtual Task RollbackTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException If the CancellationToken is canceled."
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTypeMapping.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTypeMapping.html",
    "title": "Class KafkaTypeMapping | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTypeMapping Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTypeMapping : CoreTypeMapping Inheritance object CoreTypeMapping KafkaTypeMapping Inherited Members CoreTypeMapping.Clone(in TypeMappingInfo?, Type, ValueConverter, ValueComparer, ValueComparer, ValueComparer, CoreTypeMapping, JsonValueReaderWriter) CoreTypeMapping.GenerateCodeLiteral(object) CoreTypeMapping.Parameters CoreTypeMapping.ClrType CoreTypeMapping.Converter CoreTypeMapping.ValueGeneratorFactory CoreTypeMapping.Comparer CoreTypeMapping.KeyComparer CoreTypeMapping.ProviderValueComparer CoreTypeMapping.ElementTypeMapping CoreTypeMapping.JsonValueReaderWriter object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaTypeMapping(Type, ValueComparer?, ValueComparer?) Default initializer public KafkaTypeMapping(Type clrType, ValueComparer? comparer = null, ValueComparer? keyComparer = null) Parameters clrType Type comparer ValueComparer keyComparer ValueComparer Methods Clone(CoreTypeMappingParameters) Creates a copy of this mapping. protected override CoreTypeMapping Clone(CoreTypeMapping.CoreTypeMappingParameters parameters) Parameters parameters CoreTypeMapping.CoreTypeMappingParameters The parameters for this mapping. Returns CoreTypeMapping The newly created mapping. WithComposedConverter(ValueConverter?, ValueComparer?, ValueComparer?, CoreTypeMapping?, JsonValueReaderWriter?) Returns a new copy of this type mapping with the given ValueConverter added. public override CoreTypeMapping WithComposedConverter(ValueConverter? converter, ValueComparer? comparer = null, ValueComparer? keyComparer = null, CoreTypeMapping? elementMapping = null, JsonValueReaderWriter? jsonValueReaderWriter = null) Parameters converter ValueConverter The converter to use. comparer ValueComparer The comparer to use, or null for to keep the default. keyComparer ValueComparer The comparer to use when the value is a key, or null for to keep the default. elementMapping CoreTypeMapping The element mapping, or null for non-collection mappings. jsonValueReaderWriter JsonValueReaderWriter The JSON reader/writer, or null to leave unchanged. Returns CoreTypeMapping A new type mapping"
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTypeMappingSource.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.KafkaTypeMappingSource.html",
    "title": "Class KafkaTypeMappingSource | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaTypeMappingSource Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaTypeMappingSource : TypeMappingSource, ITypeMappingSource Inheritance object TypeMappingSourceBase TypeMappingSource KafkaTypeMappingSource Implements ITypeMappingSource Inherited Members TypeMappingSource.FindCollectionMapping(TypeMappingInfo, Type, Type, CoreTypeMapping) TypeMappingSource.FindMapping(IProperty) TypeMappingSource.FindMapping(IElementType) TypeMappingSource.FindMapping(Type) TypeMappingSource.FindMapping(Type, IModel, CoreTypeMapping) TypeMappingSource.FindMapping(MemberInfo) TypeMappingSourceBase.ValidateMapping(CoreTypeMapping, IProperty) TypeMappingSourceBase.TryFindJsonCollectionMapping(TypeMappingInfo, Type, Type, ref CoreTypeMapping, out ValueComparer, out JsonValueReaderWriter) TypeMappingSourceBase.Dependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default initializer Constructors KafkaTypeMappingSource(TypeMappingSourceDependencies) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaTypeMappingSource(TypeMappingSourceDependencies dependencies) Parameters dependencies TypeMappingSourceDependencies Remarks Default initializer Methods FindMapping(in TypeMappingInfo) Overridden by database providers to find a type mapping for the given info. protected override CoreTypeMapping? FindMapping(in TypeMappingInfo mappingInfo) Parameters mappingInfo TypeMappingInfo The mapping info to use to create the mapping. Returns CoreTypeMapping The type mapping, or null if none could be found. Remarks The mapping info is populated with as much information about the required type mapping as is available. Use all the information necessary to create the best mapping. Return null if no mapping is available."
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Storage.Internal Classes EntityTypeProducer<TKey, TValueContainer, TJVMKey, TJVMValueContainer> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. EntityTypeProducers This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KNetStreamsRetriever<TKey, TValue, TJVMKey, TJVMValue> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaCluster This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaClusterCache This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaClusterCacheExtensions This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaDatabase This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaDatabaseCreator This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaRowBag<TKey, TValueContainer> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaStreamsBaseRetriever<TKey, TValue, K, V> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaStreamsTableRetriever<TKey, TValueContainer, TJVMKey, TJVMValueContainer> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTableFactory This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTable<TKey, TValueContainer, TJVMKey, TJVMValueContainer> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTransaction This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTransactionManager This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTypeMapping This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaTypeMappingSource This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. Interfaces IEntityTypeProducer This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaCluster This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaClusterCache This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaDatabase This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaRowBag This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaStreamsRetriever This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaTable This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. IKafkaTableFactory This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.Storage.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Storage.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Storage | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Storage Structs EntityTypeChanged The event data informing about changes on an IEntityType using the OnChangeEvent event handler Enums EntityTypeChanged.ChangeKindType The change occurred"
  },
  "api/MASES.EntityFrameworkCore.KNet.Templates.Blog.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Templates.Blog.html",
    "title": "Class Blog | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class Blog Namespace MASES.EntityFrameworkCore.KNet.Templates Assembly kefcoreApp.dll public class Blog Inheritance object Blog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties BlogId public int BlogId { get; set; } Property Value int Posts public List<Post> Posts { get; set; } Property Value List<Post> Rating public int Rating { get; set; } Property Value int Url public string Url { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/MASES.EntityFrameworkCore.KNet.Templates.BloggingContext.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Templates.BloggingContext.html",
    "title": "Class BloggingContext | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class BloggingContext Namespace MASES.EntityFrameworkCore.KNet.Templates Assembly kefcoreApp.dll public class BloggingContext : KafkaDbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext KafkaDbContext BloggingContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members KafkaDbContext.IsPerformanceVersion KafkaDbContext.EnableKEFCoreTracing KafkaDbContext.DefaultConsumerConfig KafkaDbContext.DefaultProducerConfig KafkaDbContext.DefaultStreamsConfig KafkaDbContext.DefaultTopicConfig KafkaDbContext.KeySerDesSelectorType KafkaDbContext.ValueSerDesSelectorType KafkaDbContext.ValueContainerType KafkaDbContext.UseNameMatching KafkaDbContext.BootstrapServers KafkaDbContext.ApplicationId KafkaDbContext.DatabaseName KafkaDbContext.DefaultNumPartitions KafkaDbContext.DefaultReplicationFactor KafkaDbContext.DefaultConsumerInstances KafkaDbContext.UsePersistentStorage KafkaDbContext.UseEnumeratorWithPrefetch KafkaDbContext.UseByteBufferDataTransfer KafkaDbContext.UseDeletePolicyForTopic KafkaDbContext.UseCompactedReplicator KafkaDbContext.UseKNetStreams KafkaDbContext.ConsumerConfig KafkaDbContext.ProducerConfig KafkaDbContext.StreamsConfig KafkaDbContext.TopicConfig KafkaDbContext.OnChangeEvent KafkaDbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Blogs public DbSet<Blog> Blogs { get; set; } Property Value DbSet<Blog> Posts public DbSet<Post> Posts { get; set; } Property Value DbSet<Post>"
  },
  "api/MASES.EntityFrameworkCore.KNet.Templates.Post.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Templates.Post.html",
    "title": "Class Post | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class Post Namespace MASES.EntityFrameworkCore.KNet.Templates Assembly kefcoreApp.dll public class Post Inheritance object Post Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Blog public Blog Blog { get; set; } Property Value Blog BlogId public int BlogId { get; set; } Property Value int Content public string Content { get; set; } Property Value string PostId public int PostId { get; set; } Property Value int Title public string Title { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/MASES.EntityFrameworkCore.KNet.Templates.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.Templates.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.Templates | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.Templates Classes Blog BloggingContext Post"
  },
  "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.IKafkaIntegerValueGenerator.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.IKafkaIntegerValueGenerator.html",
    "title": "Interface IKafkaIntegerValueGenerator | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Interface IKafkaIntegerValueGenerator Namespace MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public interface IKafkaIntegerValueGenerator Methods Bump(object?[]) Execute a bump on data void Bump(object?[] row) Parameters row object[]"
  },
  "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.KafkaIntegerValueGenerator-1.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.KafkaIntegerValueGenerator-1.html",
    "title": "Class KafkaIntegerValueGenerator<TValue> | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaIntegerValueGenerator<TValue> Namespace MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaIntegerValueGenerator<TValue> : ValueGenerator<TValue>, IKafkaIntegerValueGenerator Type Parameters TValue Inheritance object ValueGenerator ValueGenerator<TValue> KafkaIntegerValueGenerator<TValue> Implements IKafkaIntegerValueGenerator Inherited Members ValueGenerator<TValue>.NextAsync(EntityEntry, CancellationToken) ValueGenerator<TValue>.NextValue(EntityEntry) ValueGenerator<TValue>.NextValueAsync(EntityEntry, CancellationToken) ValueGenerator.WithConverter(ValueConverter) ValueGenerator.GeneratesStableValues object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KafkaIntegerValueGenerator(int) Default initializer public KafkaIntegerValueGenerator(int propertyIndex) Parameters propertyIndex int Properties GeneratesTemporaryValues Gets a value indicating whether the values generated are temporary (i.e they should be replaced by database generated values when the entity is saved) or are permanent (i.e. the generated values should be saved to the database). public override bool GeneratesTemporaryValues { get; } Property Value bool Remarks An example of temporary value generation is generating negative numbers for an integer primary key that are then replaced by positive numbers generated by the database when the entity is saved. An example of permanent value generation are client-generated values for a Guid primary key which are saved to the database. See EF Core value generation for more information and examples. Methods Bump(object?[]) Execute a bump on data public virtual void Bump(object?[] row) Parameters row object[] Next(EntityEntry) Template method to be overridden by implementations to perform value generation. public override TValue Next(EntityEntry entry) Parameters entry EntityEntry The change tracking entry of the entity for which the value is being generated. Returns TValue The generated value. Remarks See EF Core value generation for more information and examples."
  },
  "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.KafkaValueGeneratorSelector.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.KafkaValueGeneratorSelector.html",
    "title": "Class KafkaValueGeneratorSelector | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaValueGeneratorSelector Namespace MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal Assembly MASES.EntityFrameworkCore.KNet.dll This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public class KafkaValueGeneratorSelector : ValueGeneratorSelector, IValueGeneratorSelector Inheritance object ValueGeneratorSelector KafkaValueGeneratorSelector Implements IValueGeneratorSelector Inherited Members ValueGeneratorSelector.Create(IProperty, ITypeBase) ValueGeneratorSelector.FindForType(IProperty, ITypeBase, Type) ValueGeneratorSelector.Cache ValueGeneratorSelector.Dependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default initializer Constructors KafkaValueGeneratorSelector(ValueGeneratorSelectorDependencies, IKafkaDatabase) This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. public KafkaValueGeneratorSelector(ValueGeneratorSelectorDependencies dependencies, IKafkaDatabase kafkaDatabase) Parameters dependencies ValueGeneratorSelectorDependencies kafkaDatabase IKafkaDatabase Remarks Default initializer Methods Select(IProperty, ITypeBase) Selects the appropriate value generator for a given property. public override ValueGenerator Select(IProperty property, ITypeBase typeBase) Parameters property IProperty The property to get the value generator for. typeBase ITypeBase The entity type that the value generator will be used for. When called on inherited properties on derived entity types, this entity type may be different from the declared entity type on property Returns ValueGenerator The value generator to be used."
  },
  "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet.ValueGeneration.Internal Classes KafkaIntegerValueGenerator<TValue> This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. KafkaValueGeneratorSelector This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release. Interfaces IKafkaIntegerValueGenerator This is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release. You should only use it directly in your code with extreme caution and knowing that doing so can result in application failures when updating to a new Entity Framework Core release."
  },
  "api/MASES.EntityFrameworkCore.KNet.html": {
    "href": "api/MASES.EntityFrameworkCore.KNet.html",
    "title": "Namespace MASES.EntityFrameworkCore.KNet | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace MASES.EntityFrameworkCore.KNet Classes KEFCore This is the primary class shall be used to initialize the environment to use Entity Framework Core for Apache Kafka KafkaDatabaseFacadeExtensions Kafka specific extension methods for Database. KafkaDbContextOptionsExtensions Kafka specific extension methods for DbContextOptionsBuilder. KafkaEntityTypeBuilderExtensions Extension methods for EntityTypeBuilder for the Kafka provider. KafkaEntityTypeExtensions Extension methods for IReadOnlyEntityType for the Kafka provider."
  },
  "api/Microsoft.Extensions.DependencyInjection.KafkaServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.KafkaServiceCollectionExtensions.html",
    "title": "Class KafkaServiceCollectionExtensions | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Class KafkaServiceCollectionExtensions Namespace Microsoft.Extensions.DependencyInjection Assembly MASES.EntityFrameworkCore.KNet.dll Kafka specific extension methods for IServiceCollection. public static class KafkaServiceCollectionExtensions Inheritance object KafkaServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "Namespace Microsoft.Extensions.DependencyInjection Classes KafkaServiceCollectionExtensions Kafka specific extension methods for IServiceCollection."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "APIs of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": ".NET API documentation of Entity Framework Core provider for Apache Kafka Open left menu to browse API"
  },
  "articles/currentstate.html": {
    "href": "articles/currentstate.html",
    "title": "Current development state of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: development state The latest release implementes these features: [x] A working provider based on Apache Kafka™ Streams [x] The provider can use KNetCompactedReplicator [x] A base package for serialization based on .NET Json serializers [x] An external package for serialization based on Apache Avro serializers [x] A package with some templates"
  },
  "articles/externalapplication.html": {
    "href": "articles/externalapplication.html",
    "title": "External applications of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: external application Entity Framework Core provider for Apache Kafka™ shall convert the entities used within the model in something viable from the backend. Continuing from the concepts introduced in serialization, an external application can use the data stored in the topics in a way it decides: Entity Framework Core provider for Apache Kafka™ gives some helpers to get back the CLR Entity objects stored in the topics. IMPORTANT NOTE: till the first major version, all releases shall be considered not stable: this means the API public, or internal, can change without notice. Basic concepts An external application may want to be informed about data changes in the topics and want to analyze the Entity was previously managed from the EFCore application. Within the core packages there is the EntityExtractor class which contains, till now, few methods and one accepts a raw ConsumerRecord<byte[], byte[]> from Apache Kafka™. The method reads the info stored in the ConsumerRecord<byte[], byte[]> and returns the Entity object with the filled properties. It is possible to build a new application which subscribe to a topic created from the EFCore application. The following is a possible snippet of the logic can be applied: const string topicFrom = \"TheKEFCoreTopicWithData\"; KafkaConsumer<byte[], byte[]> consumer = new KafkaConsumer<byte[], byte[]>(); consumer.Subscribe(topicFrom); // the callback was omitted for simplicity var records = consumer.Poll(100); foreach(var record in records) { var entity = EntityExtractor.FromRecord(record); Console.WriteLine(entity); } A full working example can be found under test folder of the repository. Mandatory information The method EntityExtractor.FromTopic, and then EntityExtractor.FromRecord, use the reflection to get back the types referring to serializer and types of the model which were stored in the topics. To work properly it needs, to be loaded in memory, at least: The assembly containing the serializer: if the serializer are the default this information is intrisecally available The model types (i.e. the types used to build the DbContext or KafkaDbContext) Possible usages For possible usages of Entity Framework Core provider for Apache Kafka™, and this feature, see use cases"
  },
  "articles/gettingstarted.html": {
    "href": "articles/gettingstarted.html",
    "title": "Getting started with KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: Getting started To use Entity Framework Core provider for Apache Kafka™ you must have at least: an installed JRE/JDK (11+) an accessible Apache Kafka™ broker (a full cluster or a local Dockerized version) IMPORTANT NOTE: till the first major version, all releases shall be considered not stable: this means the API public, or internal, can change without notice. First project setup Create a new simple empty project: dotnet new console Entity Framework Core provider for Apache Kafka™ is available on NuGet. Execute the following command to add the package to the newly created project: dotnet add package MASES.EntityFrameworkCore.KNet Edit Program.cs and replace the content with the following code: using MASES.EntityFrameworkCore.KNet.Infrastructure; using System.Collections.Generic; namespace MASES.EntityFrameworkCore.KNet.Test { class Program { static void Main(string[] args) { KEFCore.CreateGlobalInstance(); using var context = new BloggingContext() { BootstrapServers = \"MY-KAFKA-BROKER:9092\", ApplicationId = \"MyAppId\", DbName = \"MyDBName\", }; // add standard EFCore queries } } public class BloggingContext : KafkaDbContext { } public class Blog { public int BlogId { get; set; } public string Url { get; set; } public int Rating { get; set; } public List<Post> Posts { get; set; } } public class Post { public int PostId { get; set; } public string Title { get; set; } public string Content { get; set; } public int BlogId { get; set; } public Blog Blog { get; set; } } } The previous code follows the example of https://learn.microsoft.com/en-us/ef/core/. See KEFCore usage and KafkaDbContext to find more information. Build the project dotnet build Environment initialization KEFCore shall initialize the environment before any operation can be done. The initialization is done executing the following command at first stages of your application: KEFCore.CreateGlobalInstance(); The previous command identify the JVM™ and start it, loads the needed libraries and setup the environment. Browsing the repository within the test folder there are some examples. KEFCore accepts many command-line switches to customize its behavior, the full list is available at Command line switch of KNet. JVM™ identification One of the most important command-line switch is JVMPath and it is available in JCOBridge switches: it can be used to set-up the location of the JVM™ library if JCOBridge is not able to identify a suitable JRE/JDK installation. If a developer is using KEFCore within its own product it is possible to override the JVMPath property with a snippet like the following one: class MyKEFCore : KEFCore { public override string JVMPath { get { string pathToJVM = \"Set here the path to JVM library or use your own search method\"; return pathToJVM; } } } IMPORTANT NOTE: pathToJVM shall be escaped string pathToJVM = \"C:\\\\Program Files\\\\Eclipse Adoptium\\\\jdk-11.0.18.10-hotspot\\\\bin\\\\server\\\\jvm.dll\"; string pathToJVM = @\"C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.18.10-hotspot\\bin\\server\\jvm.dll\"; Special initialization conditions JCOBridge try to identify a suitable JRE/JDK installation within the system using some standard mechanism of JRE/JDK: JAVA_HOME environment variable or Windows registry if available. However it is possible, on Windows operating systems, that the library raises an InvalidOperationException: Missing Java Key in registry: Couldn't find Java installed on the machine. This means that neither JAVA_HOME nor Windows registry contains information about a default installed JRE/JDK: some vendors may not setup them. If the developer/user encounter this condition can do the following steps: On a command prompt execute set | findstr JAVA_HOME and verify the result; If something was reported maybe the JAVA_HOME environment variable is not set at system level, but at a different level like user level which is not visible from the KEFCore process that raised the exception; Try to set JAVA_HOME at system level e.g. JAVA_HOME=C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.18.10-hotspot\\; Try to set JCOBRIDGE_JVMPath at system level e.g. JCOBRIDGE_JVMPath=C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.18.10-hotspot\\. IMPORTANT NOTES: One of JCOBRIDGE_JVMPath or JAVA_HOME environment variables or Windows registry (on Windows OSes) shall be available JCOBRIDGE_JVMPath environment variable takes precedence over JAVA_HOME and Windows registry: you can set JCOBRIDGE_JVMPath to C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.18.10-hotspot\\bin\\server\\jvm.dll and avoid to override JVMPath in your code After first initialization steps, JVMPath takes precedence over JCOBRIDGE_JVMPath/JAVA_HOME environment variables or Windows registry"
  },
  "articles/howitworks.html": {
    "href": "articles/howitworks.html",
    "title": "How KEFCore works | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: how it works Entity Framework Core provider for Apache Kafka™ can be used in some operative conditions. It is important to start with a simple description on how it works. In the following chapters sometime it is used the term back-end and sometime Apache Kafka™ cluster: they shall be considered the same thing int the Entity Framework Core provider for Apache Kafka™ context. Basic concepts Here below an image from Wikipedia describing simple concepts: Simplifying there are three active elements: Topics: storage of the records (the data), they are hosted in the Apache Kafka™ cluster and can be partitioned Producers: entities producing records to be stored in one or more topics Consumers: entities receiving records from the topics When a producer send a record to Apache Kafka™ cluster, the record will be sent to the consumers subscribed to the topics the producer is producing on: this is a classic pub-sub pattern. Apache Kafka™ cluster adds the ability to store this information within the topic the producer has produced on, this feature guarantee that: an application consuming from the Apache Kafka™ cluster can hear only latest changes or position to a specific position in the past and start from that point to receive data the standard way to consume from Apache Kafka™ cluster is to start from the end (latest available record) or start from the beginning (first available record) How Entity Framework Core provider for Apache Kafka™ works An application based on Entity Framework Core provider for Apache Kafka™ is both a producer and a consumer at the same time: when an entity is created/updated/deleted (e.g. calling SaveChanges) the provider will invoke the right producer to store a new record in the right topic of the Apache Kafka™ cluster then the consumer subscribed will be informed about this new record and will store it back: this seems not useful till now, but it will be more clear later Apache Kafka™ cluster becams a: a central routing for data changes in Entity Framework Core based applications. a reliable storage because, when the application restarts, the data stored in the topics will be read back from the consumers so the state will be aligned to the latest available. Apache Kafka™ comes with topic compaction feature, thanks to it the point 2 is optimized. Entity Framework Core provider for Apache Kafka™ is interested to store only the latest state of the entity and not the changes. Using the topic compaction, the combination of producer, consumer and Apache Kafka™ cluster can apply the CRUD operations on data: Create: a producer stores a new record with a unique key Read: a consumer retrieves records from topic Update: a producer storing a new record with a previously stored unique key will discard the old records Delete: a producer storing a new record with a previously stored unique key, and value set to null, will delete all records with that unique key All CRUD operations are helped, behind the scene, from KNetCompactedReplicator or KNetProducer/Apache Kafka™ Streams. First-level cache KNetCompactedReplicator or Apache Kafka™ Streams act as first-level cache of Entity Framework Core: data coming from the Apache Kafka™ cluster updates their content while the system is running. The behavior is intrinsic and does not need any extra call to the back-end. Data storage Apache Kafka™ stores the information using records. It is important to convert entities in something usable from Apache Kafka™. The conversion is done using serializers that converts the Entities (data in the model) into Apache Kafka™ records and viceversa: see serialization chapter for more info. Entity Framework Core provider for Apache Kafka™ compared to other providers In the previous chapter was described how Entity Framework Core provider for Apache Kafka™ permits to reproduce the CRUD operations. Starting from the model defined in the code, the data are stored in the topics and each topic can be seen as a table of a database filled in with the same data. From the point of view of an application, the use of Entity Framework Core provider for Apache Kafka™ is similar to the use of the InMemory provider. A note on migrations The current version of Entity Framework Core provider for Apache Kafka™ does not support migrations explicitly. Entity Framework Core provider for Apache Kafka™ features not available in other providers Here a list of features Entity Framework Core provider for Apache Kafka™ gives to its user and useful in some use cases. The features below are strictly correlated with the consumers receiving back the record from Apache Kafka™ cluster described above. Distributed cache In the previous chapter was stated that consumers align the application data to the last topics information. The alignment is managed from KNetCompactedReplicator and/or Apache Kafka™ Streams, everything is driven from the Apache Kafka™ back-end. Considering two, or more, applications, sharing the same model and configuration, they always align to the latest state of the topics involved. This implies that, virtually, there is a distributed cache between the applications and the Apache Kafka™ back-end: Apache Kafka™ stores physically the cache (shared state) within the topics and routes changes to the subscribed applications Applications use latest cache version (local state) received from Apache Kafka™ back-end If an application restarts it will be able to retrieve latest data (latest cache) and aligns to the shared state. Events Generally, an application based on Entity Framework Core, executes queries to the back-end to store, or retrieve, information on demand. The alignment (record consumed) can be considered a change event: so any change in the backend produces an event used in different mode: Mainly these change events are used from KNetCompactedReplicator and/or Apache Kafka™ Streams to align the local state; Moreover Entity Framework Core provider for Apache Kafka™ can inform, using callbacks and at zero cost, the registered application about these events. Then the application can use the reported events in many modes: execute a query write something to disk execute a REST call and so on IMPORTANT NOTE: the events are raised from external threads and this can lead to concurrent exceptions if the KafkaDbContext is used to retrieve information. Applications not based on Entity Framework Core Till now was spoken about applications based on Entity Framework Core, however this provider can be used to feed applications not based on Entity Framework Core. Entity Framework Core provider for Apache Kafka™ comes with ready-made helping classes to subscribe to any topic of the Apache Kafka™ cluster to retrieve the data stored from an application based on Entity Framework Core. Any application can use this feature to: read latest data stored in the topics from the application based on Entity Framework Core attach to the topics involved from the application based on Entity Framework Core and receive change events upon something was produced The ready-made helping classes upon a record is received, deserialize it and returns back the filled Entity."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Entity Framework Core provider for Apache Kafka™ | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: Entity Framework Core provider for Apache Kafka™ KEFCore is the Entity Framework Core provider for Apache Kafka™. Based on KNet it allows to use Apache Kafka™ as a distributed database and more. Libraries and Tools Core Templates Json Serialization Avro Serialization Protobuf Serialization IMPORTANT NOTE: till the first major version, all releases shall be considered not stable: this means the API public, or internal, can change without notice. Pipelines Project disclaimer KEFCore is a project, curated by MASES Group, can be supported by the open-source community. Its primary scope is to support other, public or internal, MASES Group projects: open-source community and commercial entities can use it for their needs and support this project, moreover there are dedicated community and commercial subscription plans. The repository code and releases may contain bugs, the release cycle depends from critical discovered issues and/or enhancement requested from this or other projects. Looking for the help of Entity Framework Core and Apache Kafka™ experts? MASES Group can help you design, build, deploy, and manage Entity Framework Core and Apache Kafka™ applications. Scope of the project This project aims to create a provider to access the information stored within an Apache Kafka™ cluster using the paradigm behind Entity Framework. The project is based on available information within the official EntityFrameworkCore repository, many classes was copied from there as reported in the official documentation within the Microsoft website at https://docs.microsoft.com/en-us/ef/core/providers/writing-a-provider. Currently the project tries to support, at our best, the supported Apache Kafka™ binary distribution: KEFCore State Apache Kafka™ .NET JVM™ 2.6.* Active 4.0.* 8+ 17+ 2.5.* Active 3.9.* 8+ 11+ Community and Contribution Do you like the project? Request your free community subscription. Do you want to help us? put a ⭐ on this project open issues to request features or report bugs \uD83D\uDC1B improves the project with Pull Requests This project adheres to the Contributor Covenant code of conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to coc_reporting@masesgroup.com."
  },
  "articles/kafkadbcontext.html": {
    "href": "articles/kafkadbcontext.html",
    "title": "KafkaDbContext | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: KafkaDbContext KafkaDbContext is a special class which helps to define the DbContext and use Entity Framework Core provider for Apache Kafka™: KafkaDbContext inherits from DbContext: to define the model, and/or creating the database, see getting started in the docs and KEFCore usage KafkaDbContext defines the following properties: KeySerDesSelectorType: the .NET type to be used to allocate an external serializer for Apache Kafka™ record key ValueSerDesSelectorType: the .NET type to be used to allocate an external serializer for Apache Kafka™ record value ValueContainerType: the .NET type to be used to allocate an external container class for Apache Kafka™ record value UseNameMatching: set to false to avoid Entity matching based on Name BootstrapServers: the server hosting the broker of Apache Kafka™ ApplicationId: the application identifier used to identify the context DatabaseName: the user defined name which declares the database name, it is used to prepend every Topic which belongs to this database DefaultNumPartitions: the default number of partitions used when topics are created for each entity DefaultReplicationFactor: the replication factor to use when data are stored in Apache Kafka™ DefaultConsumerInstances: the consumer instances to be allocated when UseCompactedReplicator is true UsePersistentStorage: set to true to use a persistent storage between multiple application startup UseEnumeratorWithPrefetch: set to true to prefer enumerator instances able to do a prefetch on data speeding up execution, used if UseKNetStreams is true and UseCompactedReplicator is false UseByteBufferDataTransfer: set to true to prefer data exchange in serializer instances UseDeletePolicyForTopic: set to true to enable delete cleanup policy UseCompactedReplicator: Use KNetCompactedReplicator instead of Apache Kafka™ Streams to manage data to or from topics UseKNetStreams: Use KNet version of Apache Kafka™ Streams instead of standard Apache Kafka™ Streams, used if UseCompactedReplicator is false ConsumerConfig: parameters to use for Producer ProducerConfig: parameters to use for Producer StreamsConfig: parameters to use for Apche Kafka™ Streams application TopicConfig: parameters to use on topic creation for each entity OnChangeEvent: handler to receive change events from back-end How to use KafkaDbContext class The most simple example of usage can be found in KEFCore usage. By default, KafkaDbContext automatically manages OnConfiguring method of DbContext: KafkaDbContext checks the mandatory options like BootstrapServers and DbName KafkaDbContext setup the options needed to use an Apache Kafka™ cluster: default ConsumerConfig can be overridden using ConsumerConfig property of KafkaDbContext default ProducerConfig can be overridden using ProducerConfig property of KafkaDbContext default StreamsConfig can be overridden using StreamsConfig property of KafkaDbContext default TopicConfig can be overridden using TopicConfig property of KafkaDbContext Default ConsumerConfig Over the Apache Kafka™ defaults it applies: EnableAutoCommit is true AutoOffsetReset set to EARLIEST AllowAutoCreateTopics set to false Default ProducerConfig Does not change anything over the Apache Kafka™ defaults Default StreamsConfig Does not change anything over the Apache Kafka™ defaults Default TopicConfig Over the Apache Kafka™ defaults it applies: DeleteRetentionMs set to 100 ms MinCleanableDirtyRatio set to 0.01 SegmentMs set to 100 ms RetentionBytes set to 1073741824 bytes (1 Gb)"
  },
  "articles/roadmap.html": {
    "href": "articles/roadmap.html",
    "title": "Roadmap of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: roadmap The roadmap can be synthetized in the following points: [x] Create a first working provider starting from the code of InMemory provider [ ] Extends the first provider with new features able to create Apache Kafka™ Streams topology to retrieve information [x] Use KNetCompactedReplicator beside Apache Kafka™ Streams [x] Add external package to manage data serialization [x] Add Avro external package to manage data serialization [x] Add Templates package"
  },
  "articles/serialization.html": {
    "href": "articles/serialization.html",
    "title": "Serialization in KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: serialization Entity Framework Core provider for Apache Kafka™ shall convert the entities used within the model in something viable from the backend. Each backend has its own schema to convert entities into something else; database providers converts entities into database schema or blob in Cosmos. IMPORTANT NOTE: till the first major version, all releases shall be considered not stable: this means the API public, or internal, can change without notice. Basic concepts Entity Framework Core provider for Apache Kafka™ shall convert the entities into record will be stored in the topics of Apache Kafka™ cluster. The way the entities are converted shall follows a schema. The current schema follows a JSON pattern and reports the information of each entity as: Primary Key: Simple: if the Primary Key is a native type (e.g. int, long, double, and so on) the serialization is made using the Apache Kafka™ default serializer for that type Complex: if the Primary Key is a complex type (e.g. int-int, int-long, int-string, and so on), Entity Framework reports it as an array of objects and the serialization is made using a JSON serializer Entity data: the Entity is managed, from Entity Framework Core provider for Apache Kafka™, as an array of objects associated to properties of the Entity. The schema of the Apache Kafka™ record value follows the code definition in DefaultValueContainer<T>. Below two examples: { \"EntityName\": \"MASES.EntityFrameworkCore.KNet.Test.Blog\", \"ClrType\": \"MASES.EntityFrameworkCore.KNet.Test.Blog\", \"Data\": { \"0\": { \"PropertyName\": \"BlogId\", \"ClrType\": \"System.Int32\", \"Value\": 8 }, \"1\": { \"PropertyName\": \"Rating\", \"ClrType\": \"System.Int32\", \"Value\": 7 }, \"2\": { \"PropertyName\": \"Url\", \"ClrType\": \"System.String\", \"Value\": \"http://blogs.msdn.com/adonet7\" } } } { \"EntityName\": \"MASES.EntityFrameworkCore.KNet.Test.Post\", \"ClrType\": \"MASES.EntityFrameworkCore.KNet.Test.Post\", \"Data\": { \"0\": { \"PropertyName\": \"PostId\", \"ClrType\": \"System.Int32\", \"Value\": 44 }, \"1\": { \"PropertyName\": \"BlogId\", \"ClrType\": \"System.Int32\", \"Value\": 44 }, \"2\": { \"PropertyName\": \"Content\", \"ClrType\": \"System.String\", \"Value\": \"43\" }, \"3\": { \"PropertyName\": \"Title\", \"ClrType\": \"System.String\", \"Value\": \"title\" } } } The equivalent JSON schema is not available till now. Code and user override The code is based on three elements shall be available to Entity Framework Core provider for Apache Kafka™ in order to work: ValueContainer type: a type which encapsulate the Entity and stores needed information Key SerDes: the serializer of the Primary Key ValueContainer SerDes: the serializer of the ValueContainer Default types Entity Framework Core provider for Apache Kafka™ comes with some default values: ValueContainer class: KEFCore uses DefaultValueContainer<T> (i.e. DefaultKEFCoreSerDes.DefaultValueContainer) which stores the CLR type of Entity, the properties ordered by their index with associated CLT type, name and JSON serializaed value; the class is marked for JSON serialization and it is used from the ValueContainer SerDes; Key SerDes class: KEFCore uses DefaultKEFCoreSerDes.Key.JsonRaw<T> (i.e. DefaultKEFCoreSerDes.DefaultKeySerialization), the type automatically manages simple or complex Primary Key ValueContainer SerDes class: KEFCore uses DefaultKEFCoreSerDes.ValueContainer.JsonRaw<> (i.e. DefaultKEFCoreSerDes.DefaultValueContainerSerialization) Both Key and ValueContainer SerDes come with two kind of data transfer mechanisms: Raw: it uses byte arrays for data transfer Buffered: they use ByteBuffer for data transfer User override The default serialization can be overridden with user defined ValueContainer class, Key SerDes or ValueContainer SerDes. ValueContainer class A custom ValueContainer class must contains enough information and shall follow the following rules: must implements the IValueContainer<T> interface must be a generic type must have at least a default constructor and a constructor which accept two parameters: a first parameter which is IEntityType and a second paramater of object[] An example snippet is the follow: public class CustomValueContainer<TKey> : IValueContainer<TKey> where TKey : notnull { /// <summary> /// Initialize a new instance of <see cref=\"CustomValueContainer{TKey}\"/> /// </summary> /// <param name=\"tName\">The <see cref=\"IEntityType\"/> requesting the ValueContainer for <paramref name=\"rData\"/></param> /// <param name=\"rData\">The data, built from EFCore, to be stored in the ValueContainer</param> /// <remarks>This constructor is mandatory and it is used from KEFCore to request a ValueContainer</remarks> public CustomValueContainer(IEntityType tName, object[] rData) { } /// <inheritdoc/> public string EntityName { get; set; } /// <inheritdoc/> public string ClrType { get; set; } /// <inheritdoc/> public void GetData(IEntityType tName, ref object[] array) { } /// <inheritdoc/> public IReadOnlyDictionary<int, string> GetProperties() { // build properties } } Key SerDes and ValueContainer SerDes class A custom Key SerDes class shall follow the following rules: must implements the ISerDes<T> interface or extend SerDes<T> must be a generic type must have a parameterless constructor can store serialization information using Headers of Apache Kafka™ record (this information will be used from EntityExtractor) An example snippet is the follow based on JSON serializer: public class CustomKeySerDes<T> : SerDesRaw<T> { readonly byte[] keyTypeName = Encoding.UTF8.GetBytes(typeof(T).FullName!); readonly byte[] customSerDesName = Encoding.UTF8.GetBytes(typeof(CustomKeySerDes<>).FullName!); /// <inheritdoc cref=\"SerDes{T, TJVM}.Serialize(string, T)\"/> public override byte[] Serialize(string topic, T data) { return SerializeWithHeaders(topic, null, data); } /// <inheritdoc cref=\"SerDes{T, TJVM}.SerializeWithHeaders(string, Headers, T)\"/> public override byte[] SerializeWithHeaders(string topic, Headers headers, T data) { headers?.Add(KEFCoreSerDesNames.KeyTypeIdentifier, keyTypeName); headers?.Add(KEFCoreSerDesNames.KeySerializerIdentifier, customSerDesName); var jsonStr = System.Text.Json.JsonSerializer.Serialize<T>(data); return Encoding.UTF8.GetBytes(jsonStr); } /// <inheritdoc cref=\"SerDes{T, TJVM}.Deserialize(string, TJVM)\"/> public override T Deserialize(string topic, byte[] data) { return DeserializeWithHeaders(topic, null, data); } /// <inheritdoc cref=\"SerDes{T, TJVM}.DeserializeWithHeaders(string, Headers, TJVM)\"/> public override T DeserializeWithHeaders(string topic, Headers headers, byte[] data) { if (data == null || data.Length == 0) return default; return System.Text.Json.JsonSerializer.Deserialize<T>(data)!; } } public class CustomValueContainerSerDes<T> : SerDesRaw<T> { readonly byte[] valueContainerSerDesName = Encoding.UTF8.GetBytes(typeof(CustomValueContainerSerDes<>).FullName!); readonly byte[] valueContainerName = null!; /// <summary> /// Default initializer /// </summary> public CustomValueContainerSerDes() { var tt = typeof(T); if (tt.IsGenericType) { var keyT = tt.GetGenericArguments(); if (keyT.Length != 1) { throw new ArgumentException($\"{typeof(T).Name} does not contains a single generic argument and cannot be used because it is not a valid ValueContainer type\"); } var t = tt.GetGenericTypeDefinition(); if (t.GetInterface(typeof(IValueContainer<>).Name) != null) { valueContainerName = Encoding.UTF8.GetBytes(t.FullName!); return; } else throw new ArgumentException($\"{typeof(T).Name} does not implement IValueContainer<> and cannot be used because it is not a valid ValueContainer type\"); } throw new ArgumentException($\"{typeof(T).Name} is not a generic type and cannot be used as a valid ValueContainer type\"); } /// <inheritdoc cref=\"SerDes{T, TJVM}.Serialize(string, T)\"/> public override byte[] Serialize(string topic, T data) { return SerializeWithHeaders(topic, null, data); } /// <inheritdoc cref=\"SerDes{T, TJVM}.SerializeWithHeaders(string, Headers, T)\"/> public override byte[] SerializeWithHeaders(string topic, Headers headers, T data) { headers?.Add(KEFCoreSerDesNames.ValueContainerSerializerIdentifier, valueContainerSerDesName); headers?.Add(KEFCoreSerDesNames.ValueContainerIdentifier, valueContainerName); var jsonStr = System.Text.Json.JsonSerializer.Serialize<T>(data); return Encoding.UTF8.GetBytes(jsonStr); } /// <inheritdoc cref=\"SerDes{T, TJVM}.Deserialize(string, TJVM)\"/> public override T Deserialize(string topic, byte[] data) { return DeserializeWithHeaders(topic, null, data); } /// <inheritdoc cref=\"SerDes{T, TJVM}.DeserializeWithHeaders(string, Headers, TJVM)\"/> public override T DeserializeWithHeaders(string topic, Headers headers, byte[] data) { if (data == null || data.Length == 0) return default; return System.Text.Json.JsonSerializer.Deserialize<T>(data)!; } } How to use custom types KafkaDbContext contains three properties can be used to override the default types: KeySerializationType: set the value of the Key SerDes type in the form CustomSerDes<> ValueSerializationType: set the value of the ValueContainer SerDes type in the form CustomSerDes<> ValueContainerType: set the value of the ValueContainer type in the form CustomValueContainer<> IMPORTANT NOTE: the type applied in the previous properties of KafkaDbContext shall be a generic type definition, Entity Framework Core provider for Apache Kafka™ will apply the right generic type when needed. Avro serialization With package MASES.EntityFrameworkCore.KNet.Serialization.Avro an user can choose two different Avro serializers: The engine comes with two different encoders Binary Json Both Key and ValueContainer SerDes, Binary or Json, come with two kind of data transfer mechanisms: Raw: it uses byte arrays for data transfer Buffered: they use ByteBuffer for data transfer Avro schema The following schema is the default used from the engine and can be registered in Apache Schema registry so other applications can use it to extract the data stored in the topics: Complex Primary Key schema: { \"namespace\": \"MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage\", \"type\": \"record\", \"name\": \"AvroKeyContainer\", \"doc\": \"Represents the storage container type to be used from KEFCore for keys\", \"fields\": [ { \"name\": \"PrimaryKey\", \"type\": { \"type\": \"array\", \"items\": [ \"null\", \"boolean\", \"int\", \"long\", \"float\", \"double\", \"string\" ] } } ] } ValueContainer schema: { \"namespace\": \"MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage\", \"type\": \"record\", \"name\": \"AvroValueContainer\", \"doc\": \"Represents the storage container type to be used from KEFCore\", \"fields\": [ { \"name\": \"EntityName\", \"type\": \"string\" }, { \"name\": \"ClrType\", \"type\": \"string\" }, { \"name\": \"Data\", \"type\": { \"type\": \"array\", \"items\": { \"namespace\": \"MASES.EntityFrameworkCore.KNet.Serialization.Avro.Storage\", \"type\": \"record\", \"name\": \"PropertyDataRecord\", \"doc\": \"Represents the single container for Entity properties stored in AvroValueContainer and used from KEFCore\", \"fields\": [ { \"name\": \"PropertyIndex\", \"type\": \"int\" }, { \"name\": \"PropertyName\", \"type\": \"string\" }, { \"name\": \"ClrType\", \"type\": \"string\" }, { \"name\": \"Value\", \"type\": [ \"null\", \"boolean\", \"int\", \"long\", \"float\", \"double\", \"string\" ] } ] } } } ] } The extension converted this schema into code to speedup the exection of serialization/deserialization operations. How to use Avro KafkaDbContext contains three properties can be used to override the default types: KeySerializationType: set this value to AvroKEFCoreSerDes.Key.BinaryRaw<> or AvroKEFCoreSerDes.Key.JsonRaw<> or use AvroKEFCoreSerDes.DefaultKeySerialization (defaults to AvroKEFCoreSerDes.Key.BinaryRaw<>), both types automatically manages simple or complex Primary Key ValueSerializationType: set this value to AvroKEFCoreSerDes.ValueContainer.BinaryRaw<> or AvroKEFCoreSerDes.ValueContainer.JsonRaw<> or use AvroKEFCoreSerDes.DefaultValueContainerSerialization (defaults to AvroKEFCoreSerDes.ValueContainer.BinaryRaw<>) ValueContainerType: set this value to AvroValueContainerRaw<> or use AvroKEFCoreSerDes.DefaultValueContainer An example is: using (context = new BloggingContext() { BootstrapServers = \"KAFKA-SERVER:9092\", ApplicationId = \"MyAppid\", DbName = \"MyDBName\", KeySerializationType = UseAvroBinary ? typeof(AvroKEFCoreSerDes.Key.BinaryRaw<>) : typeof(AvroKEFCoreSerDes.Key.JsonRaw<>), ValueContainerType = typeof(AvroValueContainer<>), ValueSerializationType = UseAvroBinary ? typeof(AvroKEFCoreSerDes.ValueContainer.BinaryRaw<>) : typeof(AvroKEFCoreSerDes.ValueContainer.JsonRaw<>), }) { // execute stuff here } Protobuf serialization With package MASES.EntityFrameworkCore.KNet.Serialization.Protobuf an user can choose the Protobuf serializer. Both Key and ValueContainer SerDes come with two kind of data transfer mechanisms: Raw: it uses byte arrays for data transfer Buffered: they use ByteBuffer for data transfer Protobuf schema The following schema is the default used from the engine and can be registered in Apache Schema registry so other applications can use it to extract the data stored in the topics: Common multitype value: // [START declaration] syntax = \"proto3\"; package storage; import \"google/protobuf/struct.proto\"; import \"google/protobuf/timestamp.proto\"; // [END declaration] // [START java_declaration] option java_multiple_files = true; option java_package = \"mases.entityframeworkcore.knet.serialization.protobuf\"; option java_outer_classname = \"GenericValue\"; // [END java_declaration] // [START csharp_declaration] option csharp_namespace = \"MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage\"; // [END csharp_declaration] // [START messages] // Our address book file is just one of these. message GenericValue { // The kind of value. oneof kind { // Represents a null value. google.protobuf.NullValue null_value = 1; // Represents a boolean value. bool bool_value = 2; // Represents a int value. int32 byte_value = 3; // Represents a int value. int32 short_value = 4; // Represents a int value. int32 int_value = 5; // Represents a long value. int64 long_value = 6; // Represents a float value. float float_value = 7; // Represents a double value. double double_value = 8; // Represents a string value. string string_value = 9; // Represents a Guid value. bytes guid_value = 10; // Represents a Timestamp value. google.protobuf.Timestamp datetime_value = 11; // Represents a Timestamp value. google.protobuf.Timestamp datetimeoffset_value = 12; } } // [END messages] Complex Primary Key schema: // [START declaration] syntax = \"proto3\"; package storage; import \"GenericValue.proto\"; // [END declaration] // [START java_declaration] option java_multiple_files = true; option java_package = \"mases.entityframeworkcore.knet.serialization.protobuf\"; option java_outer_classname = \"KeyContainer\"; // [END java_declaration] // [START csharp_declaration] option csharp_namespace = \"MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage\"; // [END csharp_declaration] // [START messages] message PrimaryKeyType { repeated GenericValue values = 1; } // Our address book file is just one of these. message KeyContainer { PrimaryKeyType PrimaryKey = 1; } // [END messages] ValueContainer schema: // [START declaration] syntax = \"proto3\"; package storage; import \"GenericValue.proto\"; // [END declaration] // [START java_declaration] option java_multiple_files = true; option java_package = \"mases.entityframeworkcore.knet.serialization.protobuf\"; option java_outer_classname = \"ValueContainer\"; // [END java_declaration] // [START csharp_declaration] option csharp_namespace = \"MASES.EntityFrameworkCore.KNet.Serialization.Protobuf.Storage\"; // [END csharp_declaration] // [START messages] message PropertyDataRecord { int32 PropertyIndex = 1; string PropertyName = 2; string ClrType = 3; GenericValue Value = 4; } // Our address book file is just one of these. message ValueContainer { string EntityName = 1; string ClrType = 2; repeated PropertyDataRecord Data = 3; } // [END messages] The extension converted this schema into code to speedup the exection of serialization/deserialization operations. How to use Protobuf KafkaDbContext contains three properties can be used to override the default types: KeySerializationType: set this value to ProtobufKEFCoreSerDes.Key.BinaryRaw<> or use ProtobufKEFCoreSerDes.DefaultKeySerialization, the type automatically manages simple or complex Primary Key ValueSerializationType: set this value to ProtobufKEFCoreSerDes.ValueContainer.BinaryRaw<> or use ProtobufKEFCoreSerDes.DefaultValueContainerSerialization ValueContainerType: set this value to ProtobufValueContainerRaw<> or use ProtobufKEFCoreSerDes.DefaultValueContainer An example is: using (context = new BloggingContext() { BootstrapServers = \"KAFKA-SERVER:9092\", ApplicationId = \"MyAppid\", DbName = \"MyDBName\", KeySerializationType = typeof(ProtobufKEFCoreSerDes.Key<>), ValueContainerType = typeof(ProtobufValueContainer<>), ValueSerializationType = typeof(ProtobufKEFCoreSerDes.ValueContainer<>), }) { // execute stuff here }"
  },
  "articles/usage.html": {
    "href": "articles/usage.html",
    "title": "Usage of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore usage Read Getting started to find out info and tips. Basic example The following code demonstrates basic usage of Entity Framework Core provider for Apache Kafka™.. For a full tutorial configuring the KafkaDbContext, defining the model, and creating the database, see KafkaDbContext in the docs. using (var context = new BloggingContext() { BootstrapServers = serverToUse, ApplicationId = \"TestApplication\", DbName = \"TestDB\", }) { // Inserting data into the database db.Add(new Blog { Url = \"http://blogs.msdn.com/adonet\" }); db.SaveChanges(); // Querying var blog = db.Blogs .OrderBy(b => b.BlogId) .First(); // Updating blog.Url = \"https://devblogs.microsoft.com/dotnet\"; blog.Posts.Add( new Post { Title = \"Hello World\", Content = \"I wrote an app using EF Core!\" }); db.SaveChanges(); // Deleting db.Remove(blog); db.SaveChanges(); } public class BloggingContext : KafkaDbContext { public DbSet<Blog> Blogs { get; set; } public DbSet<Post> Posts { get; set; } } public class Blog { public int BlogId { get; set; } public string Url { get; set; } public long Rating { get; set; } public List<Post> Posts { get; set; } } public class Post { public int PostId { get; set; } public string Title { get; set; } public string Content { get; set; } public int BlogId { get; set; } public Blog Blog { get; set; } } Possible usages For possible usages of Entity Framework Core provider for Apache Kafka™, and this feature, see use cases"
  },
  "articles/usageTemplates.html": {
    "href": "articles/usageTemplates.html",
    "title": "Templates usage of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: Template Usage Guide For more information related to .NET templates look at https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new-sdk-templates. Installation To install the templates executes the following command within a command shell: dotnet new --install MASES.EntityFrameworkCore.KNet.Templates The command installs the latest version and on success will list all templates added to the list of available templates. There is single template: kefcoreApp: a project to create a console application using Entity Framework Core provider for Apache Kafka™ kefcoreAppWithEvents: a project to create a console application using Entity Framework Core provider for Apache Kafka™ which reports events when the back-end send back modifications Simple usage To use one of the available templates run the following command: dotnet new kefcoreApp the previous command will create a .NET project for an executable. The user shall modify the code to set-up, at least the Apache Kafka™ broker address, and then execute it against an Apache Kafka™ server. The kefcoreApp template create the topics and fill them, then execute queries on previously data loaded. The kefcoreAppWithEvents template create the topics and fill them, then execute queries on previously data loaded. While the data are received from the back-end the event handler is triggered so the user can take an action, current behavior is to report something in the console."
  },
  "articles/usecases.html": {
    "href": "articles/usecases.html",
    "title": "Use cases of KEFCore | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: use cases Entity Framework Core provider for Apache Kafka™ can be used in some operative conditions. Here a possible, non exhaustive list, of use cases. Before read following chapters it is important to understand how it works. Apache Kafka™ as Database The first use case can be coupled to a standard usage of Entity Framework Core, the same when it is used with database providers. In getting started is proposed a simple example following the online documentation. In the example the data within the model are stored in multiple Apache Kafka™ topics, each topic is correlated to the DbSet described from the DbContext. The constraints are managed using OnModelCreating of DbContext. A different way to define data within Apache Kafka™ topics Changing the mind about model, another use case can be coupled on how an Entity Framework Core model can be used. Starting from the model proposed in getting started, the data within the model are stored in multiple Apache Kafka™ topics. If the model is written in a way it describes the data to be stored within the topics it is possible to define an uncorrelated model containing the data of interest: public class ModelContext : KafkaDbContext { public DbSet<FirstData> FirstDatas { get; set; } public DbSet<SecondData> SecondDatas { get; set; } } public class FirstData { public int ItemId { get; set; } public string Data { get; set; } } public class SecondData { public int ItemId { get; set; } public string Data { get; set; } } Then using standard APIs of Entity Framework Core, an user interacting with Entity Framework Core can stores, or retrieves, data without any, or limited, knowledge of Apache Kafka™. Apache Kafka™ as distributed cache Changing the mind a model is written for, it is possible to define a set of classes which acts as storage for data we want to use as a cache. It is possible to build a new model like: public class CachingContext : KafkaDbContext { public DbSet<Item> Items { get; set; } } public class Item { public int ItemId { get; set; } public string Data { get; set; } } Sharing it between multiple applications and allocating the CachingContext in each application, the cache is shared and the same data are available. Apache Kafka™ as a triggered distributed cache Continuing from the previous use case, using the events reported from Entity Framework Core provider for Apache Kafka™ it is possible to write a reactive application. When a change event is triggered the application can react to it and take an action. SignalR The triggered distributed cache can be used side-by-side with SignalR: combining Entity Framework Core provider for Apache Kafka™ and SignalR in an application, subscribing to the change events, it is possible to feed the connected applications to SignalR. Redis The triggered distributed cache can be seen as a Redis backend. Data processing out-side Entity Framework Core application The schema used to write the information in the topics are available, or can be defined from the user, so an external application can use the data in many mode: Using the feature to extract the entities stored in the topics outside the application based on Entity Framework Core Use some features of Apache Kafka™ like Apache Kafka™ Streams or Apache Kafka™ Connect. External application An application, not based on Entity Framework Core, can subscribe to the topics to: store all change events to another medium analyze the data or the changes and so on Apache Kafka™ Streams Apache Kafka™ comes with the powerful Streams feature. An application based on Streams can analyze streams of data to extract some information or converts the data into something else. It is possible to build an application, based on Apache Kafka™ Streams, which hear on change events and produce something else or just sores them in another topic containing all events not only the latest (e.g. just like the transaction log of SQL Server does it). Apache Kafka™ Connect Apache Kafka™ comes with another powerful feature called Connect: it comes with some ready-made connector which connect Apache Kafka™ with other systems (database, storage, etc). There are sink or source connectors, each connector has its own specificity: Database: the data in the topics can be converted and stored in a database File: the data in the topics can be converted and stored in one, or more, files Other: there are many ready-made connectors or a connector can be built using a Connect SDK NOTE: While Apache Kafka™ Streams is an application running alone, Apache Kafka™ Connect can allocate the connectors using the distributed feature which load-balance the load and automatically restarts operation if something is going wrong."
  },
  "index.html": {
    "href": "index.html",
    "title": "Entity Framework Core provider for Apache Kafka™ | MASES Group - Entity Framework Core provider for Apache Kafka™",
    "summary": "KEFCore: Entity Framework Core provider for Apache Kafka™ KEFCore is the Entity Framework Core provider for Apache Kafka™. Based on KNet it allows to use Apache Kafka™ as a distributed database and more. Libraries and Tools Core Templates Json Serialization Avro Serialization Protobuf Serialization IMPORTANT NOTE: till the first major version, all releases shall be considered not stable: this means the API public, or internal, can change without notice. Project disclaimer KEFCore is a project, curated by MASES Group, can be supported by the open-source community. Its primary scope is to support other, public or internal, MASES Group projects: open-source community and commercial entities can use it for their needs and support this project, moreover there are dedicated community and commercial subscription plans. The repository code and releases may contain bugs, the release cycle depends from critical discovered issues and/or enhancement requested from this or other projects. Looking for the help of Entity Framework Core and Apache Kafka™ experts? MASES Group can help you design, build, deploy, and manage Entity Framework Core and Apache Kafka™ applications. Scope of the project This project aims to create a provider to access the information stored within an Apache Kafka™ cluster using the paradigm behind Entity Framework. The project is based on available information within the official EntityFrameworkCore repository, many classes was copied from there as reported in the official documentation within the Microsoft website at https://docs.microsoft.com/en-us/ef/core/providers/writing-a-provider. Currently the project tries to support, at our best, the supported Apache Kafka™ binary distribution: KEFCore State Apache Kafka™ .NET JVM™ 2.6.* Active 4.0.* 8+ 17+ 2.5.* Active 3.9.* 8+ 11+ Community and Contribution Do you like the project? Request your free community subscription. Do you want to help us? put a ⭐ on this project open issues to request features or report bugs \uD83D\uDC1B improves the project with Pull Requests This project adheres to the Contributor Covenant code of conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to coc_reporting@masesgroup.com. Summary Getting started How it works Usage Use cases Templates usage Serialization External application Roadmap Current state Runtime engine KEFCore uses KNet, and indeed JCOBridge with its features, to obtain many benefits: Cyber-security: JVM™ and CLR, or CoreCLR, runs in the same process, but are insulated from each other; JCOBridge does not make any code injection into JVM™; JCOBridge does not use any other communication mechanism than JNI; .NET (CLR) inherently inherits the cyber-security levels of running JVM™ and Apache Kafka™; Direct access the JVM™ from any .NET application: Any Java/Scala class behind Apache Kafka™ can be directly managed: Consumer, Producer, Administration, Streams, Server-side, and so on; No need to learn new APIs: we try to expose the same APIs in C# style; No extra validation cycle on protocol and functionality: bug fix, improvements, new features are immediately available; Documentation is shared; JCOBridge 2.6.* can be used for free without any obligations; you need to purchase a commercial license, or uninstall the software, if you have direct or indirect incomes from the product usage. JCOBridge resources Have a look at the following JCOBridge resources: JCOBridge 2.5.* series 2.6.* series KEFCore > 1.0.* series > 2.6.1 series Release notes Link Link Community Edition Conditions Conditions Commercial Edition Information Information Latest release: KAFKA is a registered trademark of The Apache Software Foundation. KEFCore has no affiliation with and is not endorsed by The Apache Software Foundation. Microsoft is a registered trademark of Microsoft Corporation. EntityFramework is a registered trademark of Microsoft Corporation."
  }
}